name: dart_package_workflow

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string

jobs:
  verify-dart-package:
    name: ☑️ Verify ${{ inputs.package_name }} Package (Dart)
    defaults:
      run:
        working-directory: packages/${{ inputs.package_name }}

    runs-on: "ubuntu-latest"
    timeout-minutes: 10

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🎯 Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "dev"

      - name: 📦 Install Dependencies
        run: dart pub get

      # TODO: No support for sealed classes in formatter now.
      # - name: ✨ Check Formatting
      #   if: github.event_name == 'pull_request'
      #   run: dart format --set-exit-if-changed .

      - name: 🕵️ Analyze Code
        uses: invertase/github-action-dart-analyzer@v1
        if: github.event_name == 'pull_request'
        with:
          working-directory: packages/${{ inputs.package_name }}
          fatal-warnings: true
          fatal-infos: true

      # TODO: Add these back when DCM will support Dart 3.
      # - name: 🔎 Dart Code Metrics
      #   uses: dart-code-checker/dart-code-metrics-action@v3
      #   if: github.event_name == 'pull_request'
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     folders: "lib test"
      #     relative_path: packages/${{ inputs.package_name }}
      #     pull_request_comment: true
      #     check_unused_files: true
      #     fatal_performance: true
      #     fatal_warnings: true
      #     fatal_style: true

      - name: 🧪 Run Tests
        run: |
          dart pub global activate coverage 1.6.2
          dart --enable-experiment=sealed-class test --coverage=coverage
          dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2.1.0
        if: github.event_name == 'pull_request'
        with:
          path: packages/${{ inputs.package_name }}/coverage/lcov.info
          exclude: "**/*.g.dart **/*.gen.dart **/data/*.dart"
          min_coverage: 95

      - name: 💯 Upload Coverage
        uses: codecov/codecov-action@v3
        if: github.event_name != 'pull_request'
        with:
          flags: ${{ inputs.package_name }}
          name: ${{ inputs.package_name }}
          token: ${{ secrets.CODECOV_TOKEN }}