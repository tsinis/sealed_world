name: verify_packages

on:
  push:
    branches: [main]
    paths:
      - "packages/**"
  pull_request:
    branches: [main]
    paths:
      - "packages/**"
      - ".github/workflows/verify_packages.yaml"

jobs:
  detect-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - id: set-packages
        run: |
          # Debug information
          echo "Event name: ${{ github.event_name }}"
          echo "GitHub ref: ${{ github.ref }}"

          # For PRs, compare with base branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            HEAD_SHA=${{ github.event.pull_request.head.sha }}
          else
            # For pushes, compare with previous commit
            BASE_SHA=$(git rev-parse HEAD^)
            HEAD_SHA=$(git rev-parse HEAD)
          fi

          echo "Base SHA: $BASE_SHA"
          echo "Head SHA: $HEAD_SHA"

          # Show raw diff output for debugging
          echo "Changed files:"
          git diff --name-only $BASE_SHA $HEAD_SHA -- 'packages/**/*.dart'

          # Get changed files and extract unique package names with debug output
          PACKAGES=$(git diff --name-only $BASE_SHA $HEAD_SHA -- 'packages/**/*.dart' | tee >(cat >&2) | \
            grep -v "_" | tee >(echo "After underscore filter:" >&2) | \
            cut -d'/' -f2 | tee >(echo "After path extraction:" >&2) | \
            sort -u | tee >(echo "After unique sort:" >&2) | \
            grep -v '^$' | tee >(echo "After empty line removal:" >&2) | \
            jq -R -s -c 'split("\n")[:-1]')

          # Debug final output
          echo "Final PACKAGES value: $PACKAGES"
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  verify-packages:
    needs: detect-packages
    if: fromJson(needs.detect-packages.outputs.packages)[0] != null
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.detect-packages.outputs.packages) }}
    uses: ./.github/workflows/verify_package_workflow.yaml
    with:
      package_name: ${{ matrix.package }}
      is_flutter: ${{ contains(matrix.package, 'world_') }}
    secrets: inherit
