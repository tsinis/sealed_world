name: verify_package_workflow

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      is_flutter:
        required: false
        default: false
        type: boolean
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  verify-package:
    env:
      relative_path: packages/${{ inputs.package_name }}
    name: ⏳ Verify ${{ inputs.package_name }} Package
    defaults:
      run:
        working-directory: ${{ env.relative_path }}

    runs-on: "ubuntu-latest"
    timeout-minutes: 12

    steps:
      - name: 📚 Git checkout
        uses: actions/checkout@v4.1.3

      - name: 🎯 Setup Dart
        if: ${{ !inputs.is_flutter }}
        uses: dart-lang/setup-dart@v1.6.4
        with:
          sdk: "stable"

      - name: 🐦 Setup Flutter
        if: ${{ inputs.is_flutter }}
        uses: subosito/flutter-action@v2.16.0
        with:
          cache: true
          channel: "stable"
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: 📦 Install dependencies
        run: dart pub get

      - name: 🕵️ Analyze code
        uses: ValentinVignal/action-dart-analyze@v0.16
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fail-on: 'format'
          token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ env.relative_path }}
          format: true

      - name: 🏜️ Publish - dry run
        if: ${{ github.event_name == 'pull_request' }}
        run: dart pub publish --dry-run

      - name: 🧮 Calculate PANA score
        if: ${{ github.event_name == 'pull_request' }}
        uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          relativePath: ${{ env.relative_path }}

      - name: 📈 Check Pub score
        if: ${{ github.event_name == 'pull_request' }}
        uses: fujidaiti/dart-package-inspector@v2.0.0
        with:
          report: ${{ steps.analysis.outputs.json_output }}
          min-pub-points: 130

      - name: 🛂 Set up file system write permissions
        run: sudo chown -R runner:runner $(pwd) && sudo chmod -R 777 $(pwd)

      - name: 🔎 Dart Code Metrics
        if: ${{ github.event_name == 'pull_request' }}
        run: dart run dart_code_metrics:metrics --fatal-style --fatal-performance --fatal-warnings -r github lib test

      - name: 🧪 Run Dart tests
        if: ${{ !inputs.is_flutter }}
        run: |
          dart test --fail-fast --coverage=coverage
          dart run coverage:format_coverage -c -l -i coverage -o coverage/lcov.info --report-on=lib

      - name: 🧪 Run Flutter tests
        if: ${{ inputs.is_flutter }}
        run: flutter test --coverage --no-pub

      - name: 📊 Check code coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3.0.0
        with:
          path: ${{ env.relative_path }}/coverage/lcov.info
          exclude: "**/*.g.dart **/*.data.dart **/*.l10n.dart"
          min_coverage: 99

      - name: 💯 Upload coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ env.relative_path }}/coverage/lcov.info
          flags: ${{ inputs.package_name }}
          name: ${{ inputs.package_name }}
          override_branch: ${{ github.base_ref }}
          verbose: true