// ignore_for_file: deprecated_member_use, it's TODO!,

import "package:_sealed_world_tests/sealed_world_tests.dart";
import "package:l10n_currencies/l10n_currencies.dart";
import "package:sealed_currencies/src/model/currency/currency.dart";
import "package:sealed_languages/sealed_languages.dart";
import "package:test/test.dart";

void main() => group("IsoTranslatedIterableExtension", tags: "generated", () {
      const parser = LocalizationDelegate();
      final locales =
          CurrenciesLocaleMapper().map.keys.map(parser.parseLocale).nonNulls;

      const noFallbackMap = {
        "af": 159,
        "ak": 50,
        "am": 159,
        "ar": 159,
        "as": 159,
        "az": 159,
        "az_Cyrl": 159,
        "be": 159,
        "bg": 159,
        "bm": 51,
        "bn": 159,
        "bo": 3,
        "br": 159,
        "bs": 159,
        "bs_Cyrl": 159,
        "ca": 159,
        "ce": 156,
        "cs": 159,
        "cv": 134,
        "cy": 159,
        "da": 159,
        "de": 159,
        "de_CH": 159,
        "dz": 74,
        "ee": 155,
        "el": 159,
        "en": 159,
        "en_AU": 158,
        "en_GG": 151,
        "es": 159,
        "es_CL": 109,
        "es_GT": 109,
        "es_MX": 157,
        "et": 159,
        "eu": 159,
        "fa": 159,
        "fa_AF": 159,
        "ff": 146,
        "ff_GN": 146,
        "fi": 159,
        "fo": 156,
        "fr": 159,
        "fr_CA": 159,
        "fy": 159,
        "ga": 159,
        "gd": 159,
        "gl": 159,
        "gu": 159,
        "ha": 145,
        "ha_GH": 145,
        "he": 159,
        "hi": 159,
        "hr": 159,
        "hu": 159,
        "hy": 159,
        "ia": 134,
        "id": 159,
        "ig": 135,
        "ii": 1,
        "is": 159,
        "it": 159,
        "ja": 159,
        "jv": 134,
        "ka": 159,
        "ki": 51,
        "kk": 159,
        "kl": 2,
        "km": 159,
        "kn": 159,
        "ko": 159,
        "ks": 149,
        "ku": 134,
        "ky": 159,
        "lb": 159,
        "lg": 51,
        "ln": 51,
        "lo": 159,
        "lt": 159,
        "lu": 51,
        "lv": 159,
        "mg": 51,
        "mi": 135,
        "mk": 159,
        "ml": 159,
        "mn": 159,
        "mr": 159,
        "ms": 159,
        "mt": 148,
        "my": 159,
        "nb": 159,
        "nd": 51,
        "ne": 159,
        "nl": 159,
        "nn": 159,
        "no": 159,
        "om": 4,
        "om_KE": 4,
        "or": 159,
        "os": 6,
        "pa": 159,
        "pa_Arab": 159,
        "pl": 159,
        "ps": 159,
        "pt": 159,
        "pt_MO": 92,
        "pt_MZ": 92,
        "pt_PT": 157,
        "qu": 3,
        "qu_BO": 2,
        "qu_EC": 3,
        "rm": 159,
        "rn": 49,
        "ro": 159,
        "ru": 159,
        "rw": 1,
        "sa": 1,
        "sc": 138,
        "sd": 1,
        "se": 9,
        "sg": 51,
        "si": 159,
        "sk": 159,
        "sl": 159,
        "sn": 51,
        "so": 136,
        "so_KE": 136,
        "sq": 159,
        "sr": 159,
        "sr_Latn": 159,
        "su": 1,
        "sv": 159,
        "sw": 159,
        "sw_CD": 159,
        "ta": 159,
        "te": 159,
        "tg": 1,
        "th": 159,
        "ti": 10,
        "ti_ER": 10,
        "tk": 138,
        "tl": 159,
        "to": 10,
        "tr": 159,
        "ug": 159,
        "uk": 159,
        "ur": 159,
        "ur_IN": 159,
        "uz": 159,
        "uz_Arab": 102,
        "uz_Cyrl": 158,
        "vi": 159,
        "wo": 1,
        "xh": 134,
        "yi": 11,
        "yo": 144,
        "yo_BJ": 144,
        "zh": 159,
        "zh_HK": 65,
        "zh_Hans_HK": 13,
        "zh_Hant": 157,
        "zu": 159,
      };

      const withFallbackMap = {
        "af": 159,
        "ak": 50,
        "am": 159,
        "ar": 159,
        "as": 159,
        "az": 159,
        "az_Cyrl": 159,
        "be": 159,
        "bg": 159,
        "bm": 51,
        "bn": 159,
        "bo": 3,
        "br": 159,
        "bs": 159,
        "bs_Cyrl": 159,
        "ca": 159,
        "ce": 156,
        "cs": 159,
        "cv": 134,
        "cy": 159,
        "da": 159,
        "de": 159,
        "de_CH": 159,
        "dz": 74,
        "ee": 155,
        "el": 159,
        "en": 159,
        "en_AU": 159,
        "en_GG": 159,
        "es": 159,
        "es_CL": 159,
        "es_GT": 159,
        "es_MX": 159,
        "et": 159,
        "eu": 159,
        "fa": 159,
        "fa_AF": 159,
        "ff": 146,
        "ff_GN": 146,
        "fi": 159,
        "fo": 156,
        "fr": 159,
        "fr_CA": 159,
        "fy": 159,
        "ga": 159,
        "gd": 159,
        "gl": 159,
        "gu": 159,
        "ha": 145,
        "ha_GH": 145,
        "he": 159,
        "hi": 159,
        "hr": 159,
        "hu": 159,
        "hy": 159,
        "ia": 134,
        "id": 159,
        "ig": 135,
        "ii": 1,
        "is": 159,
        "it": 159,
        "ja": 159,
        "jv": 134,
        "ka": 159,
        "ki": 51,
        "kk": 159,
        "kl": 2,
        "km": 159,
        "kn": 159,
        "ko": 159,
        "ks": 149,
        "ku": 134,
        "ky": 159,
        "lb": 159,
        "lg": 51,
        "ln": 51,
        "lo": 159,
        "lt": 159,
        "lu": 51,
        "lv": 159,
        "mg": 51,
        "mi": 135,
        "mk": 159,
        "ml": 159,
        "mn": 159,
        "mr": 159,
        "ms": 159,
        "mt": 148,
        "my": 159,
        "nb": 159,
        "nd": 51,
        "ne": 159,
        "nl": 159,
        "nn": 159,
        "no": 159,
        "om": 4,
        "om_KE": 4,
        "or": 159,
        "os": 6,
        "pa": 159,
        "pa_Arab": 159,
        "pl": 159,
        "ps": 159,
        "pt": 159,
        "pt_MO": 159,
        "pt_MZ": 159,
        "pt_PT": 159,
        "qu": 3,
        "qu_BO": 3,
        "qu_EC": 3,
        "rm": 159,
        "rn": 49,
        "ro": 159,
        "ru": 159,
        "rw": 1,
        "sa": 1,
        "sc": 138,
        "sd": 1,
        "se": 9,
        "sg": 51,
        "si": 159,
        "sk": 159,
        "sl": 159,
        "sn": 51,
        "so": 136,
        "so_KE": 136,
        "sq": 159,
        "sr": 159,
        "sr_Latn": 159,
        "su": 1,
        "sv": 159,
        "sw": 159,
        "sw_CD": 159,
        "ta": 159,
        "te": 159,
        "tg": 1,
        "th": 159,
        "ti": 10,
        "ti_ER": 10,
        "tk": 138,
        "tl": 159,
        "to": 10,
        "tr": 159,
        "ug": 159,
        "uk": 159,
        "ur": 159,
        "ur_IN": 159,
        "uz": 159,
        "uz_Arab": 159,
        "uz_Cyrl": 159,
        "vi": 159,
        "wo": 1,
        "xh": 134,
        "yi": 11,
        "yo": 144,
        "yo_BJ": 144,
        "zh": 159,
        "zh_HK": 159,
        "zh_Hans_HK": 159,
        "zh_Hant": 159,
        "zu": 159,
      };

      group("commonNamesCacheMap", () {
        group(
          "should have specific amount of translations for every locale",
          () {
            for (final locale in locales) {
              final stringLocale = locale.toString();
              test("should have data for $stringLocale", () {
                final withFallbackData =
                    FiatCurrency.list.commonNamesCacheMap(locale);
                final noFallbackData = FiatCurrency.list
                    .commonNamesCacheMap(locale, useLanguageFallback: false);

                expect(withFallbackData.length, withFallbackMap[stringLocale]);
                expect(noFallbackData.length, noFallbackMap[stringLocale]);
              });
            }
          },
        );
      });

      group("commonNamesMap", () {
        const altLocaleMap = {
          "bs": "bs_Cyrl",
          "ff": "ff_GN",
          "om": "om_KE",
          "qu": "qu_BO",
          "qu_BO": "qu_EC",
          "qu_EC": "qu_BO",
        };

        group(
          "should have specific amount of translations for every locale",
          () {
            for (final locale in locales) {
              final stringLocale = locale.toString();
              performanceTest("should have data for $stringLocale", () {
                final maybeFallback =
                    parser.parseLocale(altLocaleMap[stringLocale]);
                final withFallbackData = FiatCurrency.list.commonNamesMap(
                  options: LocaleMappingOptions(
                    mainLocale: locale,
                    fallbackLocale: maybeFallback,
                  ),
                );
                expect(
                  withFallbackData.length,
                  withFallbackMap[stringLocale],
                );
              });
            }
          },
        );
      });
    });
