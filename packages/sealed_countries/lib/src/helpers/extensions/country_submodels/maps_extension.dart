import "package:sealed_currencies/sealed_currencies.dart";

import "../../../model/country/submodels/maps.dart";

/// Provides extension methods for [Maps] class.
/// {@macro submodels_class_extension}
extension MapsExtension on Maps {
  /// {@macro copy_with_method}
  Maps copyWith({String? googleMaps, String? openStreetMaps}) => Maps(
        googleMaps: googleMaps ?? this.googleMaps,
        openStreetMaps: openStreetMaps ?? this.openStreetMaps,
      );

  /// {@macro to_map_method}
  Map<String, String> toMap() =>
      {"googleMaps": googleMaps, "openStreetMaps": openStreetMaps};

  /// {@macro from_map_method}
  static Maps fromMap(JsonMap map) => Maps(
        googleMaps: map["googleMaps"].toString(),
        openStreetMaps: map["openStreetMaps"].toString(),
      );

  /// Returns the full Google Maps URL for this [Maps] object.
  ///
  /// The returned URL is generated by concatenating the `googleMapsPrefix` and
  /// the [googleMaps] field of this object.
  ///
  /// Example usage:
  ///
  /// ```dart
  /// final maps = Maps(googleMaps: "abcdefg", openStreetMaps: "123456789");
  /// print(maps.googleMapsUrl); // Output: "https://goo.gl/maps/abcdefg"
  /// ```
  String get googleMapsUrl => Maps.googleMapsPrefix + googleMaps;

  /// Returns the full OpenStreetMap URL for this [Maps] object.
  ///
  /// The returned URL is generated by concatenating the `openStreetMapsPrefix`
  /// and the [openStreetMaps] field of this object.
  ///
  /// Example usage:
  ///
  /// ```dart
  /// final maps = Maps(googleMaps: "abcdefg", openStreetMaps: "123456789");
  /// print(maps.openStreetMapsUrl); // Output: "https://www.openstreetmap.org/123456789"
  /// ```
  String get openStreetMapsUrl => Maps.openStreetMapsPrefix + openStreetMaps;
}
