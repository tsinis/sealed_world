// GENERATED CODE - DO NOT MODIFY BY HAND

part of "../language_family.dart";

extension NaturalLanguageFamilyFunctional on NaturalLanguageFamily {
  R map<R>({
    required R Function(NaturalLanguageFamily afroAsiatic) afroAsiatic,
    required R Function(NaturalLanguageFamily algonquian) algonquian,
    required R Function(NaturalLanguageFamily austroasiatic) austroasiatic,
    required R Function(NaturalLanguageFamily austronesian) austronesian,
    required R Function(NaturalLanguageFamily aymaran) aymaran,
    required R Function(NaturalLanguageFamily constructed) constructed,
    required R Function(NaturalLanguageFamily creole) creole,
    required R Function(NaturalLanguageFamily deneYeniseian) deneYeniseian,
    required R Function(NaturalLanguageFamily dravidian) dravidian,
    required R Function(NaturalLanguageFamily eskimoAleut) eskimoAleut,
    required R Function(NaturalLanguageFamily indoEuropean) indoEuropean,
    required R Function(NaturalLanguageFamily japonic) japonic,
    required R Function(NaturalLanguageFamily koreanic) koreanic,
    required R Function(NaturalLanguageFamily languageIsolate) languageIsolate,
    required R Function(NaturalLanguageFamily mongolic) mongolic,
    required R Function(NaturalLanguageFamily nigerCongo) nigerCongo,
    required R Function(NaturalLanguageFamily niloSaharan) niloSaharan,
    required R Function(NaturalLanguageFamily northeastCaucasian)
        northeastCaucasian,
    required R Function(NaturalLanguageFamily northwestCaucasian)
        northwestCaucasian,
    required R Function(NaturalLanguageFamily quechuan) quechuan,
    required R Function(NaturalLanguageFamily sinoTibetan) sinoTibetan,
    required R Function(NaturalLanguageFamily southCaucasian) southCaucasian,
    required R Function(NaturalLanguageFamily taiKadai) taiKadai,
    required R Function(NaturalLanguageFamily tupian) tupian,
    required R Function(NaturalLanguageFamily turkic) turkic,
    required R Function(NaturalLanguageFamily uralic) uralic,
  }) =>
      switch (this) {
        AfroAsiatic() => afroAsiatic(this),
        Algonquian() => algonquian(this),
        Austroasiatic() => austroasiatic(this),
        Austronesian() => austronesian(this),
        Aymaran() => aymaran(this),
        Constructed() => constructed(this),
        Creole() => creole(this),
        DeneYeniseian() => deneYeniseian(this),
        Dravidian() => dravidian(this),
        IndoEuropean() => indoEuropean(this),
        Japonic() => japonic(this),
        Koreanic() => koreanic(this),
        LanguageIsolate() => languageIsolate(this),
        Mongolic() => mongolic(this),
        NigerCongo() => nigerCongo(this),
        NiloSaharan() => niloSaharan(this),
        NortheastCaucasian() => northeastCaucasian(this),
        NorthwestCaucasian() => northwestCaucasian(this),
        Quechuan() => quechuan(this),
        SinoTibetan() => sinoTibetan(this),
        SouthCaucasian() => southCaucasian(this),
        TaiKadai() => taiKadai(this),
        Tupian() => tupian(this),
        Turkic() => turkic(this),
        EskimoAleut() => eskimoAleut(this),
        Uralic() => uralic(this),
        _ => throw ArgumentError("Unknown value: $this", name)
      };

  R maybeMap<R>({
    required R Function(NaturalLanguageFamily family) orElse,
    R Function(NaturalLanguageFamily afroAsiatic)? afroAsiatic,
    R Function(NaturalLanguageFamily algonquian)? algonquian,
    R Function(NaturalLanguageFamily austroasiatic)? austroasiatic,
    R Function(NaturalLanguageFamily austronesian)? austronesian,
    R Function(NaturalLanguageFamily aymaran)? aymaran,
    R Function(NaturalLanguageFamily constructed)? constructed,
    R Function(NaturalLanguageFamily creole)? creole,
    R Function(NaturalLanguageFamily deneYeniseian)? deneYeniseian,
    R Function(NaturalLanguageFamily dravidian)? dravidian,
    R Function(NaturalLanguageFamily eskimoAleut)? eskimoAleut,
    R Function(NaturalLanguageFamily indoEuropean)? indoEuropean,
    R Function(NaturalLanguageFamily japonic)? japonic,
    R Function(NaturalLanguageFamily koreanic)? koreanic,
    R Function(NaturalLanguageFamily languageIsolate)? languageIsolate,
    R Function(NaturalLanguageFamily mongolic)? mongolic,
    R Function(NaturalLanguageFamily nigerCongo)? nigerCongo,
    R Function(NaturalLanguageFamily niloSaharan)? niloSaharan,
    R Function(NaturalLanguageFamily northeastCaucasian)? northeastCaucasian,
    R Function(NaturalLanguageFamily northwestCaucasian)? northwestCaucasian,
    R Function(NaturalLanguageFamily quechuan)? quechuan,
    R Function(NaturalLanguageFamily sinoTibetan)? sinoTibetan,
    R Function(NaturalLanguageFamily southCaucasian)? southCaucasian,
    R Function(NaturalLanguageFamily taiKadai)? taiKadai,
    R Function(NaturalLanguageFamily tupian)? tupian,
    R Function(NaturalLanguageFamily turkic)? turkic,
    R Function(NaturalLanguageFamily uralic)? uralic,
  }) =>
      switch (this) {
        AfroAsiatic() => afroAsiatic?.call(this) ?? orElse(this),
        Algonquian() => algonquian?.call(this) ?? orElse(this),
        Austroasiatic() => austroasiatic?.call(this) ?? orElse(this),
        Austronesian() => austronesian?.call(this) ?? orElse(this),
        Aymaran() => aymaran?.call(this) ?? orElse(this),
        Constructed() => constructed?.call(this) ?? orElse(this),
        Creole() => creole?.call(this) ?? orElse(this),
        DeneYeniseian() => deneYeniseian?.call(this) ?? orElse(this),
        Dravidian() => dravidian?.call(this) ?? orElse(this),
        IndoEuropean() => indoEuropean?.call(this) ?? orElse(this),
        Japonic() => japonic?.call(this) ?? orElse(this),
        Koreanic() => koreanic?.call(this) ?? orElse(this),
        LanguageIsolate() => languageIsolate?.call(this) ?? orElse(this),
        Mongolic() => mongolic?.call(this) ?? orElse(this),
        NigerCongo() => nigerCongo?.call(this) ?? orElse(this),
        NiloSaharan() => niloSaharan?.call(this) ?? orElse(this),
        NortheastCaucasian() => northeastCaucasian?.call(this) ?? orElse(this),
        NorthwestCaucasian() => northwestCaucasian?.call(this) ?? orElse(this),
        Quechuan() => quechuan?.call(this) ?? orElse(this),
        SinoTibetan() => sinoTibetan?.call(this) ?? orElse(this),
        SouthCaucasian() => southCaucasian?.call(this) ?? orElse(this),
        TaiKadai() => taiKadai?.call(this) ?? orElse(this),
        Tupian() => tupian?.call(this) ?? orElse(this),
        Turkic() => turkic?.call(this) ?? orElse(this),
        EskimoAleut() => eskimoAleut?.call(this) ?? orElse(this),
        Uralic() => uralic?.call(this) ?? orElse(this),
        _ => orElse(this),
      };

  R maybeWhen<R>({
    required R Function() orElse,
    R Function()? afroAsiatic,
    R Function()? algonquian,
    R Function()? austroasiatic,
    R Function()? austronesian,
    R Function()? aymaran,
    R Function()? constructed,
    R Function()? creole,
    R Function()? deneYeniseian,
    R Function()? dravidian,
    R Function()? eskimoAleut,
    R Function()? indoEuropean,
    R Function()? japonic,
    R Function()? koreanic,
    R Function()? languageIsolate,
    R Function()? mongolic,
    R Function()? nigerCongo,
    R Function()? niloSaharan,
    R Function()? northeastCaucasian,
    R Function()? northwestCaucasian,
    R Function()? quechuan,
    R Function()? sinoTibetan,
    R Function()? southCaucasian,
    R Function()? taiKadai,
    R Function()? tupian,
    R Function()? turkic,
    R Function()? uralic,
  }) =>
      switch (this) {
        AfroAsiatic() => afroAsiatic?.call() ?? orElse(),
        Algonquian() => algonquian?.call() ?? orElse(),
        Austroasiatic() => austroasiatic?.call() ?? orElse(),
        Austronesian() => austronesian?.call() ?? orElse(),
        Aymaran() => aymaran?.call() ?? orElse(),
        Constructed() => constructed?.call() ?? orElse(),
        Creole() => creole?.call() ?? orElse(),
        DeneYeniseian() => deneYeniseian?.call() ?? orElse(),
        Dravidian() => dravidian?.call() ?? orElse(),
        IndoEuropean() => indoEuropean?.call() ?? orElse(),
        Japonic() => japonic?.call() ?? orElse(),
        Koreanic() => koreanic?.call() ?? orElse(),
        LanguageIsolate() => languageIsolate?.call() ?? orElse(),
        Mongolic() => mongolic?.call() ?? orElse(),
        NigerCongo() => nigerCongo?.call() ?? orElse(),
        NiloSaharan() => niloSaharan?.call() ?? orElse(),
        NortheastCaucasian() => northeastCaucasian?.call() ?? orElse(),
        NorthwestCaucasian() => northwestCaucasian?.call() ?? orElse(),
        Quechuan() => quechuan?.call() ?? orElse(),
        SinoTibetan() => sinoTibetan?.call() ?? orElse(),
        SouthCaucasian() => southCaucasian?.call() ?? orElse(),
        TaiKadai() => taiKadai?.call() ?? orElse(),
        Tupian() => tupian?.call() ?? orElse(),
        Turkic() => turkic?.call() ?? orElse(),
        EskimoAleut() => eskimoAleut?.call() ?? orElse(),
        Uralic() => uralic?.call() ?? orElse(),
        _ => orElse(),
      };

  R when<R>({
    required R Function() afroAsiatic,
    required R Function() algonquian,
    required R Function() austroasiatic,
    required R Function() austronesian,
    required R Function() aymaran,
    required R Function() constructed,
    required R Function() creole,
    required R Function() deneYeniseian,
    required R Function() dravidian,
    required R Function() eskimoAleut,
    required R Function() indoEuropean,
    required R Function() japonic,
    required R Function() koreanic,
    required R Function() languageIsolate,
    required R Function() mongolic,
    required R Function() nigerCongo,
    required R Function() niloSaharan,
    required R Function() northeastCaucasian,
    required R Function() northwestCaucasian,
    required R Function() quechuan,
    required R Function() sinoTibetan,
    required R Function() southCaucasian,
    required R Function() taiKadai,
    required R Function() tupian,
    required R Function() turkic,
    required R Function() uralic,
  }) =>
      switch (this) {
        AfroAsiatic() => afroAsiatic(),
        Algonquian() => algonquian(),
        Austroasiatic() => austroasiatic(),
        Austronesian() => austronesian(),
        Aymaran() => aymaran(),
        Constructed() => constructed(),
        Creole() => creole(),
        DeneYeniseian() => deneYeniseian(),
        Dravidian() => dravidian(),
        IndoEuropean() => indoEuropean(),
        Japonic() => japonic(),
        Koreanic() => koreanic(),
        LanguageIsolate() => languageIsolate(),
        Mongolic() => mongolic(),
        NigerCongo() => nigerCongo(),
        NiloSaharan() => niloSaharan(),
        NortheastCaucasian() => northeastCaucasian(),
        NorthwestCaucasian() => northwestCaucasian(),
        Quechuan() => quechuan(),
        SinoTibetan() => sinoTibetan(),
        SouthCaucasian() => southCaucasian(),
        TaiKadai() => taiKadai(),
        Tupian() => tupian(),
        Turkic() => turkic(),
        EskimoAleut() => eskimoAleut(),
        Uralic() => uralic(),
        _ => throw ArgumentError("Unknown value: $this", name),
      };

  R? whenOrNull<R>({
    R Function()? afroAsiatic,
    R Function()? algonquian,
    R Function()? austroasiatic,
    R Function()? austronesian,
    R Function()? aymaran,
    R Function()? constructed,
    R Function()? creole,
    R Function()? deneYeniseian,
    R Function()? dravidian,
    R Function()? eskimoAleut,
    R Function()? indoEuropean,
    R Function()? japonic,
    R Function()? koreanic,
    R Function()? languageIsolate,
    R Function()? mongolic,
    R Function()? nigerCongo,
    R Function()? niloSaharan,
    R Function()? northeastCaucasian,
    R Function()? northwestCaucasian,
    R Function()? quechuan,
    R Function()? sinoTibetan,
    R Function()? southCaucasian,
    R Function()? taiKadai,
    R Function()? tupian,
    R Function()? turkic,
    R Function()? uralic,
    R Function()? orElse,
  }) =>
      switch (this) {
        AfroAsiatic() => afroAsiatic?.call() ?? orElse?.call(),
        Algonquian() => algonquian?.call() ?? orElse?.call(),
        Austroasiatic() => austroasiatic?.call() ?? orElse?.call(),
        Austronesian() => austronesian?.call() ?? orElse?.call(),
        Aymaran() => aymaran?.call() ?? orElse?.call(),
        Constructed() => constructed?.call() ?? orElse?.call(),
        Creole() => creole?.call() ?? orElse?.call(),
        DeneYeniseian() => deneYeniseian?.call() ?? orElse?.call(),
        Dravidian() => dravidian?.call() ?? orElse?.call(),
        IndoEuropean() => indoEuropean?.call() ?? orElse?.call(),
        Japonic() => japonic?.call() ?? orElse?.call(),
        Koreanic() => koreanic?.call() ?? orElse?.call(),
        LanguageIsolate() => languageIsolate?.call() ?? orElse?.call(),
        Mongolic() => mongolic?.call() ?? orElse?.call(),
        NigerCongo() => nigerCongo?.call() ?? orElse?.call(),
        NiloSaharan() => niloSaharan?.call() ?? orElse?.call(),
        NortheastCaucasian() => northeastCaucasian?.call() ?? orElse?.call(),
        NorthwestCaucasian() => northwestCaucasian?.call() ?? orElse?.call(),
        Quechuan() => quechuan?.call() ?? orElse?.call(),
        SinoTibetan() => sinoTibetan?.call() ?? orElse?.call(),
        SouthCaucasian() => southCaucasian?.call() ?? orElse?.call(),
        TaiKadai() => taiKadai?.call() ?? orElse?.call(),
        Tupian() => tupian?.call() ?? orElse?.call(),
        Turkic() => turkic?.call() ?? orElse?.call(),
        EskimoAleut() => eskimoAleut?.call() ?? orElse?.call(),
        Uralic() => uralic?.call() ?? orElse?.call(),
        _ => orElse?.call(),
      };
}
