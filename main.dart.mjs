  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;

      function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

      // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    if (WebAssembly.String === undefined) {
        console.log("WebAssembly.String is undefined, adding polyfill");
        WebAssembly.String = {
            "charCodeAt": (s, i) => s.charCodeAt(i),
            "compare": (s1, s2) => {
                if (s1 < s2) return -1;
                if (s1 > s2) return 1;
                return 0;
            },
            "concat": (s1, s2) => s1 + s2,
            "equals": (s1, s2) => s1 === s2,
            "fromCharCode": (i) => String.fromCharCode(i),
            "length": (s) => s.length,
            "substring": (s, a, b) => s.substring(a, b),
        };
    }

    // Imports
    const dart2wasm = {

  _1: () => globalThis.removeSplashFromWeb(),
_1577: (x0,x1) => x0.matchMedia(x1),
_1811: () => globalThis.window,
_1831: x0 => x0.matches,
_1835: x0 => x0.platform,
_1840: x0 => x0.navigator,
_1626: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1627: s => console.log(stringFromDartString(s)),
_1730: o => o === undefined,
_1731: o => typeof o === 'boolean',
_1732: o => typeof o === 'number',
_1734: o => typeof o === 'string',
_1737: o => o instanceof Int8Array,
_1738: o => o instanceof Uint8Array,
_1739: o => o instanceof Uint8ClampedArray,
_1740: o => o instanceof Int16Array,
_1741: o => o instanceof Uint16Array,
_1742: o => o instanceof Int32Array,
_1743: o => o instanceof Uint32Array,
_1744: o => o instanceof Float32Array,
_1745: o => o instanceof Float64Array,
_1746: o => o instanceof ArrayBuffer,
_1747: o => o instanceof DataView,
_1748: o => o instanceof Array,
_1749: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1751: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1752: o => o instanceof RegExp,
_1753: (l, r) => l === r,
_1754: o => o,
_1755: o => o,
_1756: o => o,
_1757: b => !!b,
_1758: o => o.length,
_1761: (o, i) => o[i],
_1762: f => f.dartFunction,
_1763: l => arrayFromDartList(Int8Array, l),
_1764: l => arrayFromDartList(Uint8Array, l),
_1765: l => arrayFromDartList(Uint8ClampedArray, l),
_1766: l => arrayFromDartList(Int16Array, l),
_1767: l => arrayFromDartList(Uint16Array, l),
_1768: l => arrayFromDartList(Int32Array, l),
_1769: l => arrayFromDartList(Uint32Array, l),
_1770: l => arrayFromDartList(Float32Array, l),
_1771: l => arrayFromDartList(Float64Array, l),
_1772: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1773: l => arrayFromDartList(Array, l),
_1774: stringFromDartString,
_1775: stringToDartString,
_1776: () => ({}),
_1777: () => [],
_1779: () => globalThis,
_1780: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1781: (o, p) => p in o,
_1782: (o, p) => o[p],
_1783: (o, p, v) => o[p] = v,
_1784: (o, m, a) => o[m].apply(o, a),
_1787: (p, s, f) => p.then(s, f),
_1788: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1719: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1720: (x0,x1) => x0.exec(x1),
_1721: (x0,x1) => x0.test(x1),
_1722: (x0,x1) => x0.exec(x1),
_1723: (x0,x1) => x0.exec(x1),
_1724: x0 => x0.pop(),
_1728: (x0,x1,x2) => x0[x1] = x2,
_1778: l => new Array(l),
_1786: o => String(o),
_1791: x0 => x0.index,
_1793: x0 => x0.length,
_1795: (x0,x1) => x0[x1],
_1799: x0 => x0.flags,
_1800: x0 => x0.multiline,
_1801: x0 => x0.ignoreCase,
_1802: x0 => x0.unicode,
_1803: x0 => x0.dotAll,
_1804: (x0,x1) => x0.lastIndex = x1,
_1679: Object.is,
_1681: WebAssembly.String.concat,
_1687: (t, s) => t.set(s),
_1689: (o) => new DataView(o.buffer, o.byteOffset, o.byteLength),
_1691: o => o.buffer,
_1639: (a, i) => a.push(i),
_1640: (a, i) => a.splice(i, 1)[0],
_1643: a => a.pop(),
_1644: (a, i) => a.splice(i, 1),
_1650: a => a.length,
_1652: (a, i) => a[i],
_1653: (a, i, v) => a[i] = v,
_1655: a => a.join(''),
_1658: (s, t) => s.split(t),
_1659: s => s.toLowerCase(),
_1660: s => s.toUpperCase(),
_1661: s => s.trim(),
_1662: s => s.trimLeft(),
_1663: s => s.trimRight(),
_1665: (s, p, i) => s.indexOf(p, i),
_1666: (s, p, i) => s.lastIndexOf(p, i),
_1667: (o, offsetInBytes, lengthInBytes) => {
      var dst = new ArrayBuffer(lengthInBytes);
      new Uint8Array(dst).set(new Uint8Array(o, offsetInBytes, lengthInBytes));
      return new DataView(dst);
    },
_1668: (o, start, length) => new Uint8Array(o.buffer, o.byteOffset + start, length),
_1669: (o, start, length) => new Int8Array(o.buffer, o.byteOffset + start, length),
_1670: (o, start, length) => new Uint8ClampedArray(o.buffer, o.byteOffset + start, length),
_1671: (o, start, length) => new Uint16Array(o.buffer, o.byteOffset + start, length),
_1672: (o, start, length) => new Int16Array(o.buffer, o.byteOffset + start, length),
_1673: (o, start, length) => new Uint32Array(o.buffer, o.byteOffset + start, length),
_1674: (o, start, length) => new Int32Array(o.buffer, o.byteOffset + start, length),
_1676: (o, start, length) => new BigInt64Array(o.buffer, o.byteOffset + start, length),
_1677: (o, start, length) => new Float32Array(o.buffer, o.byteOffset + start, length),
_1678: (o, start, length) => new Float64Array(o.buffer, o.byteOffset + start, length),
_1680: WebAssembly.String.charCodeAt,
_1682: WebAssembly.String.substring,
_1683: WebAssembly.String.length,
_1684: WebAssembly.String.equals,
_1685: WebAssembly.String.compare,
_1686: WebAssembly.String.fromCharCode,
_1692: o => o.byteOffset,
_1693: Function.prototype.call.bind(Object.getOwnPropertyDescriptor(DataView.prototype, 'byteLength').get),
_1694: (b, o) => new DataView(b, o),
_1695: (b, o, l) => new DataView(b, o, l),
_1696: Function.prototype.call.bind(DataView.prototype.getUint8),
_1697: Function.prototype.call.bind(DataView.prototype.setUint8),
_1698: Function.prototype.call.bind(DataView.prototype.getInt8),
_1699: Function.prototype.call.bind(DataView.prototype.setInt8),
_1700: Function.prototype.call.bind(DataView.prototype.getUint16),
_1701: Function.prototype.call.bind(DataView.prototype.setUint16),
_1702: Function.prototype.call.bind(DataView.prototype.getInt16),
_1703: Function.prototype.call.bind(DataView.prototype.setInt16),
_1704: Function.prototype.call.bind(DataView.prototype.getUint32),
_1705: Function.prototype.call.bind(DataView.prototype.setUint32),
_1706: Function.prototype.call.bind(DataView.prototype.getInt32),
_1707: Function.prototype.call.bind(DataView.prototype.setInt32),
_1710: Function.prototype.call.bind(DataView.prototype.getBigInt64),
_1711: Function.prototype.call.bind(DataView.prototype.setBigInt64),
_1712: Function.prototype.call.bind(DataView.prototype.getFloat32),
_1713: Function.prototype.call.bind(DataView.prototype.setFloat32),
_1714: Function.prototype.call.bind(DataView.prototype.getFloat64),
_1715: Function.prototype.call.bind(DataView.prototype.setFloat64),
_1633: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1634: (handle) => clearTimeout(handle),
_1635: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1636: (handle) => clearInterval(handle),
_1638: () => Date.now(),
_1637: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1588: x0 => new Array(x0),
_1628: (o, t) => o instanceof t,
_1630: f => finalizeWrapper(f,x0 => dartInstance.exports._1630(f,x0)),
_1631: f => finalizeWrapper(f,x0 => dartInstance.exports._1631(f,x0)),
_1632: o => Object.keys(o),
_1716: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1717: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1602: v => stringToDartString(v.toString()),
_1603: (d, digits) => stringToDartString(d.toFixed(digits)),
_1606: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1607: o => new WeakRef(o),
_1608: r => r.deref(),
_1613: Date.now,
_1615: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1616: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1617: () => {
          let stackString = new Error().stack.toString();
          let frames = stackString.split('\n');
          let drop = 2;
          if (frames[0] === 'Error') {
              drop += 1;
          }
          return frames.slice(drop).join('\n');
        },
_1618: () => typeof dartUseDateNowForTicks !== "undefined",
_1619: () => 1000 * performance.now(),
_1620: () => Date.now(),
_1623: () => new WeakMap(),
_1624: (map, o) => map.get(o),
_1625: (map, o, v) => map.set(o, v),
_14: (x0,x1) => x0.append(x1),
_15: x0 => x0.save(),
_16: x0 => x0.remove(),
_17: x0 => x0.restore(),
_18: x0 => x0.save(),
_19: x0 => x0.save(),
_20: x0 => x0.restore(),
_21: x0 => x0.beginPath(),
_23: x0 => x0.beginPath(),
_24: x0 => x0.beginPath(),
_25: x0 => x0.stroke(),
_31: x0 => x0.beginPath(),
_32: x0 => x0.closePath(),
_33: x0 => x0.beginPath(),
_34: x0 => x0.beginPath(),
_35: x0 => x0.closePath(),
_36: x0 => x0.beginPath(),
_37: x0 => x0.beginPath(),
_38: x0 => x0.save(),
_39: x0 => x0.restore(),
_40: x0 => x0.remove(),
_41: x0 => x0.save(),
_42: x0 => x0.restore(),
_43: x0 => x0.stroke(),
_44: x0 => x0.stroke(),
_45: (x0,x1) => x0.drawPaint(x1),
_46: (x0,x1,x2) => x0.drawPath(x1,x2),
_47: (x0,x1) => x0.drawPicture(x1),
_49: x0 => x0.restore(),
_50: x0 => ({locateFile: x0}),
_51: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_52: () => new window.flutterCanvasKit.Paint(),
_53: (x0,x1) => ({B: x0,C: x1}),
_54: (x0,x1) => ({filter: x0,mipmap: x1}),
_55: () => new window.flutterCanvasKit.Path(),
_59: () => new window.flutterCanvasKit.PictureRecorder(),
_60: () => ({}),
_61: () => ({}),
_62: () => ({}),
_63: () => ({}),
_66: () => ({}),
_67: x0 => new window.flutterCanvasKit.Font(x0),
_68: (x0,x1) => ({ambient: x0,spot: x1}),
_70: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_82: x0 => x0.remove(),
_90: (x0,x1,x2) => x0.insertBefore(x1,x2),
_92: (x0,x1) => x0.append(x1),
_93: (x0,x1) => x0.append(x1),
_96: (x0,x1) => x0.append(x1),
_100: x0 => x0.delete(),
_101: x0 => x0.delete(),
_102: x0 => x0.Make(),
_103: x0 => x0.Make(),
_104: x0 => x0.enableFontFallback(),
_105: (x0,x1) => x0.setDefaultFontManager(x1),
_107: x0 => x0.clone(),
_110: x0 => x0.makeImageAtCurrentFrame(),
_111: x0 => x0.delete(),
_112: (x0,x1) => x0.setBlendMode(x1),
_113: (x0,x1) => x0.setStyle(x1),
_114: (x0,x1) => x0.setStrokeCap(x1),
_115: (x0,x1) => x0.setStrokeJoin(x1),
_116: (x0,x1) => x0.setColorFilter(x1),
_117: (x0,x1) => x0.setShader(x1),
_118: (x0,x1) => x0.setMaskFilter(x1),
_119: (x0,x1) => x0.setShader(x1),
_121: (x0,x1) => x0.setImageFilter(x1),
_122: (x0,x1) => x0.setFillType(x1),
_125: (x0,x1) => x0.setFillType(x1),
_126: (x0,x1) => x0.setFillType(x1),
_128: x0 => x0.close(),
_129: x0 => x0.reset(),
_130: x0 => x0.copy(),
_135: x0 => x0.finishRecordingAsPicture(),
_136: x0 => x0.delete(),
_137: (x0,x1) => x0.prepend(x1),
_138: (x0,x1) => x0.append(x1),
_139: (x0,x1) => x0.transferFromImageBitmap(x1),
_140: x0 => x0.remove(),
_141: x0 => x0.remove(),
_142: x0 => x0.remove(),
_143: x0 => x0.releaseResourcesAndAbandonContext(),
_144: x0 => x0.delete(),
_145: x0 => x0.stopPropagation(),
_146: x0 => x0.preventDefault(),
_147: x0 => x0.preventDefault(),
_148: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_149: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_150: x0 => x0.getCanvas(),
_151: x0 => x0.flush(),
_152: x0 => x0.dispose(),
_153: (x0,x1) => x0.ParagraphStyle(x1),
_154: (x0,x1) => x0.TextStyle(x1),
_155: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_156: x0 => x0.build(),
_157: x0 => x0.delete(),
_158: x0 => x0.pop(),
_159: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_160: (x0,x1) => x0.pushStyle(x1),
_161: x0 => x0.focus(),
_162: x0 => x0.select(),
_163: (x0,x1) => x0.append(x1),
_164: x0 => x0.remove(),
_167: x0 => x0.unlock(),
_172: x0 => x0.getReader(),
_175: (x0,x1,x2) => new FontFace(x0,x1,x2),
_180: x0 => new Blob(x0),
_182: x0 => new MutationObserver(x0),
_199: (x0,x1) => new OffscreenCanvas(x0,x1),
_201: (x0,x1,x2) => x0.addEventListener(x1,x2),
_202: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_205: x0 => new ResizeObserver(x0),
_207: x0 => ({createScriptURL: x0}),
_208: (x0,x1) => new Intl.Segmenter(x0,x1),
_209: x0 => x0.next(),
_210: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_215: (x0,x1) => x0.append(x1),
_216: (x0,x1) => x0.append(x1),
_217: x0 => x0.remove(),
_218: (x0,x1) => x0.append(x1),
_219: (x0,x1) => x0.append(x1),
_220: x0 => x0.remove(),
_221: (x0,x1) => x0.append(x1),
_222: (x0,x1) => x0.append(x1),
_225: x0 => x0.save(),
_226: x0 => x0.restore(),
_227: (x0,x1) => x0.append(x1),
_228: (x0,x1) => x0.append(x1),
_229: (x0,x1) => x0.append(x1),
_230: (x0,x1) => x0.append(x1),
_232: (x0,x1) => x0.append(x1),
_233: (x0,x1) => x0.append(x1),
_234: x0 => x0.remove(),
_235: (x0,x1) => x0.append(x1),
_236: x0 => x0.remove(),
_237: x0 => x0.remove(),
_262: (x0,x1) => x0.append(x1),
_263: (x0,x1) => x0.append(x1),
_264: (x0,x1) => x0.append(x1),
_265: (x0,x1) => x0.appendChild(x1),
_266: (x0,x1) => x0.append(x1),
_276: x0 => x0.remove(),
_277: (x0,x1) => x0.append(x1),
_278: (x0,x1) => x0.append(x1),
_279: (x0,x1) => x0.append(x1),
_280: (x0,x1) => x0.append(x1),
_281: (x0,x1) => x0.append(x1),
_282: (x0,x1) => x0.append(x1),
_283: (x0,x1) => x0.append(x1),
_284: (x0,x1,x2) => x0.insertBefore(x1,x2),
_285: x0 => x0.close(),
_286: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_287: x0 => new window.ImageDecoder(x0),
_288: x0 => x0.close(),
_289: x0 => ({frameIndex: x0}),
_290: (x0,x1) => x0.decode(x1),
_292: f => finalizeWrapper(f,x0 => dartInstance.exports._292(f,x0)),
_293: f => finalizeWrapper(f,x0 => dartInstance.exports._293(f,x0)),
_294: (x0,x1) => ({addView: x0,removeView: x1}),
_295: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._295(f,arguments.length,x0) }),
_296: f => finalizeWrapper(f,() => dartInstance.exports._296(f)),
_297: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_298: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._298(f,arguments.length,x0) }),
_299: x0 => ({runApp: x0}),
_302: x0 => x0.preventDefault(),
_303: x0 => x0.stopPropagation(),
_304: (x0,x1) => x0.addListener(x1),
_305: (x0,x1) => x0.removeListener(x1),
_306: x0 => x0.disconnect(),
_307: (x0,x1) => x0.addListener(x1),
_308: (x0,x1) => x0.removeListener(x1),
_309: (x0,x1) => x0.append(x1),
_310: x0 => x0.remove(),
_311: x0 => x0.stopPropagation(),
_315: x0 => x0.preventDefault(),
_316: (x0,x1) => x0.append(x1),
_317: x0 => x0.remove(),
_318: x0 => x0.beginPath(),
_327: (x0,x1) => x0.append(x1),
_328: (x0,x1) => x0.append(x1),
_329: (x0,x1) => x0.append(x1),
_330: x0 => x0.remove(),
_331: x0 => x0.focus(),
_332: x0 => x0.focus(),
_333: x0 => x0.remove(),
_334: x0 => x0.focus(),
_335: x0 => x0.remove(),
_336: (x0,x1) => x0.append(x1),
_337: x0 => x0.focus(),
_338: (x0,x1) => x0.append(x1),
_339: x0 => x0.remove(),
_340: (x0,x1) => x0.append(x1),
_341: (x0,x1) => x0.append(x1),
_342: (x0,x1,x2) => x0.insertBefore(x1,x2),
_343: (x0,x1) => x0.append(x1),
_344: (x0,x1,x2) => x0.insertBefore(x1,x2),
_345: x0 => x0.remove(),
_346: x0 => x0.remove(),
_347: x0 => x0.remove(),
_348: (x0,x1) => x0.append(x1),
_349: x0 => x0.remove(),
_350: x0 => x0.remove(),
_351: x0 => x0.getBoundingClientRect(),
_352: x0 => x0.remove(),
_353: x0 => x0.blur(),
_355: x0 => x0.focus(),
_356: x0 => x0.focus(),
_357: x0 => x0.remove(),
_358: x0 => x0.focus(),
_359: x0 => x0.focus(),
_360: x0 => x0.blur(),
_361: x0 => x0.remove(),
_362: (x0,x1) => x0.append(x1),
_363: x0 => x0.clear(),
_364: (x0,x1) => x0.add(x1),
_366: (x0,x1) => x0.appendChild(x1),
_367: x0 => x0.remove(),
_368: (x0,x1) => x0.append(x1),
_369: (x0,x1) => x0.append(x1),
_370: x0 => x0.getBoundingClientRect(),
_371: x0 => x0.getBoundingClientRect(),
_373: (x0,x1) => x0.append(x1),
_374: (x0,x1) => x0.append(x1),
_375: x0 => x0.remove(),
_376: (x0,x1) => x0.append(x1),
_377: (x0,x1,x2) => x0.insertBefore(x1,x2),
_378: (x0,x1) => x0.append(x1),
_379: x0 => x0.focus(),
_380: x0 => x0.focus(),
_381: x0 => x0.focus(),
_382: x0 => x0.focus(),
_383: x0 => x0.focus(),
_384: (x0,x1) => x0.append(x1),
_385: x0 => x0.focus(),
_386: x0 => x0.blur(),
_387: x0 => x0.remove(),
_389: x0 => x0.preventDefault(),
_390: x0 => x0.focus(),
_391: x0 => x0.preventDefault(),
_392: x0 => x0.preventDefault(),
_393: x0 => x0.preventDefault(),
_394: x0 => x0.focus(),
_395: x0 => x0.focus(),
_396: (x0,x1) => x0.append(x1),
_397: x0 => x0.focus(),
_398: x0 => x0.focus(),
_399: x0 => x0.focus(),
_400: x0 => x0.focus(),
_401: (x0,x1) => x0.observe(x1),
_402: x0 => x0.disconnect(),
_403: (x0,x1) => x0.appendChild(x1),
_404: (x0,x1) => x0.appendChild(x1),
_405: (x0,x1) => x0.appendChild(x1),
_406: (x0,x1) => x0.append(x1),
_407: (x0,x1) => x0.append(x1),
_408: (x0,x1) => x0.append(x1),
_409: x0 => x0.remove(),
_410: (x0,x1) => x0.append(x1),
_412: (x0,x1) => x0.appendChild(x1),
_414: (x0,x1) => x0.append(x1),
_416: x0 => x0.remove(),
_417: (x0,x1) => x0.append(x1),
_421: (x0,x1) => x0.appendChild(x1),
_422: x0 => x0.remove(),
_423: x0 => globalThis.window.flutterCanvasKit = x0,
_424: () => globalThis.window.flutterCanvasKit,
_425: x0 => x0.BlendMode,
_426: x0 => x0.PaintStyle,
_427: x0 => x0.StrokeCap,
_428: x0 => x0.StrokeJoin,
_429: x0 => x0.BlurStyle,
_430: x0 => x0.TileMode,
_431: x0 => x0.FilterMode,
_432: x0 => x0.MipmapMode,
_433: x0 => x0.FillType,
_434: x0 => x0.AlphaType,
_435: x0 => x0.ColorType,
_437: x0 => x0.ClipOp,
_440: x0 => x0.RectHeightStyle,
_441: x0 => x0.RectWidthStyle,
_443: x0 => x0.TextAlign,
_444: x0 => x0.TextHeightBehavior,
_445: x0 => x0.TextDirection,
_446: x0 => x0.FontWeight,
_448: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_449: x0 => x0.Shader,
_450: x0 => x0.MaskFilter,
_452: x0 => x0.ImageFilter,
_454: (x0,x1) => x0.computeTonalColors(x1),
_456: x0 => x0.ParagraphBuilder,
_464: x0 => x0.NoDecoration,
_465: x0 => x0.UnderlineDecoration,
_466: x0 => x0.OverlineDecoration,
_467: x0 => x0.LineThroughDecoration,
_468: x0 => x0.DecorationStyle,
_469: x0 => x0.TextBaseline,
_470: x0 => x0.PlaceholderAlignment,
_472: x0 => x0.TypefaceFontProvider,
_473: x0 => x0.FontCollection,
_474: x0 => x0.Typeface,
_475: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_476: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_478: (x0,x1) => x0.MakeGrContext(x1),
_479: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_484: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_486: x0 => globalThis.window.CanvasKitInit(x0),
_487: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._487(f,x0,x1)),
_488: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_496: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_502: x0 => x0.Thin,
_503: x0 => x0.ExtraLight,
_504: x0 => x0.Light,
_505: x0 => x0.Normal,
_506: x0 => x0.Medium,
_507: x0 => x0.SemiBold,
_508: x0 => x0.Bold,
_509: x0 => x0.ExtraBold,
_510: x0 => x0.ExtraBlack,
_514: x0 => x0.value,
_515: x0 => x0.RTL,
_516: x0 => x0.LTR,
_517: x0 => x0.value,
_518: x0 => x0.Left,
_519: x0 => x0.Right,
_520: x0 => x0.Center,
_521: x0 => x0.Justify,
_522: x0 => x0.Start,
_523: x0 => x0.End,
_525: x0 => x0.All,
_526: x0 => x0.DisableFirstAscent,
_527: x0 => x0.DisableLastDescent,
_528: x0 => x0.DisableAll,
_530: x0 => x0.Tight,
_531: x0 => x0.Max,
_532: x0 => x0.IncludeLineSpacingMiddle,
_533: x0 => x0.IncludeLineSpacingTop,
_534: x0 => x0.IncludeLineSpacingBottom,
_535: x0 => x0.Strut,
_537: x0 => x0.Tight,
_538: x0 => x0.Max,
_548: x0 => x0.Difference,
_549: x0 => x0.Intersect,
_551: x0 => x0.Winding,
_552: x0 => x0.EvenOdd,
_560: x0 => x0.Normal,
_561: x0 => x0.Solid,
_562: x0 => x0.Outer,
_563: x0 => x0.Inner,
_565: x0 => x0.Butt,
_566: x0 => x0.Round,
_567: x0 => x0.Square,
_569: x0 => x0.Stroke,
_570: x0 => x0.Fill,
_572: x0 => x0.Clear,
_573: x0 => x0.Src,
_574: x0 => x0.Dst,
_575: x0 => x0.SrcOver,
_576: x0 => x0.DstOver,
_577: x0 => x0.SrcIn,
_578: x0 => x0.DstIn,
_579: x0 => x0.SrcOut,
_580: x0 => x0.DstOut,
_581: x0 => x0.SrcATop,
_582: x0 => x0.DstATop,
_583: x0 => x0.Xor,
_584: x0 => x0.Plus,
_585: x0 => x0.Modulate,
_586: x0 => x0.Screen,
_587: x0 => x0.Overlay,
_588: x0 => x0.Darken,
_589: x0 => x0.Lighten,
_590: x0 => x0.ColorDodge,
_591: x0 => x0.ColorBurn,
_592: x0 => x0.HardLight,
_593: x0 => x0.SoftLight,
_594: x0 => x0.Difference,
_595: x0 => x0.Exclusion,
_596: x0 => x0.Multiply,
_597: x0 => x0.Hue,
_598: x0 => x0.Saturation,
_599: x0 => x0.Color,
_600: x0 => x0.Luminosity,
_602: x0 => x0.Miter,
_603: x0 => x0.Round,
_604: x0 => x0.Bevel,
_606: x0 => x0.Clamp,
_607: x0 => x0.Repeat,
_608: x0 => x0.Mirror,
_609: x0 => x0.Decal,
_611: x0 => x0.Nearest,
_612: x0 => x0.Linear,
_614: x0 => x0.None,
_616: x0 => x0.Linear,
_619: x0 => x0.Premul,
_625: x0 => x0.RGBA_8888,
_634: x0 => x0.getFrameCount(),
_635: x0 => x0.getRepetitionCount(),
_636: x0 => x0.currentFrameDuration(),
_637: x0 => x0.decodeNextFrame(),
_646: x0 => x0.width(),
_647: x0 => x0.height(),
_653: (x0,x1) => x0.isAliasOf(x1),
_655: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_660: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_663: (x0,x1) => x0.setStrokeWidth(x1),
_668: (x0,x1) => x0.setAntiAlias(x1),
_669: (x0,x1) => x0.setColorInt(x1),
_687: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_689: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_693: (x0,x1) => x0.getOutputBounds(x1),
_696: () => globalThis.Float32Array,
_698: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_703: x0 => x0.toTypedArray(),
_708: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_709: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_711: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_713: (x0,x1,x2) => x0.addRRect(x1,x2),
_714: (x0,x1) => x0.addRect(x1),
_715: (x0,x1,x2,x3,x4) => x0.arcToOval(x1,x2,x3,x4),
_716: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_719: (x0,x1,x2) => x0.contains(x1,x2),
_722: x0 => x0.getBounds(),
_723: (x0,x1,x2) => x0.lineTo(x1,x2),
_724: (x0,x1,x2) => x0.moveTo(x1,x2),
_738: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_750: (x0,x1,x2) => x0.beginRecording(x1,x2),
_753: (x0,x1) => x0.clear(x1),
_754: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_755: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_757: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_762: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_764: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_768: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_769: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_771: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_772: (x0,x1,x2) => x0.drawOval(x1,x2),
_776: (x0,x1,x2) => x0.drawRRect(x1,x2),
_777: (x0,x1,x2) => x0.drawRect(x1,x2),
_779: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_781: x0 => x0.save(),
_783: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_786: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_787: (x0,x1,x2) => x0.scale(x1,x2),
_789: (x0,x1) => x0.concat(x1),
_791: (x0,x1,x2) => x0.translate(x1,x2),
_794: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_796: x0 => x0.cullRect(),
_799: (x0,x1) => x0.addText(x1),
_804: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_805: x0 => x0.getText(),
_807: (x0,x1) => x0.setWordsUtf16(x1),
_809: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_811: (x0,x1) => x0.setLineBreaksUtf16(x1),
_815: (x0,x1) => x0.textAlign = x1,
_816: (x0,x1) => x0.textDirection = x1,
_817: (x0,x1) => x0.heightMultiplier = x1,
_818: (x0,x1) => x0.textHeightBehavior = x1,
_819: (x0,x1) => x0.maxLines = x1,
_820: (x0,x1) => x0.ellipsis = x1,
_821: (x0,x1) => x0.textStyle = x1,
_822: (x0,x1) => x0.strutStyle = x1,
_823: (x0,x1) => x0.replaceTabCharacters = x1,
_824: (x0,x1) => x0.applyRoundingHack = x1,
_825: x0 => x0.Solid,
_826: x0 => x0.Double,
_827: x0 => x0.Dotted,
_828: x0 => x0.Dashed,
_829: x0 => x0.Wavy,
_831: x0 => x0.Alphabetic,
_832: x0 => x0.Ideographic,
_834: x0 => x0.Baseline,
_835: x0 => x0.AboveBaseline,
_836: x0 => x0.BelowBaseline,
_837: x0 => x0.Top,
_838: x0 => x0.Bottom,
_839: x0 => x0.Middle,
_841: (x0,x1) => x0.backgroundColor = x1,
_842: (x0,x1) => x0.color = x1,
_844: (x0,x1) => x0.decoration = x1,
_845: (x0,x1) => x0.decorationThickness = x1,
_846: (x0,x1) => x0.decorationColor = x1,
_847: (x0,x1) => x0.decorationStyle = x1,
_848: (x0,x1) => x0.textBaseline = x1,
_849: (x0,x1) => x0.fontSize = x1,
_850: (x0,x1) => x0.letterSpacing = x1,
_851: (x0,x1) => x0.wordSpacing = x1,
_852: (x0,x1) => x0.heightMultiplier = x1,
_853: (x0,x1) => x0.halfLeading = x1,
_855: (x0,x1) => x0.fontFamilies = x1,
_856: (x0,x1) => x0.fontStyle = x1,
_859: (x0,x1) => x0.fontVariations = x1,
_860: (x0,x1) => x0.fontFamilies = x1,
_861: (x0,x1) => x0.fontStyle = x1,
_862: (x0,x1) => x0.fontSize = x1,
_863: (x0,x1) => x0.heightMultiplier = x1,
_864: (x0,x1) => x0.halfLeading = x1,
_866: (x0,x1) => x0.strutEnabled = x1,
_867: (x0,x1) => x0.forceStrutHeight = x1,
_868: (x0,x1) => x0.weight = x1,
_875: (x0,x1) => x0.axis = x1,
_876: (x0,x1) => x0.value = x1,
_877: (x0,x1) => x0.getGlyphIDs(x1),
_879: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_883: (x0,x1,x2) => x0.registerFont(x1,x2),
_887: x0 => x0.startIndex,
_888: x0 => x0.endIndex,
_891: x0 => x0.isHardBreak,
_892: x0 => x0.ascent,
_893: x0 => x0.descent,
_895: x0 => x0.width,
_896: x0 => x0.left,
_897: x0 => x0.baseline,
_898: x0 => x0.lineNumber,
_902: x0 => x0.rect,
_904: x0 => x0.dir,
_906: x0 => x0.getAlphabeticBaseline(),
_908: x0 => x0.didExceedMaxLines(),
_909: x0 => x0.getHeight(),
_910: x0 => x0.getIdeographicBaseline(),
_912: x0 => x0.getLineMetrics(),
_916: x0 => x0.getLongestLine(),
_917: x0 => x0.getMaxIntrinsicWidth(),
_918: x0 => x0.getMinIntrinsicWidth(),
_919: x0 => x0.getMaxWidth(),
_920: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_922: x0 => x0.getRectsForPlaceholders(),
_923: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_927: (x0,x1) => x0.getWordBoundary(x1),
_928: (x0,x1) => x0.layout(x1),
_931: x0 => x0.affinity,
_932: x0 => x0.pos,
_933: x0 => x0.start,
_934: x0 => x0.end,
_936: x0 => x0.ambient,
_937: x0 => x0.spot,
_941: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_944: x0 => x0.isDeleted(),
_968: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_969: (x0,x1) => x0.makeShader(x1),
_970: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_971: x0 => x0.remove(),
_972: x0 => x0.remove(),
_973: (x0,x1) => x0.appendChild(x1),
_975: () => globalThis.window.flutterConfiguration,
_976: x0 => x0.assetBase,
_977: x0 => x0.canvasKitBaseUrl,
_978: x0 => x0.canvasKitVariant,
_979: x0 => x0.canvasKitForceCpuOnly,
_980: x0 => x0.debugShowSemanticsNodes,
_981: x0 => x0.hostElement,
_982: x0 => x0.multiViewEnabled,
_983: x0 => x0.nonce,
_984: x0 => x0.renderer,
_985: x0 => x0.useColorEmoji,
_986: () => globalThis.window.flutterWebRenderer,
_989: x0 => x0.console,
_990: x0 => x0.devicePixelRatio,
_991: x0 => x0.document,
_992: x0 => x0.history,
_993: x0 => x0.innerHeight,
_994: x0 => x0.innerWidth,
_995: x0 => x0.location,
_996: x0 => x0.navigator,
_997: x0 => x0.visualViewport,
_998: x0 => x0.performance,
_999: (x0,x1) => x0.fetch(x1),
_1001: x0 => x0.URL,
_1002: (x0,x1) => x0.dispatchEvent(x1),
_1003: (x0,x1) => x0.matchMedia(x1),
_1004: (x0,x1) => x0.getComputedStyle(x1),
_1006: x0 => x0.screen,
_1007: (x0,x1) => x0.requestAnimationFrame(x1),
_1008: f => finalizeWrapper(f,x0 => dartInstance.exports._1008(f,x0)),
_1012: x0 => x0.trustedTypes,
_1013: (x0,x1) => x0.warn(x1),
_1014: (x0,x1) => x0.error(x1),
_1015: (x0,x1) => x0.debug(x1),
_1016: () => globalThis.window,
_1017: () => globalThis.Intl,
_1018: () => globalThis.Symbol,
_1020: (x0,x1,x2,x3,x4) => globalThis.createImageBitmap(x0,x1,x2,x3,x4),
_1021: x0 => x0.clipboard,
_1022: x0 => x0.maxTouchPoints,
_1023: x0 => x0.vendor,
_1024: x0 => x0.language,
_1025: x0 => x0.platform,
_1026: x0 => x0.userAgent,
_1027: x0 => x0.languages,
_1028: x0 => x0.documentElement,
_1029: (x0,x1) => x0.querySelector(x1),
_1032: (x0,x1) => x0.createElement(x1),
_1034: (x0,x1) => x0.execCommand(x1),
_1036: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1037: (x0,x1) => x0.createTextNode(x1),
_1038: (x0,x1) => x0.createEvent(x1),
_1041: x0 => x0.fonts,
_1042: x0 => x0.head,
_1043: x0 => x0.body,
_1044: (x0,x1) => x0.title = x1,
_1047: x0 => x0.activeElement,
_1049: () => globalThis.document,
_1050: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1051: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1052: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1053: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1054: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1056: f => finalizeWrapper(f,x0 => dartInstance.exports._1056(f,x0)),
_1057: x0 => x0.target,
_1059: x0 => x0.timeStamp,
_1060: x0 => x0.type,
_1061: x0 => x0.preventDefault(),
_1065: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1070: x0 => x0.firstChild,
_1073: x0 => x0.lastChild,
_1075: x0 => x0.parentElement,
_1077: x0 => x0.parentNode,
_1080: (x0,x1) => x0.removeChild(x1),
_1081: (x0,x1) => x0.removeChild(x1),
_1082: x0 => x0.isConnected,
_1083: (x0,x1) => x0.textContent = x1,
_1084: (x0,x1) => x0.cloneNode(x1),
_1085: (x0,x1) => x0.contains(x1),
_1090: x0 => x0.children,
_1094: x0 => x0.clientHeight,
_1095: x0 => x0.clientWidth,
_1096: x0 => x0.id,
_1097: (x0,x1) => x0.id = x1,
_1100: (x0,x1) => x0.spellcheck = x1,
_1101: x0 => x0.tagName,
_1102: x0 => x0.style,
_1103: (x0,x1) => x0.append(x1),
_1107: x0 => x0.getBoundingClientRect(),
_1114: (x0,x1) => x0.querySelectorAll(x1),
_1115: x0 => x0.remove(),
_1116: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1117: (x0,x1) => x0.removeAttribute(x1),
_1118: (x0,x1) => x0.tabIndex = x1,
_1121: x0 => x0.scrollTop,
_1122: (x0,x1) => x0.scrollTop = x1,
_1123: x0 => x0.scrollLeft,
_1124: (x0,x1) => x0.scrollLeft = x1,
_1125: x0 => x0.classList,
_1126: (x0,x1) => x0.className = x1,
_1130: (x0,x1) => x0.getElementsByClassName(x1),
_1131: x0 => x0.click(),
_1132: (x0,x1) => x0.hasAttribute(x1),
_1135: (x0,x1) => x0.attachShadow(x1),
_1138: (x0,x1) => x0.getPropertyValue(x1),
_1140: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1142: (x0,x1) => x0.removeProperty(x1),
_1144: x0 => x0.offsetLeft,
_1145: x0 => x0.offsetTop,
_1146: x0 => x0.offsetParent,
_1148: (x0,x1) => x0.name = x1,
_1149: x0 => x0.content,
_1150: (x0,x1) => x0.content = x1,
_1153: x0 => x0.src,
_1154: (x0,x1) => x0.src = x1,
_1155: x0 => x0.naturalWidth,
_1156: x0 => x0.naturalHeight,
_1159: x0 => x0.decode(),
_1160: (x0,x1) => x0.src = x1,
_1161: (x0,x1) => x0.nonce = x1,
_1163: (x0,x1) => x0.nonce = x1,
_1168: x0 => x0.now(),
_1170: (x0,x1) => x0.width = x1,
_1172: (x0,x1) => x0.height = x1,
_1175: (x0,x1) => x0.toDataURL(x1),
_1176: (x0,x1) => x0.getContext(x1),
_1177: (x0,x1,x2) => x0.getContext(x1,x2),
_1178: (x0,x1) => x0.getParameter(x1),
_1179: x0 => x0.SAMPLES,
_1180: x0 => x0.STENCIL_BITS,
_1182: x0 => x0.fillStyle,
_1183: (x0,x1) => x0.fillStyle = x1,
_1184: x0 => x0.font,
_1185: (x0,x1) => x0.font = x1,
_1187: (x0,x1) => x0.direction = x1,
_1188: (x0,x1) => x0.lineWidth = x1,
_1189: (x0,x1) => x0.strokeStyle = x1,
_1190: x0 => x0.strokeStyle,
_1196: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1197: (x0,x1,x2) => x0.createPattern(x1,x2),
_1200: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.drawImage(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_1201: x0 => x0.fill(),
_1202: (x0,x1) => x0.fill(x1),
_1203: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1204: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1209: (x0,x1,x2) => x0.lineTo(x1,x2),
_1211: (x0,x1) => x0.measureText(x1),
_1213: (x0,x1,x2) => x0.moveTo(x1,x2),
_1214: x0 => x0.save(),
_1216: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1219: x0 => x0.restore(),
_1221: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1223: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1224: x0 => x0.clip(),
_1225: (x0,x1) => x0.clip(x1),
_1226: (x0,x1,x2) => x0.scale(x1,x2),
_1227: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1228: (x0,x1,x2) => x0.translate(x1,x2),
_1229: (x0,x1) => x0.rotate(x1),
_1230: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1231: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1232: (x0,x1) => x0.globalCompositeOperation = x1,
_1233: (x0,x1) => x0.lineCap = x1,
_1234: (x0,x1) => x0.lineJoin = x1,
_1235: (x0,x1) => x0.shadowBlur = x1,
_1236: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1237: (x0,x1) => x0.filter = x1,
_1238: (x0,x1) => x0.shadowOffsetX = x1,
_1239: (x0,x1) => x0.shadowOffsetY = x1,
_1240: (x0,x1) => x0.shadowColor = x1,
_1242: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1244: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1245: (x0,x1) => x0.globalAlpha = x1,
_1249: x0 => x0.width,
_1250: x0 => x0.height,
_1252: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1253: x0 => x0.status,
_1255: x0 => x0.body,
_1256: x0 => x0.arrayBuffer(),
_1262: x0 => x0.read(),
_1263: x0 => x0.value,
_1264: x0 => x0.done,
_1265: x0 => x0.width,
_1266: x0 => x0.name,
_1267: x0 => x0.x,
_1268: x0 => x0.y,
_1269: x0 => x0.width,
_1270: x0 => x0.height,
_1271: x0 => x0.top,
_1272: x0 => x0.right,
_1273: x0 => x0.bottom,
_1274: x0 => x0.left,
_1275: x0 => x0.load(),
_1284: x0 => x0.height,
_1285: x0 => x0.width,
_1286: (x0,x1) => x0.value = x1,
_1288: (x0,x1) => x0.placeholder = x1,
_1289: (x0,x1) => x0.name = x1,
_1290: x0 => x0.selectionDirection,
_1291: x0 => x0.selectionStart,
_1292: x0 => x0.selectionEnd,
_1295: x0 => x0.value,
_1296: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1300: x0 => x0.readText(),
_1301: (x0,x1) => x0.writeText(x1),
_1302: x0 => x0.altKey,
_1303: x0 => x0.code,
_1304: x0 => x0.ctrlKey,
_1305: x0 => x0.key,
_1306: x0 => x0.keyCode,
_1307: x0 => x0.location,
_1308: x0 => x0.metaKey,
_1309: x0 => x0.repeat,
_1310: x0 => x0.shiftKey,
_1311: x0 => x0.isComposing,
_1312: (x0,x1) => x0.getModifierState(x1),
_1313: x0 => x0.state,
_1315: (x0,x1) => x0.go(x1),
_1317: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1318: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1319: x0 => x0.pathname,
_1320: x0 => x0.search,
_1321: x0 => x0.hash,
_1324: x0 => x0.state,
_1325: (x0,x1) => x0.createObjectURL(x1),
_1326: (x0,x1) => x0.revokeObjectURL(x1),
_1328: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1328(f,x0,x1)),
_1330: (x0,x1,x2) => x0.observe(x1,x2),
_1333: x0 => x0.attributeName,
_1334: x0 => x0.type,
_1335: x0 => x0.matches,
_1338: x0 => x0.matches,
_1339: x0 => x0.clientX,
_1340: x0 => x0.clientY,
_1341: x0 => x0.offsetX,
_1342: x0 => x0.offsetY,
_1345: x0 => x0.button,
_1346: x0 => x0.buttons,
_1347: x0 => x0.ctrlKey,
_1348: (x0,x1) => x0.getModifierState(x1),
_1349: x0 => x0.pointerId,
_1350: x0 => x0.pointerType,
_1351: x0 => x0.pressure,
_1352: x0 => x0.tiltX,
_1353: x0 => x0.tiltY,
_1354: x0 => x0.getCoalescedEvents(),
_1355: x0 => x0.deltaX,
_1356: x0 => x0.deltaY,
_1357: x0 => x0.wheelDeltaX,
_1358: x0 => x0.wheelDeltaY,
_1359: x0 => x0.deltaMode,
_1364: x0 => x0.changedTouches,
_1366: x0 => x0.clientX,
_1367: x0 => x0.clientY,
_1368: x0 => x0.data,
_1369: (x0,x1) => x0.type = x1,
_1370: (x0,x1) => x0.max = x1,
_1371: (x0,x1) => x0.min = x1,
_1372: (x0,x1) => x0.value = x1,
_1373: x0 => x0.value,
_1374: x0 => x0.disabled,
_1375: (x0,x1) => x0.disabled = x1,
_1376: (x0,x1) => x0.placeholder = x1,
_1377: (x0,x1) => x0.name = x1,
_1378: (x0,x1) => x0.autocomplete = x1,
_1379: x0 => x0.selectionDirection,
_1380: x0 => x0.selectionStart,
_1381: x0 => x0.selectionEnd,
_1384: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1390: (x0,x1) => x0.add(x1),
_1394: (x0,x1) => x0.noValidate = x1,
_1395: (x0,x1) => x0.method = x1,
_1396: (x0,x1) => x0.action = x1,
_1399: (x0,x1) => x0.height = x1,
_1400: (x0,x1) => x0.width = x1,
_1401: (x0,x1) => x0.getContext(x1),
_1402: (x0,x1,x2) => x0.getContext(x1,x2),
_1421: x0 => x0.orientation,
_1422: x0 => x0.width,
_1423: x0 => x0.height,
_1425: (x0,x1) => x0.lock(x1),
_1441: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1441(f,x0,x1)),
_1446: x0 => x0.contentRect,
_1448: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1449: (x0,x1) => x0.createScriptURL(x1),
_1452: x0 => x0.length,
_1453: (x0,x1) => x0.item(x1),
_1454: x0 => x0.length,
_1455: (x0,x1) => x0.item(x1),
_1456: x0 => x0.iterator,
_1457: x0 => x0.Segmenter,
_1458: x0 => x0.v8BreakIterator,
_1459: (x0,x1) => x0.segment(x1),
_1461: x0 => x0.done,
_1462: x0 => x0.value,
_1463: x0 => x0.index,
_1467: (x0,x1) => x0.adoptText(x1),
_1468: x0 => x0.first(),
_1469: x0 => x0.next(),
_1471: x0 => x0.current(),
_1474: () => globalThis.window.FinalizationRegistry,
_1475: (x0,x1,x2) => x0.register(x1,x2),
_1478: () => globalThis.window.OffscreenCanvas,
_1479: () => globalThis.window.createImageBitmap,
_1483: x0 => x0.hostElement,
_1485: x0 => x0.loader,
_1486: () => globalThis._flutter,
_1487: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1488: (x0,x1,x2) => x0.call(x1,x2),
_1489: () => globalThis.Promise,
_1490: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1490(f,x0,x1)),
_1495: () => globalThis.window.ImageDecoder,
_1496: x0 => x0.tracks,
_1501: x0 => x0.image,
_1508: x0 => x0.displayWidth,
_1509: x0 => x0.displayHeight,
_1510: x0 => x0.duration,
_1513: x0 => x0.ready,
_1514: x0 => x0.selectedTrack,
_1515: x0 => x0.repetitionCount,
_1516: x0 => x0.frameCount,
_1558: f => finalizeWrapper(f,x0 => dartInstance.exports._1558(f,x0)),
_1559: f => finalizeWrapper(f,x0 => dartInstance.exports._1559(f,x0)),
_1599: (decoder, codeUnits) => decoder.decode(codeUnits),
_1600: () => new TextDecoder("utf-8", {fatal: true}),
_1601: () => new TextDecoder("utf-8", {fatal: false})
      };

    const baseImports = {
        dart2wasm: dart2wasm,

  
          Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

