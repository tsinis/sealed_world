  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1777: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1778: (handle) => clearTimeout(handle),
_1779: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1780: (handle) => clearInterval(handle),
_1782: () => Date.now(),
_1781: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1684: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1685: s => console.log(stringFromDartString(s)),
_1705: o => o === undefined,
_1706: o => typeof o === 'boolean',
_1707: o => typeof o === 'number',
_1709: o => typeof o === 'string',
_1712: o => o instanceof Int8Array,
_1713: o => o instanceof Uint8Array,
_1714: o => o instanceof Uint8ClampedArray,
_1715: o => o instanceof Int16Array,
_1716: o => o instanceof Uint16Array,
_1717: o => o instanceof Int32Array,
_1718: o => o instanceof Uint32Array,
_1719: o => o instanceof Float32Array,
_1720: o => o instanceof Float64Array,
_1721: o => o instanceof ArrayBuffer,
_1722: o => o instanceof DataView,
_1723: o => o instanceof Array,
_1724: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1726: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1727: o => o instanceof RegExp,
_1728: (l, r) => l === r,
_1729: o => o,
_1730: o => o,
_1731: o => o,
_1732: b => !!b,
_1733: o => o.length,
_1736: (o, i) => o[i],
_1737: f => f.dartFunction,
_1738: l => arrayFromDartList(Int8Array, l),
_1739: l => arrayFromDartList(Uint8Array, l),
_1740: l => arrayFromDartList(Uint8ClampedArray, l),
_1741: l => arrayFromDartList(Int16Array, l),
_1742: l => arrayFromDartList(Uint16Array, l),
_1743: l => arrayFromDartList(Int32Array, l),
_1744: l => arrayFromDartList(Uint32Array, l),
_1745: l => arrayFromDartList(Float32Array, l),
_1746: l => arrayFromDartList(Float64Array, l),
_1747: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1748: l => arrayFromDartList(Array, l),
_1749: stringFromDartString,
_1750: stringToDartString,
_1751: () => ({}),
_1752: () => [],
_1753: () => globalThis,
_1754: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1755: (o, p) => p in o,
_1756: (o, p) => o[p],
_1757: (o, p, v) => o[p] = v,
_1758: (o, m, a) => o[m].apply(o, a),
_1761: (p, s, f) => p.then(s, f),
_1763: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1692: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1693: (x0,x1) => x0.exec(x1),
_1694: (x0,x1) => x0.test(x1),
_1695: (x0,x1) => x0.exec(x1),
_1696: (x0,x1) => x0.exec(x1),
_1697: x0 => x0.pop(),
_1700: (x0,x1) => x0[x1],
_1701: (x0,x1,x2) => x0[x1] = x2,
_1760: o => String(o),
_1765: x0 => x0.index,
_1767: x0 => x0.length,
_1771: x0 => x0.flags,
_1772: x0 => x0.multiline,
_1773: x0 => x0.ignoreCase,
_1774: x0 => x0.unicode,
_1775: x0 => x0.dotAll,
_1776: (x0,x1) => x0.lastIndex = x1,
_1584: x0 => new Array(x0),
_1585: (s, i) => s.charCodeAt(i),
_1586: (a, b) => a + b,
_1589: (s, t) => s.split(t),
_1590: (o, s, i) => o.substring(s, i),
_1591: s => s.toLowerCase(),
_1592: s => s.toUpperCase(),
_1593: s => s.trim(),
_1594: s => s.trimLeft(),
_1595: s => s.trimRight(),
_1597: (s, p, i) => s.indexOf(p, i),
_1598: (s, p, i) => s.lastIndexOf(p, i),
_1599: s => s.length,
_1600: (s, i) => s[i],
_1602: o => o.buffer,
_1603: o => o.byteLength,
_1604: o => o.byteOffset,
_1605: o => o.BYTES_PER_ELEMENT,
_1606: o => o.length,
_1607: (b, o) => new DataView(b, o),
_1608: (b, o, l) => new DataView(b, o, l),
_1610: (b, o, e) => b.getFloat64(o, e),
_1612: (b, o, e) => b.getInt32(o, e),
_1614: (b, o, e) => b.getUint16(o, e),
_1615: (b, o, e) => b.getUint32(o, e),
_1616: (b, o) => b.getUint8(o),
_1625: (o, i) => o[i],
_1626: (o, i, v) => o[i] = v,
_1627: (b, o) => new Uint8Array(b, o),
_1628: (b, o, l) => new Uint8Array(b, o, l),
_1629: (a, s, p) => a.subarray(s, p),
_1632: (a, s, p) => a.subarray(s, p),
_1635: (a, s, p) => a.subarray(s, p),
_1638: (a, s, p) => a.subarray(s, p),
_1641: (a, s, p) => a.subarray(s, p),
_1644: (a, s, p) => a.subarray(s, p),
_1646: (b, o, l) => new Int32Array(b, o, l),
_1647: (a, s, p) => a.subarray(s, p),
_1648: (o, i) => o[i],
_1649: (o, i, v) => o[i] = v,
_1650: (b, o) => new Float32Array(b, o),
_1651: (b, o, l) => new Float32Array(b, o, l),
_1652: (a, s, p) => a.subarray(s, p),
_1653: (b, o) => new Float64Array(b, o),
_1654: (b, o, l) => new Float64Array(b, o, l),
_1655: (a, s, p) => a.subarray(s, p),
_1656: (s, k, e) => s.subarray(k, e),
_1657: (t, s, i) => t.set(s, i),
_1686: (o, t) => o instanceof t,
_1688: f => finalizeWrapper(f,x0 => dartInstance.exports._1688(f,x0)),
_1689: f => finalizeWrapper(f,x0 => dartInstance.exports._1689(f,x0)),
_1690: o => Object.keys(o),
_1682: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1683: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1658: v => stringToDartString(v.toString()),
_1659: (d, digits) => stringToDartString(d.toFixed(digits)),
_1662: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1669: Date.now,
_1671: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1672: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1673: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1674: () => typeof dartUseDateNowForTicks !== "undefined",
_1675: () => 1000 * performance.now(),
_1676: () => Date.now(),
_1679: () => new WeakMap(),
_1680: (map, o) => map.get(o),
_1681: (map, o, v) => map.set(o, v),
_31: f => finalizeWrapper(f,() => dartInstance.exports._31(f)),
_32: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._32(f,arguments.length,x0) }),
_33: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_34: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._34(f,x0,x1)),
_35: x0 => new Promise(x0),
_36: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._36(f,arguments.length,x0) }),
_37: x0 => ({runApp: x0}),
_38: () => ({}),
_39: (x0,x1) => x0.append(x1),
_40: x0 => x0.save(),
_41: x0 => x0.remove(),
_42: x0 => x0.restore(),
_43: x0 => x0.save(),
_44: x0 => x0.save(),
_45: x0 => x0.restore(),
_46: x0 => x0.beginPath(),
_48: x0 => x0.beginPath(),
_49: x0 => x0.beginPath(),
_50: x0 => x0.stroke(),
_56: x0 => x0.beginPath(),
_57: x0 => x0.closePath(),
_58: x0 => x0.beginPath(),
_59: x0 => x0.beginPath(),
_60: x0 => x0.closePath(),
_61: x0 => x0.beginPath(),
_62: x0 => x0.beginPath(),
_63: x0 => x0.save(),
_64: x0 => x0.restore(),
_65: x0 => x0.remove(),
_66: x0 => x0.save(),
_67: x0 => x0.restore(),
_68: x0 => x0.stroke(),
_69: x0 => x0.stroke(),
_70: (x0,x1) => x0.drawPaint(x1),
_71: (x0,x1,x2) => x0.drawPath(x1,x2),
_72: (x0,x1) => x0.drawPicture(x1),
_74: x0 => x0.restore(),
_75: x0 => ({locateFile: x0}),
_76: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_77: () => new window.flutterCanvasKit.Paint(),
_78: (x0,x1) => ({B: x0,C: x1}),
_79: (x0,x1) => ({filter: x0,mipmap: x1}),
_80: () => new window.flutterCanvasKit.Path(),
_84: () => new window.flutterCanvasKit.PictureRecorder(),
_85: () => ({}),
_86: () => ({}),
_87: () => ({}),
_88: () => ({}),
_91: () => ({}),
_92: x0 => new window.flutterCanvasKit.Font(x0),
_93: (x0,x1) => ({ambient: x0,spot: x1}),
_95: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_107: x0 => x0.remove(),
_115: (x0,x1,x2) => x0.insertBefore(x1,x2),
_117: (x0,x1) => x0.append(x1),
_118: (x0,x1) => x0.append(x1),
_121: (x0,x1) => x0.append(x1),
_125: x0 => x0.delete(),
_126: x0 => x0.delete(),
_127: x0 => x0.Make(),
_128: x0 => x0.Make(),
_129: x0 => x0.enableFontFallback(),
_130: (x0,x1) => x0.setDefaultFontManager(x1),
_132: x0 => x0.clone(),
_134: x0 => x0.makeImageAtCurrentFrame(),
_135: x0 => x0.delete(),
_136: (x0,x1) => x0.setBlendMode(x1),
_137: (x0,x1) => x0.setStyle(x1),
_138: (x0,x1) => x0.setStrokeCap(x1),
_139: (x0,x1) => x0.setStrokeJoin(x1),
_140: (x0,x1) => x0.setColorFilter(x1),
_141: (x0,x1) => x0.setShader(x1),
_142: (x0,x1) => x0.setMaskFilter(x1),
_143: (x0,x1) => x0.setShader(x1),
_146: (x0,x1) => x0.setFillType(x1),
_149: (x0,x1) => x0.setFillType(x1),
_150: (x0,x1) => x0.setFillType(x1),
_152: x0 => x0.close(),
_153: x0 => x0.reset(),
_154: x0 => x0.copy(),
_155: (x0,x1,x2,x3) => x0.MakeFromOp(x1,x2,x3),
_159: x0 => x0.finishRecordingAsPicture(),
_160: x0 => x0.delete(),
_161: (x0,x1) => x0.prepend(x1),
_162: x0 => x0.releaseResourcesAndAbandonContext(),
_163: x0 => x0.delete(),
_164: x0 => x0.stopPropagation(),
_165: x0 => x0.preventDefault(),
_166: x0 => x0.preventDefault(),
_167: x0 => x0.remove(),
_168: (x0,x1) => x0.append(x1),
_169: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_170: x0 => x0.remove(),
_171: x0 => x0.getCanvas(),
_172: x0 => x0.flush(),
_173: x0 => x0.dispose(),
_174: x0 => x0.remove(),
_175: x0 => x0.remove(),
_176: (x0,x1) => x0.ParagraphStyle(x1),
_177: (x0,x1) => x0.TextStyle(x1),
_178: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_179: x0 => x0.build(),
_180: x0 => x0.delete(),
_181: x0 => x0.pop(),
_183: (x0,x1) => x0.pushStyle(x1),
_184: x0 => x0.focus(),
_185: x0 => x0.select(),
_186: (x0,x1) => x0.append(x1),
_187: x0 => x0.remove(),
_191: x0 => x0.getReader(),
_194: (x0,x1,x2) => new FontFace(x0,x1,x2),
_199: x0 => new Blob(x0),
_200: x0 => new MutationObserver(x0),
_215: (x0,x1) => new OffscreenCanvas(x0,x1),
_217: (x0,x1,x2) => x0.addEventListener(x1,x2),
_218: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_221: x0 => new ResizeObserver(x0),
_223: x0 => ({createScriptURL: x0}),
_224: (x0,x1) => new Intl.Segmenter(x0,x1),
_225: x0 => x0.next(),
_226: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_228: x0 => x0.remove(),
_229: (x0,x1) => x0.append(x1),
_230: (x0,x1) => x0.appendChild(x1),
_231: (x0,x1) => x0.appendChild(x1),
_232: (x0,x1) => x0.append(x1),
_233: (x0,x1) => x0.append(x1),
_234: (x0,x1) => x0.append(x1),
_235: (x0,x1) => x0.appendChild(x1),
_236: x0 => x0.unlock(),
_240: (x0,x1) => x0.append(x1),
_241: (x0,x1) => x0.append(x1),
_242: x0 => x0.remove(),
_243: (x0,x1) => x0.append(x1),
_244: (x0,x1) => x0.append(x1),
_245: x0 => x0.remove(),
_246: (x0,x1) => x0.append(x1),
_247: (x0,x1) => x0.append(x1),
_250: x0 => x0.save(),
_251: x0 => x0.restore(),
_252: (x0,x1) => x0.append(x1),
_253: (x0,x1) => x0.append(x1),
_254: (x0,x1) => x0.append(x1),
_255: (x0,x1) => x0.append(x1),
_257: (x0,x1) => x0.append(x1),
_258: (x0,x1) => x0.append(x1),
_259: x0 => x0.remove(),
_260: (x0,x1) => x0.append(x1),
_261: x0 => x0.remove(),
_262: x0 => x0.remove(),
_287: (x0,x1) => x0.append(x1),
_288: (x0,x1) => x0.append(x1),
_289: (x0,x1) => x0.append(x1),
_291: (x0,x1) => x0.append(x1),
_300: x0 => x0.remove(),
_301: (x0,x1) => x0.append(x1),
_302: (x0,x1) => x0.append(x1),
_303: (x0,x1) => x0.append(x1),
_304: (x0,x1) => x0.append(x1),
_305: (x0,x1) => x0.append(x1),
_306: (x0,x1) => x0.append(x1),
_307: (x0,x1) => x0.append(x1),
_308: (x0,x1,x2) => x0.insertBefore(x1,x2),
_309: x0 => x0.close(),
_310: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_311: x0 => new window.ImageDecoder(x0),
_312: x0 => x0.close(),
_313: x0 => ({frameIndex: x0}),
_314: (x0,x1) => x0.decode(x1),
_316: x0 => new Promise(x0),
_319: x0 => x0.preventDefault(),
_320: (x0,x1) => x0.addListener(x1),
_321: (x0,x1) => x0.removeListener(x1),
_322: (x0,x1) => x0.append(x1),
_323: x0 => x0.disconnect(),
_324: (x0,x1) => x0.addListener(x1),
_325: (x0,x1) => x0.removeListener(x1),
_326: (x0,x1) => x0.append(x1),
_327: x0 => x0.remove(),
_328: (x0,x1) => x0.append(x1),
_329: x0 => x0.remove(),
_330: x0 => x0.remove(),
_334: x0 => x0.preventDefault(),
_335: (x0,x1) => x0.append(x1),
_336: x0 => x0.remove(),
_337: x0 => x0.preventDefault(),
_338: x0 => x0.preventDefault(),
_339: x0 => x0.preventDefault(),
_340: (x0,x1) => x0.append(x1),
_341: x0 => x0.remove(),
_342: x0 => x0.beginPath(),
_347: (x0,x1) => x0.append(x1),
_348: (x0,x1) => x0.append(x1),
_349: (x0,x1) => x0.append(x1),
_350: x0 => x0.remove(),
_351: x0 => x0.focus(),
_352: x0 => x0.blur(),
_353: (x0,x1) => x0.append(x1),
_354: x0 => x0.remove(),
_355: (x0,x1) => x0.append(x1),
_356: x0 => x0.remove(),
_357: (x0,x1) => x0.append(x1),
_358: (x0,x1) => x0.append(x1),
_359: x0 => x0.remove(),
_360: (x0,x1) => x0.append(x1),
_361: (x0,x1) => x0.append(x1),
_362: (x0,x1,x2) => x0.insertBefore(x1,x2),
_363: x0 => x0.remove(),
_364: x0 => x0.remove(),
_365: x0 => x0.remove(),
_366: (x0,x1) => x0.append(x1),
_367: x0 => x0.remove(),
_368: x0 => x0.getBoundingClientRect(),
_369: x0 => x0.remove(),
_370: x0 => x0.blur(),
_372: (x0,x1) => x0.append(x1),
_373: x0 => x0.focus(),
_374: x0 => x0.remove(),
_375: x0 => x0.focus(),
_376: x0 => x0.focus(),
_377: x0 => x0.blur(),
_378: x0 => x0.remove(),
_379: (x0,x1) => x0.append(x1),
_380: x0 => x0.clear(),
_381: (x0,x1) => x0.add(x1),
_383: (x0,x1) => x0.appendChild(x1),
_385: x0 => x0.remove(),
_386: (x0,x1) => x0.append(x1),
_387: (x0,x1) => x0.append(x1),
_388: x0 => x0.getBoundingClientRect(),
_389: x0 => x0.getBoundingClientRect(),
_391: (x0,x1) => x0.append(x1),
_392: x0 => x0.preventDefault(),
_393: (x0,x1) => x0.append(x1),
_394: x0 => x0.remove(),
_395: (x0,x1) => x0.append(x1),
_396: (x0,x1,x2) => x0.insertBefore(x1,x2),
_397: (x0,x1) => x0.append(x1),
_398: x0 => x0.focus(),
_399: x0 => x0.focus(),
_400: x0 => x0.focus(),
_401: x0 => x0.focus(),
_402: x0 => x0.focus(),
_403: (x0,x1) => x0.append(x1),
_404: x0 => x0.focus(),
_405: x0 => x0.blur(),
_406: x0 => x0.remove(),
_408: x0 => x0.preventDefault(),
_409: x0 => x0.focus(),
_410: x0 => x0.preventDefault(),
_411: x0 => x0.preventDefault(),
_412: x0 => x0.preventDefault(),
_413: x0 => x0.focus(),
_414: x0 => x0.focus(),
_415: (x0,x1) => x0.append(x1),
_416: x0 => x0.focus(),
_417: x0 => x0.focus(),
_418: x0 => x0.focus(),
_419: x0 => x0.focus(),
_420: (x0,x1) => x0.observe(x1),
_421: x0 => x0.disconnect(),
_422: (x0,x1) => x0.appendChild(x1),
_424: x0 => x0.preventDefault(),
_426: (x0,x1) => x0.append(x1),
_428: x0 => x0.remove(),
_429: (x0,x1) => x0.append(x1),
_431: x0 => globalThis.window.flutterCanvasKit = x0,
_432: () => globalThis.window.flutterCanvasKit,
_433: x0 => x0.BlendMode,
_434: x0 => x0.PaintStyle,
_435: x0 => x0.StrokeCap,
_436: x0 => x0.StrokeJoin,
_437: x0 => x0.BlurStyle,
_438: x0 => x0.TileMode,
_439: x0 => x0.FilterMode,
_440: x0 => x0.MipmapMode,
_441: x0 => x0.FillType,
_442: x0 => x0.AlphaType,
_443: x0 => x0.ColorType,
_444: x0 => x0.PathOp,
_445: x0 => x0.ClipOp,
_448: x0 => x0.RectHeightStyle,
_449: x0 => x0.RectWidthStyle,
_451: x0 => x0.TextAlign,
_452: x0 => x0.TextHeightBehavior,
_453: x0 => x0.TextDirection,
_454: x0 => x0.FontWeight,
_456: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_457: x0 => x0.Shader,
_458: x0 => x0.MaskFilter,
_460: x0 => x0.ImageFilter,
_461: x0 => x0.Path,
_462: (x0,x1) => x0.computeTonalColors(x1),
_464: x0 => x0.ParagraphBuilder,
_470: x0 => x0.NoDecoration,
_471: x0 => x0.UnderlineDecoration,
_472: x0 => x0.OverlineDecoration,
_473: x0 => x0.LineThroughDecoration,
_474: x0 => x0.DecorationStyle,
_475: x0 => x0.TextBaseline,
_476: x0 => x0.PlaceholderAlignment,
_478: x0 => x0.TypefaceFontProvider,
_479: x0 => x0.FontCollection,
_480: x0 => x0.Typeface,
_481: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_483: (x0,x1) => x0.MakeGrContext(x1),
_484: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_488: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_489: x0 => globalThis.window.CanvasKitInit(x0),
_490: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._490(f,x0,x1)),
_491: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_499: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_506: x0 => x0.Thin,
_507: x0 => x0.ExtraLight,
_508: x0 => x0.Light,
_509: x0 => x0.Normal,
_510: x0 => x0.Medium,
_511: x0 => x0.SemiBold,
_512: x0 => x0.Bold,
_513: x0 => x0.ExtraBold,
_514: x0 => x0.ExtraBlack,
_518: x0 => x0.value,
_519: x0 => x0.RTL,
_520: x0 => x0.LTR,
_521: x0 => x0.value,
_522: x0 => x0.Left,
_523: x0 => x0.Right,
_524: x0 => x0.Center,
_525: x0 => x0.Justify,
_526: x0 => x0.Start,
_527: x0 => x0.End,
_529: x0 => x0.All,
_530: x0 => x0.DisableFirstAscent,
_531: x0 => x0.DisableLastDescent,
_532: x0 => x0.DisableAll,
_534: x0 => x0.Tight,
_535: x0 => x0.Max,
_536: x0 => x0.IncludeLineSpacingMiddle,
_537: x0 => x0.IncludeLineSpacingTop,
_538: x0 => x0.IncludeLineSpacingBottom,
_539: x0 => x0.Strut,
_541: x0 => x0.Tight,
_542: x0 => x0.Max,
_552: x0 => x0.Difference,
_553: x0 => x0.Intersect,
_555: x0 => x0.Winding,
_556: x0 => x0.EvenOdd,
_558: x0 => x0.Difference,
_559: x0 => x0.Intersect,
_560: x0 => x0.Union,
_561: x0 => x0.XOR,
_562: x0 => x0.ReverseDifference,
_564: x0 => x0.Normal,
_565: x0 => x0.Solid,
_566: x0 => x0.Outer,
_567: x0 => x0.Inner,
_569: x0 => x0.Butt,
_570: x0 => x0.Round,
_571: x0 => x0.Square,
_573: x0 => x0.Stroke,
_574: x0 => x0.Fill,
_576: x0 => x0.Clear,
_577: x0 => x0.Src,
_578: x0 => x0.Dst,
_579: x0 => x0.SrcOver,
_580: x0 => x0.DstOver,
_581: x0 => x0.SrcIn,
_582: x0 => x0.DstIn,
_583: x0 => x0.SrcOut,
_584: x0 => x0.DstOut,
_585: x0 => x0.SrcATop,
_586: x0 => x0.DstATop,
_587: x0 => x0.Xor,
_588: x0 => x0.Plus,
_589: x0 => x0.Modulate,
_590: x0 => x0.Screen,
_591: x0 => x0.Overlay,
_592: x0 => x0.Darken,
_593: x0 => x0.Lighten,
_594: x0 => x0.ColorDodge,
_595: x0 => x0.ColorBurn,
_596: x0 => x0.HardLight,
_597: x0 => x0.SoftLight,
_598: x0 => x0.Difference,
_599: x0 => x0.Exclusion,
_600: x0 => x0.Multiply,
_601: x0 => x0.Hue,
_602: x0 => x0.Saturation,
_603: x0 => x0.Color,
_604: x0 => x0.Luminosity,
_606: x0 => x0.Miter,
_607: x0 => x0.Round,
_608: x0 => x0.Bevel,
_610: x0 => x0.Clamp,
_611: x0 => x0.Repeat,
_612: x0 => x0.Mirror,
_613: x0 => x0.Decal,
_615: x0 => x0.Nearest,
_616: x0 => x0.Linear,
_618: x0 => x0.None,
_620: x0 => x0.Linear,
_623: x0 => x0.Premul,
_629: x0 => x0.RGBA_8888,
_638: x0 => x0.getFrameCount(),
_639: x0 => x0.getRepetitionCount(),
_640: x0 => x0.currentFrameDuration(),
_641: x0 => x0.decodeNextFrame(),
_649: x0 => x0.width(),
_650: x0 => x0.height(),
_657: (x0,x1) => x0.isAliasOf(x1),
_659: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_664: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_668: (x0,x1) => x0.setStrokeWidth(x1),
_671: (x0,x1) => x0.setAntiAlias(x1),
_672: (x0,x1) => x0.setColorInt(x1),
_687: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_688: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_694: () => globalThis.Float32Array,
_696: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_700: x0 => x0.toTypedArray(),
_705: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_706: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_707: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_710: (x0,x1,x2) => x0.addRRect(x1,x2),
_711: (x0,x1) => x0.addRect(x1),
_713: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_716: (x0,x1,x2) => x0.contains(x1,x2),
_719: x0 => x0.getBounds(),
_720: (x0,x1,x2) => x0.lineTo(x1,x2),
_721: (x0,x1,x2) => x0.moveTo(x1,x2),
_736: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_746: (x0,x1) => x0.beginRecording(x1),
_749: (x0,x1) => x0.clear(x1),
_751: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_752: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_753: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_758: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_760: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_764: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_765: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_767: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_768: (x0,x1,x2) => x0.drawOval(x1,x2),
_773: (x0,x1,x2) => x0.drawRRect(x1,x2),
_774: (x0,x1,x2) => x0.drawRect(x1,x2),
_775: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_777: x0 => x0.save(),
_779: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_783: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_784: (x0,x1,x2) => x0.scale(x1,x2),
_787: (x0,x1) => x0.concat(x1),
_788: (x0,x1,x2) => x0.translate(x1,x2),
_792: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_796: (x0,x1) => x0.addText(x1),
_800: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_801: x0 => x0.getText(),
_804: (x0,x1) => x0.setWordsUtf16(x1),
_806: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_809: (x0,x1) => x0.setLineBreaksUtf16(x1),
_813: (x0,x1) => x0.textAlign = x1,
_814: (x0,x1) => x0.textDirection = x1,
_815: (x0,x1) => x0.heightMultiplier = x1,
_816: (x0,x1) => x0.textHeightBehavior = x1,
_817: (x0,x1) => x0.maxLines = x1,
_818: (x0,x1) => x0.ellipsis = x1,
_819: (x0,x1) => x0.textStyle = x1,
_820: (x0,x1) => x0.strutStyle = x1,
_821: (x0,x1) => x0.replaceTabCharacters = x1,
_822: (x0,x1) => x0.applyRoundingHack = x1,
_823: x0 => x0.Solid,
_824: x0 => x0.Double,
_825: x0 => x0.Dotted,
_826: x0 => x0.Dashed,
_827: x0 => x0.Wavy,
_829: x0 => x0.Alphabetic,
_830: x0 => x0.Ideographic,
_832: x0 => x0.Baseline,
_833: x0 => x0.AboveBaseline,
_834: x0 => x0.BelowBaseline,
_835: x0 => x0.Top,
_836: x0 => x0.Bottom,
_837: x0 => x0.Middle,
_840: (x0,x1) => x0.color = x1,
_842: (x0,x1) => x0.decoration = x1,
_843: (x0,x1) => x0.decorationThickness = x1,
_844: (x0,x1) => x0.decorationColor = x1,
_845: (x0,x1) => x0.decorationStyle = x1,
_846: (x0,x1) => x0.textBaseline = x1,
_847: (x0,x1) => x0.fontSize = x1,
_848: (x0,x1) => x0.letterSpacing = x1,
_849: (x0,x1) => x0.wordSpacing = x1,
_850: (x0,x1) => x0.heightMultiplier = x1,
_851: (x0,x1) => x0.halfLeading = x1,
_853: (x0,x1) => x0.fontFamilies = x1,
_854: (x0,x1) => x0.fontStyle = x1,
_857: (x0,x1) => x0.fontVariations = x1,
_858: (x0,x1) => x0.fontFamilies = x1,
_859: (x0,x1) => x0.fontStyle = x1,
_860: (x0,x1) => x0.fontSize = x1,
_861: (x0,x1) => x0.heightMultiplier = x1,
_862: (x0,x1) => x0.halfLeading = x1,
_864: (x0,x1) => x0.strutEnabled = x1,
_865: (x0,x1) => x0.forceStrutHeight = x1,
_866: (x0,x1) => x0.weight = x1,
_873: (x0,x1) => x0.axis = x1,
_874: (x0,x1) => x0.value = x1,
_875: (x0,x1) => x0.getGlyphIDs(x1),
_876: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_880: (x0,x1,x2) => x0.registerFont(x1,x2),
_884: x0 => x0.startIndex,
_885: x0 => x0.endIndex,
_888: x0 => x0.isHardBreak,
_889: x0 => x0.ascent,
_890: x0 => x0.descent,
_892: x0 => x0.width,
_893: x0 => x0.left,
_894: x0 => x0.baseline,
_895: x0 => x0.lineNumber,
_896: x0 => x0.rect,
_899: x0 => x0.dir,
_900: x0 => x0.getAlphabeticBaseline(),
_901: x0 => x0.didExceedMaxLines(),
_902: x0 => x0.getHeight(),
_903: x0 => x0.getIdeographicBaseline(),
_905: x0 => x0.getLineMetrics(),
_906: x0 => x0.getLongestLine(),
_907: x0 => x0.getMaxIntrinsicWidth(),
_908: x0 => x0.getMinIntrinsicWidth(),
_909: x0 => x0.getMaxWidth(),
_910: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_912: x0 => x0.getRectsForPlaceholders(),
_913: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_914: (x0,x1) => x0.getWordBoundary(x1),
_915: (x0,x1) => x0.layout(x1),
_917: x0 => x0.affinity,
_918: x0 => x0.pos,
_919: x0 => x0.start,
_920: x0 => x0.end,
_922: x0 => x0.ambient,
_923: x0 => x0.spot,
_929: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_931: x0 => x0.isDeleted(),
_957: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_958: (x0,x1) => x0.makeShader(x1),
_959: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_960: x0 => x0.remove(),
_961: x0 => x0.remove(),
_962: (x0,x1) => x0.appendChild(x1),
_964: () => globalThis.window.flutterConfiguration,
_965: x0 => x0.assetBase,
_966: x0 => x0.canvasKitBaseUrl,
_967: x0 => x0.canvasKitVariant,
_968: x0 => x0.canvasKitForceCpuOnly,
_969: x0 => x0.canvasKitMaximumSurfaces,
_970: x0 => x0.debugShowSemanticsNodes,
_971: x0 => x0.hostElement,
_972: x0 => x0.nonce,
_973: x0 => x0.renderer,
_974: x0 => x0.useColorEmoji,
_975: () => globalThis.window.flutterWebRenderer,
_977: x0 => x0.console,
_978: x0 => x0.devicePixelRatio,
_979: x0 => x0.document,
_980: x0 => x0.history,
_981: x0 => x0.innerHeight,
_982: x0 => x0.innerWidth,
_983: x0 => x0.location,
_984: x0 => x0.navigator,
_985: x0 => x0.visualViewport,
_986: x0 => x0.performance,
_987: (x0,x1) => x0.fetch(x1),
_989: x0 => x0.URL,
_990: (x0,x1) => x0.dispatchEvent(x1),
_991: (x0,x1) => x0.matchMedia(x1),
_992: (x0,x1) => x0.getComputedStyle(x1),
_994: x0 => x0.screen,
_995: (x0,x1) => x0.requestAnimationFrame(x1),
_996: f => finalizeWrapper(f,x0 => dartInstance.exports._996(f,x0)),
_1000: x0 => x0.trustedTypes,
_1001: (x0,x1) => x0.warn(x1),
_1003: (x0,x1) => x0.error(x1),
_1004: (x0,x1) => x0.debug(x1),
_1005: () => globalThis.window,
_1006: () => globalThis.Intl,
_1007: () => globalThis.Symbol,
_1008: x0 => x0.clipboard,
_1009: x0 => x0.maxTouchPoints,
_1010: x0 => x0.vendor,
_1011: x0 => x0.language,
_1012: x0 => x0.platform,
_1013: x0 => x0.userAgent,
_1014: x0 => x0.languages,
_1015: x0 => x0.documentElement,
_1016: (x0,x1) => x0.querySelector(x1),
_1018: (x0,x1) => x0.createElement(x1),
_1020: (x0,x1) => x0.execCommand(x1),
_1023: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1024: (x0,x1) => x0.createTextNode(x1),
_1025: (x0,x1) => x0.createEvent(x1),
_1028: x0 => x0.fonts,
_1029: x0 => x0.head,
_1030: x0 => x0.body,
_1031: (x0,x1) => x0.title = x1,
_1034: x0 => x0.activeElement,
_1036: () => globalThis.document,
_1037: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1038: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1039: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1040: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1041: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1043: f => finalizeWrapper(f,x0 => dartInstance.exports._1043(f,x0)),
_1044: x0 => x0.target,
_1046: x0 => x0.timeStamp,
_1047: x0 => x0.type,
_1052: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1057: x0 => x0.firstChild,
_1060: x0 => x0.lastChild,
_1061: (x0,x1) => x0.appendChild(x1),
_1062: x0 => x0.parentElement,
_1064: x0 => x0.parentNode,
_1067: (x0,x1) => x0.removeChild(x1),
_1068: (x0,x1) => x0.removeChild(x1),
_1069: x0 => x0.isConnected,
_1070: (x0,x1) => x0.textContent = x1,
_1071: (x0,x1) => x0.cloneNode(x1),
_1072: (x0,x1) => x0.contains(x1),
_1077: x0 => x0.children,
_1079: x0 => x0.clientHeight,
_1080: x0 => x0.clientWidth,
_1081: x0 => x0.id,
_1082: (x0,x1) => x0.id = x1,
_1085: (x0,x1) => x0.spellcheck = x1,
_1086: x0 => x0.tagName,
_1087: x0 => x0.style,
_1088: (x0,x1) => x0.append(x1),
_1089: (x0,x1) => x0.getAttribute(x1),
_1091: x0 => x0.getBoundingClientRect(),
_1097: (x0,x1) => x0.querySelectorAll(x1),
_1099: x0 => x0.remove(),
_1101: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1102: (x0,x1) => x0.removeAttribute(x1),
_1103: (x0,x1) => x0.tabIndex = x1,
_1106: x0 => x0.scrollTop,
_1107: (x0,x1) => x0.scrollTop = x1,
_1108: x0 => x0.scrollLeft,
_1109: (x0,x1) => x0.scrollLeft = x1,
_1110: x0 => x0.classList,
_1111: (x0,x1) => x0.className = x1,
_1118: (x0,x1) => x0.getElementsByClassName(x1),
_1119: x0 => x0.click(),
_1122: (x0,x1) => x0.attachShadow(x1),
_1124: (x0,x1) => x0.getPropertyValue(x1),
_1126: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1128: (x0,x1) => x0.removeProperty(x1),
_1130: x0 => x0.offsetLeft,
_1131: x0 => x0.offsetTop,
_1132: x0 => x0.offsetParent,
_1134: (x0,x1) => x0.name = x1,
_1135: x0 => x0.content,
_1136: (x0,x1) => x0.content = x1,
_1139: x0 => x0.src,
_1140: (x0,x1) => x0.src = x1,
_1141: x0 => x0.naturalWidth,
_1142: x0 => x0.naturalHeight,
_1145: x0 => x0.decode(),
_1146: (x0,x1) => x0.src = x1,
_1147: (x0,x1) => x0.nonce = x1,
_1149: (x0,x1) => x0.nonce = x1,
_1151: x0 => x0.sheet,
_1154: x0 => x0.now(),
_1156: (x0,x1) => x0.width = x1,
_1158: (x0,x1) => x0.height = x1,
_1160: (x0,x1) => x0.toDataURL(x1),
_1161: (x0,x1) => x0.getContext(x1),
_1162: (x0,x1,x2) => x0.getContext(x1,x2),
_1163: (x0,x1) => x0.getParameter(x1),
_1164: x0 => x0.SAMPLES,
_1165: x0 => x0.STENCIL_BITS,
_1167: x0 => x0.fillStyle,
_1168: (x0,x1) => x0.fillStyle = x1,
_1169: x0 => x0.font,
_1170: (x0,x1) => x0.font = x1,
_1172: (x0,x1) => x0.direction = x1,
_1173: (x0,x1) => x0.lineWidth = x1,
_1174: (x0,x1) => x0.strokeStyle = x1,
_1175: x0 => x0.strokeStyle,
_1179: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1180: (x0,x1,x2) => x0.createPattern(x1,x2),
_1183: x0 => x0.fill(),
_1184: (x0,x1) => x0.fill(x1),
_1185: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1186: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1191: (x0,x1,x2) => x0.lineTo(x1,x2),
_1193: (x0,x1) => x0.measureText(x1),
_1194: (x0,x1,x2) => x0.moveTo(x1,x2),
_1195: x0 => x0.save(),
_1197: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1199: x0 => x0.restore(),
_1201: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1202: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1203: x0 => x0.clip(),
_1204: (x0,x1) => x0.clip(x1),
_1206: (x0,x1,x2) => x0.scale(x1,x2),
_1207: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1208: (x0,x1,x2) => x0.translate(x1,x2),
_1209: (x0,x1) => x0.rotate(x1),
_1210: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1211: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1212: (x0,x1) => x0.globalCompositeOperation = x1,
_1213: (x0,x1) => x0.lineCap = x1,
_1214: (x0,x1) => x0.lineJoin = x1,
_1215: (x0,x1) => x0.shadowBlur = x1,
_1217: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1218: (x0,x1) => x0.filter = x1,
_1219: (x0,x1) => x0.shadowOffsetX = x1,
_1220: (x0,x1) => x0.shadowOffsetY = x1,
_1221: (x0,x1) => x0.shadowColor = x1,
_1223: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1225: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1226: (x0,x1) => x0.globalAlpha = x1,
_1230: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1231: x0 => x0.status,
_1233: x0 => x0.body,
_1234: x0 => x0.arrayBuffer(),
_1239: x0 => x0.read(),
_1240: x0 => x0.value,
_1241: x0 => x0.done,
_1242: x0 => x0.width,
_1243: x0 => x0.name,
_1244: x0 => x0.x,
_1245: x0 => x0.y,
_1246: x0 => x0.width,
_1247: x0 => x0.height,
_1248: x0 => x0.top,
_1249: x0 => x0.right,
_1250: x0 => x0.bottom,
_1251: x0 => x0.left,
_1252: x0 => x0.load(),
_1260: x0 => x0.height,
_1261: x0 => x0.width,
_1262: (x0,x1) => x0.value = x1,
_1265: (x0,x1) => x0.placeholder = x1,
_1266: (x0,x1) => x0.name = x1,
_1267: x0 => x0.selectionStart,
_1268: x0 => x0.selectionEnd,
_1271: x0 => x0.value,
_1272: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1276: x0 => x0.readText(),
_1277: (x0,x1) => x0.writeText(x1),
_1278: x0 => x0.altKey,
_1279: x0 => x0.code,
_1280: x0 => x0.ctrlKey,
_1281: x0 => x0.key,
_1282: x0 => x0.keyCode,
_1283: x0 => x0.location,
_1284: x0 => x0.metaKey,
_1285: x0 => x0.repeat,
_1286: x0 => x0.shiftKey,
_1287: x0 => x0.isComposing,
_1288: (x0,x1) => x0.getModifierState(x1),
_1289: x0 => x0.state,
_1292: (x0,x1) => x0.go(x1),
_1293: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1294: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1295: x0 => x0.pathname,
_1296: x0 => x0.search,
_1297: x0 => x0.hash,
_1300: x0 => x0.state,
_1301: (x0,x1) => x0.createObjectURL(x1),
_1302: (x0,x1) => x0.revokeObjectURL(x1),
_1303: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1303(f,x0,x1)),
_1305: (x0,x1,x2) => x0.observe(x1,x2),
_1308: x0 => x0.attributeName,
_1309: x0 => x0.type,
_1310: x0 => x0.matches,
_1313: x0 => x0.matches,
_1314: x0 => x0.clientX,
_1315: x0 => x0.clientY,
_1316: x0 => x0.offsetX,
_1317: x0 => x0.offsetY,
_1320: x0 => x0.button,
_1321: x0 => x0.buttons,
_1322: x0 => x0.ctrlKey,
_1323: (x0,x1) => x0.getModifierState(x1),
_1324: x0 => x0.pointerId,
_1325: x0 => x0.pointerType,
_1326: x0 => x0.pressure,
_1327: x0 => x0.tiltX,
_1328: x0 => x0.tiltY,
_1329: x0 => x0.getCoalescedEvents(),
_1330: x0 => x0.deltaX,
_1331: x0 => x0.deltaY,
_1332: x0 => x0.wheelDeltaX,
_1333: x0 => x0.wheelDeltaY,
_1334: x0 => x0.deltaMode,
_1335: x0 => x0.altKey,
_1336: x0 => x0.ctrlKey,
_1337: x0 => x0.metaKey,
_1338: x0 => x0.shiftKey,
_1339: x0 => x0.changedTouches,
_1340: x0 => x0.identifier,
_1341: x0 => x0.clientX,
_1342: x0 => x0.clientY,
_1343: x0 => x0.data,
_1344: (x0,x1) => x0.type = x1,
_1345: (x0,x1) => x0.max = x1,
_1346: (x0,x1) => x0.min = x1,
_1347: (x0,x1) => x0.value = x1,
_1348: x0 => x0.value,
_1349: x0 => x0.disabled,
_1350: (x0,x1) => x0.disabled = x1,
_1351: (x0,x1) => x0.placeholder = x1,
_1352: (x0,x1) => x0.name = x1,
_1353: (x0,x1) => x0.autocomplete = x1,
_1354: x0 => x0.selectionStart,
_1355: x0 => x0.selectionEnd,
_1359: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1367: (x0,x1) => x0.add(x1),
_1370: (x0,x1) => x0.noValidate = x1,
_1371: (x0,x1) => x0.method = x1,
_1372: (x0,x1) => x0.action = x1,
_1375: (x0,x1) => x0.height = x1,
_1376: (x0,x1) => x0.width = x1,
_1379: (x0,x1,x2) => x0.getContext(x1,x2),
_1391: x0 => x0.cssRules,
_1393: (x0,x1,x2) => x0.insertRule(x1,x2),
_1395: x0 => x0.orientation,
_1398: (x0,x1) => x0.lock(x1),
_1413: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1413(f,x0,x1)),
_1418: x0 => x0.contentRect,
_1420: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1421: (x0,x1) => x0.createScriptURL(x1),
_1423: x0 => x0.length,
_1424: (x0,x1) => x0.item(x1),
_1425: x0 => x0.length,
_1427: (x0,x1) => x0.item(x1),
_1428: x0 => x0.iterator,
_1429: x0 => x0.Segmenter,
_1430: x0 => x0.v8BreakIterator,
_1431: (x0,x1) => x0.segment(x1),
_1433: x0 => x0.done,
_1434: x0 => x0.value,
_1435: x0 => x0.index,
_1439: (x0,x1) => x0.adoptText(x1),
_1440: x0 => x0.first(),
_1441: x0 => x0.next(),
_1443: x0 => x0.current(),
_1447: () => globalThis.window.FinalizationRegistry,
_1448: (x0,x1,x2) => x0.register(x1,x2),
_1451: x0 => x0.loader,
_1452: () => globalThis._flutter,
_1455: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1455(f,x0,x1)),
_1461: () => globalThis.window.ImageDecoder,
_1462: x0 => x0.tracks,
_1467: x0 => x0.image,
_1474: x0 => x0.displayWidth,
_1475: x0 => x0.displayHeight,
_1476: x0 => x0.duration,
_1479: x0 => x0.ready,
_1480: x0 => x0.selectedTrack,
_1481: x0 => x0.repetitionCount,
_1482: x0 => x0.frameCount,
_1523: f => finalizeWrapper(f,x0 => dartInstance.exports._1523(f,x0)),
_1524: f => finalizeWrapper(f,x0 => dartInstance.exports._1524(f,x0)),
_24: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1533: (x0,x1) => x0.matchMedia(x1),
_1534: x0 => x0.navigator,
_1536: () => globalThis.window,
_1537: x0 => x0.matches,
_1538: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

