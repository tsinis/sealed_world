  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1: () => globalThis.removeSplashFromWeb(),
_1546: (x0,x1) => x0.matchMedia(x1),
_12310: x0 => x0.matches,
_3311: () => globalThis.window,
_3393: x0 => x0.navigator,
_3884: x0 => x0.platform,
_1679: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1680: s => console.log(stringFromDartString(s)),
_1583: o => o === undefined,
_1584: o => typeof o === 'boolean',
_1585: o => typeof o === 'number',
_1587: o => typeof o === 'string',
_1590: o => o instanceof Int8Array,
_1591: o => o instanceof Uint8Array,
_1592: o => o instanceof Uint8ClampedArray,
_1593: o => o instanceof Int16Array,
_1594: o => o instanceof Uint16Array,
_1595: o => o instanceof Int32Array,
_1596: o => o instanceof Uint32Array,
_1597: o => o instanceof Float32Array,
_1598: o => o instanceof Float64Array,
_1599: o => o instanceof ArrayBuffer,
_1600: o => o instanceof DataView,
_1601: o => o instanceof Array,
_1602: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1604: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1605: o => o instanceof RegExp,
_1606: (l, r) => l === r,
_1607: o => o,
_1608: o => o,
_1609: o => o,
_1610: b => !!b,
_1611: o => o.length,
_1614: (o, i) => o[i],
_1615: f => f.dartFunction,
_1616: l => arrayFromDartList(Int8Array, l),
_1617: l => arrayFromDartList(Uint8Array, l),
_1618: l => arrayFromDartList(Uint8ClampedArray, l),
_1619: l => arrayFromDartList(Int16Array, l),
_1620: l => arrayFromDartList(Uint16Array, l),
_1621: l => arrayFromDartList(Int32Array, l),
_1622: l => arrayFromDartList(Uint32Array, l),
_1623: l => arrayFromDartList(Float32Array, l),
_1624: l => arrayFromDartList(Float64Array, l),
_1625: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1626: l => arrayFromDartList(Array, l),
_1627: stringFromDartString,
_1628: stringToDartString,
_1629: () => ({}),
_1630: () => [],
_1631: () => globalThis,
_1632: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1633: (o, p) => p in o,
_1634: (o, p) => o[p],
_1635: (o, p, v) => o[p] = v,
_1636: (o, m, a) => o[m].apply(o, a),
_1639: (p, s, f) => p.then(s, f),
_1641: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1572: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1573: (x0,x1) => x0.exec(x1),
_1574: (x0,x1) => x0.test(x1),
_1575: (x0,x1) => x0.exec(x1),
_1576: (x0,x1) => x0.exec(x1),
_1577: x0 => x0.pop(),
_1580: (x0,x1) => x0[x1],
_1581: (x0,x1,x2) => x0[x1] = x2,
_1638: o => String(o),
_1640: x0 => new Array(x0),
_1643: x0 => x0.index,
_1645: x0 => x0.length,
_1649: x0 => x0.flags,
_1650: x0 => x0.multiline,
_1651: x0 => x0.ignoreCase,
_1652: x0 => x0.unicode,
_1653: x0 => x0.dotAll,
_1654: (x0,x1) => x0.lastIndex = x1,
_1688: (a, i) => a.push(i),
_1689: (a, i) => a.splice(i, 1)[0],
_1692: a => a.pop(),
_1693: (a, i) => a.splice(i, 1),
_1699: a => a.length,
_1701: (a, i) => a[i],
_1702: (a, i, v) => a[i] = v,
_1704: (s, i) => s.charCodeAt(i),
_1705: (a, b) => a + b,
_1708: (s, t) => s.split(t),
_1709: (o, s, i) => o.substring(s, i),
_1710: s => s.toLowerCase(),
_1711: s => s.toUpperCase(),
_1712: s => s.trim(),
_1713: s => s.trimLeft(),
_1714: s => s.trimRight(),
_1716: (s, p, i) => s.indexOf(p, i),
_1717: (s, p, i) => s.lastIndexOf(p, i),
_1718: s => s.length,
_1719: (s, i) => s[i],
_1721: o => o.buffer,
_1722: o => o.byteLength,
_1723: o => o.byteOffset,
_1724: o => o.BYTES_PER_ELEMENT,
_1725: o => o.length,
_1726: (b, o) => new DataView(b, o),
_1727: (b, o, l) => new DataView(b, o, l),
_1729: (b, o, e) => b.getFloat64(o, e),
_1731: (b, o, e) => b.getInt32(o, e),
_1732: (b, o, e) => b.getBigInt64(o, e),
_1734: (b, o, e) => b.getUint16(o, e),
_1735: (b, o, e) => b.getUint32(o, e),
_1737: (b, o) => b.getUint8(o),
_1748: (o, i) => o[i],
_1749: (o, i, v) => o[i] = v,
_1750: (b, o) => new Uint8Array(b, o),
_1751: (b, o, l) => new Uint8Array(b, o, l),
_1752: (a, s, p) => new Uint8Array(a.subarray(s, p)),
_1765: (b, o, l) => new Int32Array(b, o, l),
_1767: (o, i) => o[i],
_1768: (o, i, v) => o[i] = v,
_1771: (b, o, l) => new BigInt64Array(b, o, l),
_1773: (o, i) => o[i],
_1774: (o, i, v) => o[i] = v,
_1775: (b, o, l) => new Float32Array(b, o, l),
_1777: (b, o, l) => new Float64Array(b, o, l),
_1779: (s, k, e) => s.subarray(k, e),
_1780: (t, s, i) => t.set(s, i),
_1681: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1682: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1786: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1787: (handle) => clearTimeout(handle),
_1788: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1789: (handle) => clearInterval(handle),
_1791: () => Date.now(),
_1790: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1781: (o, t) => o instanceof t,
_1783: f => finalizeWrapper(f,x0 => dartInstance.exports._1783(f,x0)),
_1784: f => finalizeWrapper(f,x0 => dartInstance.exports._1784(f,x0)),
_1785: o => Object.keys(o),
_1655: o => new WeakRef(o),
_1656: r => r.deref(),
_1661: v => stringToDartString(v.toString()),
_1662: (d, digits) => stringToDartString(d.toFixed(digits)),
_1665: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1666: Date.now,
_1668: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1669: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1670: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1671: () => typeof dartUseDateNowForTicks !== "undefined",
_1672: () => 1000 * performance.now(),
_1673: () => Date.now(),
_1676: () => new WeakMap(),
_1677: (map, o) => map.get(o),
_1678: (map, o, v) => map.set(o, v),
_14: () => ({}),
_15: (x0,x1) => x0.append(x1),
_16: x0 => x0.save(),
_17: x0 => x0.remove(),
_18: x0 => x0.restore(),
_19: x0 => x0.save(),
_20: x0 => x0.save(),
_21: x0 => x0.restore(),
_22: x0 => x0.beginPath(),
_24: x0 => x0.beginPath(),
_25: x0 => x0.beginPath(),
_26: x0 => x0.stroke(),
_32: x0 => x0.beginPath(),
_33: x0 => x0.closePath(),
_34: x0 => x0.beginPath(),
_35: x0 => x0.beginPath(),
_36: x0 => x0.closePath(),
_37: x0 => x0.beginPath(),
_38: x0 => x0.beginPath(),
_39: x0 => x0.save(),
_40: x0 => x0.restore(),
_41: x0 => x0.remove(),
_42: x0 => x0.save(),
_43: x0 => x0.restore(),
_44: x0 => x0.stroke(),
_45: x0 => x0.stroke(),
_46: (x0,x1) => x0.drawPaint(x1),
_47: (x0,x1,x2) => x0.drawPath(x1,x2),
_48: (x0,x1) => x0.drawPicture(x1),
_50: x0 => x0.restore(),
_51: x0 => ({locateFile: x0}),
_52: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_53: () => new window.flutterCanvasKit.Paint(),
_54: (x0,x1) => ({B: x0,C: x1}),
_55: (x0,x1) => ({filter: x0,mipmap: x1}),
_56: () => new window.flutterCanvasKit.Path(),
_60: () => new window.flutterCanvasKit.PictureRecorder(),
_61: () => ({}),
_62: () => ({}),
_63: () => ({}),
_64: () => ({}),
_67: () => ({}),
_68: x0 => new window.flutterCanvasKit.Font(x0),
_69: (x0,x1) => ({ambient: x0,spot: x1}),
_71: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_83: x0 => x0.remove(),
_91: (x0,x1,x2) => x0.insertBefore(x1,x2),
_93: (x0,x1) => x0.append(x1),
_94: (x0,x1) => x0.append(x1),
_97: (x0,x1) => x0.append(x1),
_101: x0 => x0.delete(),
_102: x0 => x0.delete(),
_103: x0 => x0.Make(),
_104: x0 => x0.Make(),
_105: x0 => x0.enableFontFallback(),
_106: (x0,x1) => x0.setDefaultFontManager(x1),
_108: x0 => x0.clone(),
_110: x0 => x0.makeImageAtCurrentFrame(),
_111: x0 => x0.delete(),
_112: (x0,x1) => x0.setBlendMode(x1),
_113: (x0,x1) => x0.setStyle(x1),
_114: (x0,x1) => x0.setStrokeCap(x1),
_115: (x0,x1) => x0.setStrokeJoin(x1),
_116: (x0,x1) => x0.setColorFilter(x1),
_117: (x0,x1) => x0.setShader(x1),
_118: (x0,x1) => x0.setMaskFilter(x1),
_119: (x0,x1) => x0.setShader(x1),
_121: (x0,x1) => x0.setImageFilter(x1),
_122: (x0,x1) => x0.setFillType(x1),
_125: (x0,x1) => x0.setFillType(x1),
_126: (x0,x1) => x0.setFillType(x1),
_128: x0 => x0.close(),
_129: x0 => x0.reset(),
_130: x0 => x0.copy(),
_135: x0 => x0.finishRecordingAsPicture(),
_136: x0 => x0.delete(),
_137: (x0,x1) => x0.prepend(x1),
_138: x0 => x0.releaseResourcesAndAbandonContext(),
_139: x0 => x0.delete(),
_140: x0 => x0.stopPropagation(),
_141: x0 => x0.preventDefault(),
_142: x0 => x0.preventDefault(),
_143: x0 => x0.remove(),
_144: (x0,x1) => x0.append(x1),
_145: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_146: x0 => x0.remove(),
_147: x0 => x0.getCanvas(),
_148: x0 => x0.flush(),
_149: x0 => x0.dispose(),
_150: x0 => x0.remove(),
_151: x0 => x0.remove(),
_152: (x0,x1) => x0.ParagraphStyle(x1),
_153: (x0,x1) => x0.TextStyle(x1),
_154: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_155: x0 => x0.build(),
_156: x0 => x0.delete(),
_157: x0 => x0.pop(),
_158: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_159: (x0,x1) => x0.pushStyle(x1),
_160: x0 => x0.focus(),
_161: x0 => x0.select(),
_162: (x0,x1) => x0.append(x1),
_163: x0 => x0.remove(),
_164: x0 => x0.unlock(),
_168: x0 => x0.getReader(),
_171: (x0,x1,x2) => new FontFace(x0,x1,x2),
_176: x0 => new Blob(x0),
_178: x0 => new MutationObserver(x0),
_195: (x0,x1) => new OffscreenCanvas(x0,x1),
_197: (x0,x1,x2) => x0.addEventListener(x1,x2),
_198: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_201: x0 => new ResizeObserver(x0),
_203: x0 => ({createScriptURL: x0}),
_204: (x0,x1) => new Intl.Segmenter(x0,x1),
_205: x0 => x0.next(),
_206: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_208: x0 => x0.remove(),
_209: (x0,x1) => x0.append(x1),
_210: (x0,x1) => x0.appendChild(x1),
_211: (x0,x1) => x0.appendChild(x1),
_212: (x0,x1) => x0.append(x1),
_213: (x0,x1) => x0.append(x1),
_214: (x0,x1) => x0.append(x1),
_215: (x0,x1) => x0.appendChild(x1),
_219: (x0,x1) => x0.append(x1),
_220: (x0,x1) => x0.append(x1),
_221: x0 => x0.remove(),
_222: (x0,x1) => x0.append(x1),
_223: (x0,x1) => x0.append(x1),
_224: x0 => x0.remove(),
_225: (x0,x1) => x0.append(x1),
_226: (x0,x1) => x0.append(x1),
_229: x0 => x0.save(),
_230: x0 => x0.restore(),
_231: (x0,x1) => x0.append(x1),
_232: (x0,x1) => x0.append(x1),
_233: (x0,x1) => x0.append(x1),
_234: (x0,x1) => x0.append(x1),
_236: (x0,x1) => x0.append(x1),
_237: (x0,x1) => x0.append(x1),
_238: x0 => x0.remove(),
_239: (x0,x1) => x0.append(x1),
_240: x0 => x0.remove(),
_241: x0 => x0.remove(),
_266: (x0,x1) => x0.append(x1),
_267: (x0,x1) => x0.append(x1),
_268: (x0,x1) => x0.append(x1),
_269: (x0,x1) => x0.appendChild(x1),
_270: (x0,x1) => x0.append(x1),
_280: x0 => x0.remove(),
_281: (x0,x1) => x0.append(x1),
_282: (x0,x1) => x0.append(x1),
_283: (x0,x1) => x0.append(x1),
_284: (x0,x1) => x0.append(x1),
_285: (x0,x1) => x0.append(x1),
_286: (x0,x1) => x0.append(x1),
_287: (x0,x1) => x0.append(x1),
_288: (x0,x1,x2) => x0.insertBefore(x1,x2),
_289: x0 => x0.close(),
_290: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_291: x0 => new window.ImageDecoder(x0),
_292: x0 => x0.close(),
_293: x0 => ({frameIndex: x0}),
_294: (x0,x1) => x0.decode(x1),
_295: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._295(f,arguments.length,x0) }),
_296: f => finalizeWrapper(f,() => dartInstance.exports._296(f)),
_297: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_298: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._298(f,arguments.length,x0) }),
_299: x0 => ({runApp: x0}),
_302: x0 => x0.preventDefault(),
_303: (x0,x1) => x0.addListener(x1),
_304: (x0,x1) => x0.removeListener(x1),
_305: x0 => x0.disconnect(),
_306: (x0,x1) => x0.addListener(x1),
_307: (x0,x1) => x0.removeListener(x1),
_308: (x0,x1) => x0.append(x1),
_309: x0 => x0.remove(),
_310: (x0,x1) => x0.append(x1),
_311: x0 => x0.remove(),
_312: x0 => x0.remove(),
_313: (x0,x1) => x0.append(x1),
_317: x0 => x0.preventDefault(),
_318: (x0,x1) => x0.append(x1),
_319: x0 => x0.remove(),
_320: x0 => x0.preventDefault(),
_321: x0 => x0.preventDefault(),
_322: x0 => x0.preventDefault(),
_323: (x0,x1) => x0.append(x1),
_324: x0 => x0.remove(),
_325: x0 => x0.beginPath(),
_334: (x0,x1) => x0.append(x1),
_335: (x0,x1) => x0.append(x1),
_336: (x0,x1) => x0.append(x1),
_337: x0 => x0.remove(),
_338: x0 => x0.blur(),
_339: x0 => x0.focus(),
_340: x0 => x0.blur(),
_341: (x0,x1) => x0.append(x1),
_342: x0 => x0.remove(),
_343: (x0,x1) => x0.append(x1),
_344: x0 => x0.remove(),
_345: (x0,x1) => x0.append(x1),
_346: (x0,x1) => x0.append(x1),
_347: x0 => x0.remove(),
_348: (x0,x1) => x0.append(x1),
_349: (x0,x1) => x0.append(x1),
_350: (x0,x1,x2) => x0.insertBefore(x1,x2),
_351: x0 => x0.remove(),
_352: x0 => x0.remove(),
_353: x0 => x0.remove(),
_354: (x0,x1) => x0.append(x1),
_355: x0 => x0.remove(),
_356: x0 => x0.getBoundingClientRect(),
_357: x0 => x0.remove(),
_358: x0 => x0.blur(),
_360: (x0,x1) => x0.append(x1),
_361: x0 => x0.focus(),
_362: x0 => x0.remove(),
_363: x0 => x0.focus(),
_364: x0 => x0.focus(),
_365: x0 => x0.blur(),
_366: x0 => x0.remove(),
_367: (x0,x1) => x0.append(x1),
_368: x0 => x0.clear(),
_369: (x0,x1) => x0.add(x1),
_371: (x0,x1) => x0.appendChild(x1),
_373: x0 => x0.remove(),
_374: (x0,x1) => x0.append(x1),
_375: (x0,x1) => x0.append(x1),
_376: x0 => x0.getBoundingClientRect(),
_377: x0 => x0.getBoundingClientRect(),
_379: (x0,x1) => x0.append(x1),
_380: (x0,x1) => x0.append(x1),
_381: x0 => x0.remove(),
_382: (x0,x1) => x0.append(x1),
_383: (x0,x1,x2) => x0.insertBefore(x1,x2),
_384: (x0,x1) => x0.append(x1),
_385: x0 => x0.focus(),
_386: x0 => x0.focus(),
_387: x0 => x0.focus(),
_388: x0 => x0.focus(),
_389: x0 => x0.focus(),
_390: (x0,x1) => x0.append(x1),
_391: x0 => x0.focus(),
_392: x0 => x0.blur(),
_393: x0 => x0.remove(),
_395: x0 => x0.preventDefault(),
_396: x0 => x0.focus(),
_397: x0 => x0.preventDefault(),
_398: x0 => x0.preventDefault(),
_399: x0 => x0.preventDefault(),
_400: x0 => x0.focus(),
_401: x0 => x0.focus(),
_402: (x0,x1) => x0.append(x1),
_403: x0 => x0.focus(),
_404: x0 => x0.focus(),
_405: x0 => x0.focus(),
_406: x0 => x0.focus(),
_407: (x0,x1) => x0.observe(x1),
_408: x0 => x0.disconnect(),
_409: (x0,x1) => x0.appendChild(x1),
_411: (x0,x1) => x0.append(x1),
_413: x0 => x0.remove(),
_414: (x0,x1) => x0.append(x1),
_416: x0 => globalThis.window.flutterCanvasKit = x0,
_417: () => globalThis.window.flutterCanvasKit,
_418: x0 => x0.BlendMode,
_419: x0 => x0.PaintStyle,
_420: x0 => x0.StrokeCap,
_421: x0 => x0.StrokeJoin,
_422: x0 => x0.BlurStyle,
_423: x0 => x0.TileMode,
_424: x0 => x0.FilterMode,
_425: x0 => x0.MipmapMode,
_426: x0 => x0.FillType,
_427: x0 => x0.AlphaType,
_428: x0 => x0.ColorType,
_430: x0 => x0.ClipOp,
_433: x0 => x0.RectHeightStyle,
_434: x0 => x0.RectWidthStyle,
_436: x0 => x0.TextAlign,
_437: x0 => x0.TextHeightBehavior,
_438: x0 => x0.TextDirection,
_439: x0 => x0.FontWeight,
_441: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_442: x0 => x0.Shader,
_443: x0 => x0.MaskFilter,
_445: x0 => x0.ImageFilter,
_447: (x0,x1) => x0.computeTonalColors(x1),
_449: x0 => x0.ParagraphBuilder,
_455: x0 => x0.NoDecoration,
_456: x0 => x0.UnderlineDecoration,
_457: x0 => x0.OverlineDecoration,
_458: x0 => x0.LineThroughDecoration,
_459: x0 => x0.DecorationStyle,
_460: x0 => x0.TextBaseline,
_461: x0 => x0.PlaceholderAlignment,
_463: x0 => x0.TypefaceFontProvider,
_464: x0 => x0.FontCollection,
_465: x0 => x0.Typeface,
_466: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_468: (x0,x1) => x0.MakeGrContext(x1),
_469: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_474: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_476: x0 => globalThis.window.CanvasKitInit(x0),
_477: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._477(f,x0,x1)),
_478: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_486: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_493: x0 => x0.Thin,
_494: x0 => x0.ExtraLight,
_495: x0 => x0.Light,
_496: x0 => x0.Normal,
_497: x0 => x0.Medium,
_498: x0 => x0.SemiBold,
_499: x0 => x0.Bold,
_500: x0 => x0.ExtraBold,
_501: x0 => x0.ExtraBlack,
_505: x0 => x0.value,
_506: x0 => x0.RTL,
_507: x0 => x0.LTR,
_508: x0 => x0.value,
_509: x0 => x0.Left,
_510: x0 => x0.Right,
_511: x0 => x0.Center,
_512: x0 => x0.Justify,
_513: x0 => x0.Start,
_514: x0 => x0.End,
_516: x0 => x0.All,
_517: x0 => x0.DisableFirstAscent,
_518: x0 => x0.DisableLastDescent,
_519: x0 => x0.DisableAll,
_521: x0 => x0.Tight,
_522: x0 => x0.Max,
_523: x0 => x0.IncludeLineSpacingMiddle,
_524: x0 => x0.IncludeLineSpacingTop,
_525: x0 => x0.IncludeLineSpacingBottom,
_526: x0 => x0.Strut,
_528: x0 => x0.Tight,
_529: x0 => x0.Max,
_539: x0 => x0.Difference,
_540: x0 => x0.Intersect,
_542: x0 => x0.Winding,
_543: x0 => x0.EvenOdd,
_551: x0 => x0.Normal,
_552: x0 => x0.Solid,
_553: x0 => x0.Outer,
_554: x0 => x0.Inner,
_556: x0 => x0.Butt,
_557: x0 => x0.Round,
_558: x0 => x0.Square,
_560: x0 => x0.Stroke,
_561: x0 => x0.Fill,
_563: x0 => x0.Clear,
_564: x0 => x0.Src,
_565: x0 => x0.Dst,
_566: x0 => x0.SrcOver,
_567: x0 => x0.DstOver,
_568: x0 => x0.SrcIn,
_569: x0 => x0.DstIn,
_570: x0 => x0.SrcOut,
_571: x0 => x0.DstOut,
_572: x0 => x0.SrcATop,
_573: x0 => x0.DstATop,
_574: x0 => x0.Xor,
_575: x0 => x0.Plus,
_576: x0 => x0.Modulate,
_577: x0 => x0.Screen,
_578: x0 => x0.Overlay,
_579: x0 => x0.Darken,
_580: x0 => x0.Lighten,
_581: x0 => x0.ColorDodge,
_582: x0 => x0.ColorBurn,
_583: x0 => x0.HardLight,
_584: x0 => x0.SoftLight,
_585: x0 => x0.Difference,
_586: x0 => x0.Exclusion,
_587: x0 => x0.Multiply,
_588: x0 => x0.Hue,
_589: x0 => x0.Saturation,
_590: x0 => x0.Color,
_591: x0 => x0.Luminosity,
_593: x0 => x0.Miter,
_594: x0 => x0.Round,
_595: x0 => x0.Bevel,
_597: x0 => x0.Clamp,
_598: x0 => x0.Repeat,
_599: x0 => x0.Mirror,
_600: x0 => x0.Decal,
_602: x0 => x0.Nearest,
_603: x0 => x0.Linear,
_605: x0 => x0.None,
_607: x0 => x0.Linear,
_610: x0 => x0.Premul,
_616: x0 => x0.RGBA_8888,
_625: x0 => x0.getFrameCount(),
_626: x0 => x0.getRepetitionCount(),
_627: x0 => x0.currentFrameDuration(),
_628: x0 => x0.decodeNextFrame(),
_636: x0 => x0.width(),
_637: x0 => x0.height(),
_643: (x0,x1) => x0.isAliasOf(x1),
_645: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_651: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_654: (x0,x1) => x0.setStrokeWidth(x1),
_658: (x0,x1) => x0.setAntiAlias(x1),
_659: (x0,x1) => x0.setColorInt(x1),
_675: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_676: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_680: (x0,x1) => x0.getOutputBounds(x1),
_683: () => globalThis.Float32Array,
_685: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_689: x0 => x0.toTypedArray(),
_694: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_696: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_697: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_700: (x0,x1,x2) => x0.addRRect(x1,x2),
_701: (x0,x1) => x0.addRect(x1),
_702: (x0,x1,x2,x3,x4) => x0.arcToOval(x1,x2,x3,x4),
_703: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_706: (x0,x1,x2) => x0.contains(x1,x2),
_709: x0 => x0.getBounds(),
_710: (x0,x1,x2) => x0.lineTo(x1,x2),
_712: (x0,x1,x2) => x0.moveTo(x1,x2),
_724: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_735: (x0,x1,x2) => x0.beginRecording(x1,x2),
_738: (x0,x1) => x0.clear(x1),
_740: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_741: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_742: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_747: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_749: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_753: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_754: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_756: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_757: (x0,x1,x2) => x0.drawOval(x1,x2),
_762: (x0,x1,x2) => x0.drawRRect(x1,x2),
_763: (x0,x1,x2) => x0.drawRect(x1,x2),
_764: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_766: x0 => x0.save(),
_768: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_771: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_773: (x0,x1,x2) => x0.scale(x1,x2),
_775: (x0,x1) => x0.concat(x1),
_777: (x0,x1,x2) => x0.translate(x1,x2),
_781: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_783: x0 => x0.cullRect(),
_787: (x0,x1) => x0.addText(x1),
_791: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_792: x0 => x0.getText(),
_795: (x0,x1) => x0.setWordsUtf16(x1),
_798: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_800: (x0,x1) => x0.setLineBreaksUtf16(x1),
_804: (x0,x1) => x0.textAlign = x1,
_805: (x0,x1) => x0.textDirection = x1,
_806: (x0,x1) => x0.heightMultiplier = x1,
_807: (x0,x1) => x0.textHeightBehavior = x1,
_808: (x0,x1) => x0.maxLines = x1,
_809: (x0,x1) => x0.ellipsis = x1,
_810: (x0,x1) => x0.textStyle = x1,
_811: (x0,x1) => x0.strutStyle = x1,
_812: (x0,x1) => x0.replaceTabCharacters = x1,
_813: (x0,x1) => x0.applyRoundingHack = x1,
_814: x0 => x0.Solid,
_815: x0 => x0.Double,
_816: x0 => x0.Dotted,
_817: x0 => x0.Dashed,
_818: x0 => x0.Wavy,
_820: x0 => x0.Alphabetic,
_821: x0 => x0.Ideographic,
_823: x0 => x0.Baseline,
_824: x0 => x0.AboveBaseline,
_825: x0 => x0.BelowBaseline,
_826: x0 => x0.Top,
_827: x0 => x0.Bottom,
_828: x0 => x0.Middle,
_830: (x0,x1) => x0.backgroundColor = x1,
_831: (x0,x1) => x0.color = x1,
_833: (x0,x1) => x0.decoration = x1,
_834: (x0,x1) => x0.decorationThickness = x1,
_835: (x0,x1) => x0.decorationColor = x1,
_836: (x0,x1) => x0.decorationStyle = x1,
_837: (x0,x1) => x0.textBaseline = x1,
_838: (x0,x1) => x0.fontSize = x1,
_839: (x0,x1) => x0.letterSpacing = x1,
_840: (x0,x1) => x0.wordSpacing = x1,
_841: (x0,x1) => x0.heightMultiplier = x1,
_842: (x0,x1) => x0.halfLeading = x1,
_844: (x0,x1) => x0.fontFamilies = x1,
_845: (x0,x1) => x0.fontStyle = x1,
_848: (x0,x1) => x0.fontVariations = x1,
_849: (x0,x1) => x0.fontFamilies = x1,
_850: (x0,x1) => x0.fontStyle = x1,
_851: (x0,x1) => x0.fontSize = x1,
_852: (x0,x1) => x0.heightMultiplier = x1,
_853: (x0,x1) => x0.halfLeading = x1,
_855: (x0,x1) => x0.strutEnabled = x1,
_856: (x0,x1) => x0.forceStrutHeight = x1,
_857: (x0,x1) => x0.weight = x1,
_864: (x0,x1) => x0.axis = x1,
_865: (x0,x1) => x0.value = x1,
_866: (x0,x1) => x0.getGlyphIDs(x1),
_867: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_871: (x0,x1,x2) => x0.registerFont(x1,x2),
_876: x0 => x0.startIndex,
_877: x0 => x0.endIndex,
_880: x0 => x0.isHardBreak,
_881: x0 => x0.ascent,
_882: x0 => x0.descent,
_884: x0 => x0.width,
_885: x0 => x0.left,
_886: x0 => x0.baseline,
_887: x0 => x0.lineNumber,
_888: x0 => x0.rect,
_890: x0 => x0.dir,
_892: x0 => x0.getAlphabeticBaseline(),
_893: x0 => x0.didExceedMaxLines(),
_894: x0 => x0.getHeight(),
_895: x0 => x0.getIdeographicBaseline(),
_897: x0 => x0.getLineMetrics(),
_898: x0 => x0.getLongestLine(),
_899: x0 => x0.getMaxIntrinsicWidth(),
_900: x0 => x0.getMinIntrinsicWidth(),
_901: x0 => x0.getMaxWidth(),
_902: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_904: x0 => x0.getRectsForPlaceholders(),
_905: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_906: (x0,x1) => x0.getWordBoundary(x1),
_907: (x0,x1) => x0.layout(x1),
_909: x0 => x0.affinity,
_910: x0 => x0.pos,
_911: x0 => x0.start,
_912: x0 => x0.end,
_915: x0 => x0.ambient,
_916: x0 => x0.spot,
_921: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_923: x0 => x0.isDeleted(),
_947: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_948: (x0,x1) => x0.makeShader(x1),
_949: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_950: x0 => x0.remove(),
_951: x0 => x0.remove(),
_952: (x0,x1) => x0.appendChild(x1),
_955: () => globalThis.window.flutterConfiguration,
_956: x0 => x0.assetBase,
_957: x0 => x0.canvasKitBaseUrl,
_958: x0 => x0.canvasKitVariant,
_959: x0 => x0.canvasKitForceCpuOnly,
_960: x0 => x0.canvasKitMaximumSurfaces,
_961: x0 => x0.debugShowSemanticsNodes,
_962: x0 => x0.hostElement,
_963: x0 => x0.nonce,
_964: x0 => x0.renderer,
_965: x0 => x0.useColorEmoji,
_966: () => globalThis.window.flutterWebRenderer,
_969: x0 => x0.console,
_970: x0 => x0.devicePixelRatio,
_971: x0 => x0.document,
_972: x0 => x0.history,
_973: x0 => x0.innerHeight,
_974: x0 => x0.innerWidth,
_975: x0 => x0.location,
_976: x0 => x0.navigator,
_977: x0 => x0.visualViewport,
_978: x0 => x0.performance,
_979: (x0,x1) => x0.fetch(x1),
_981: x0 => x0.URL,
_982: (x0,x1) => x0.dispatchEvent(x1),
_983: (x0,x1) => x0.matchMedia(x1),
_984: (x0,x1) => x0.getComputedStyle(x1),
_986: x0 => x0.screen,
_987: (x0,x1) => x0.requestAnimationFrame(x1),
_988: f => finalizeWrapper(f,x0 => dartInstance.exports._988(f,x0)),
_992: x0 => x0.trustedTypes,
_993: (x0,x1) => x0.warn(x1),
_994: (x0,x1) => x0.error(x1),
_996: (x0,x1) => x0.debug(x1),
_997: () => globalThis.window,
_998: () => globalThis.Intl,
_999: () => globalThis.Symbol,
_1000: x0 => x0.clipboard,
_1001: x0 => x0.maxTouchPoints,
_1002: x0 => x0.vendor,
_1003: x0 => x0.language,
_1004: x0 => x0.platform,
_1005: x0 => x0.userAgent,
_1006: x0 => x0.languages,
_1007: x0 => x0.documentElement,
_1008: (x0,x1) => x0.querySelector(x1),
_1011: (x0,x1) => x0.createElement(x1),
_1014: (x0,x1) => x0.execCommand(x1),
_1016: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1017: (x0,x1) => x0.createTextNode(x1),
_1018: (x0,x1) => x0.createEvent(x1),
_1021: x0 => x0.fonts,
_1022: x0 => x0.head,
_1023: x0 => x0.body,
_1024: (x0,x1) => x0.title = x1,
_1027: x0 => x0.activeElement,
_1029: () => globalThis.document,
_1031: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1032: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1033: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1034: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1036: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1038: f => finalizeWrapper(f,x0 => dartInstance.exports._1038(f,x0)),
_1039: x0 => x0.target,
_1041: x0 => x0.timeStamp,
_1042: x0 => x0.type,
_1044: x0 => x0.preventDefault(),
_1048: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1053: x0 => x0.firstChild,
_1056: x0 => x0.lastChild,
_1057: (x0,x1) => x0.appendChild(x1),
_1058: x0 => x0.parentElement,
_1060: x0 => x0.parentNode,
_1063: (x0,x1) => x0.removeChild(x1),
_1064: (x0,x1) => x0.removeChild(x1),
_1065: x0 => x0.isConnected,
_1066: (x0,x1) => x0.textContent = x1,
_1067: (x0,x1) => x0.cloneNode(x1),
_1068: (x0,x1) => x0.contains(x1),
_1072: x0 => x0.children,
_1076: x0 => x0.clientHeight,
_1077: x0 => x0.clientWidth,
_1078: x0 => x0.id,
_1079: (x0,x1) => x0.id = x1,
_1082: (x0,x1) => x0.spellcheck = x1,
_1083: x0 => x0.tagName,
_1084: x0 => x0.style,
_1085: (x0,x1) => x0.append(x1),
_1086: (x0,x1) => x0.getAttribute(x1),
_1087: x0 => x0.getBoundingClientRect(),
_1091: (x0,x1) => x0.querySelectorAll(x1),
_1093: x0 => x0.remove(),
_1095: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1097: (x0,x1) => x0.removeAttribute(x1),
_1098: (x0,x1) => x0.tabIndex = x1,
_1101: x0 => x0.scrollTop,
_1102: (x0,x1) => x0.scrollTop = x1,
_1103: x0 => x0.scrollLeft,
_1104: (x0,x1) => x0.scrollLeft = x1,
_1105: x0 => x0.classList,
_1106: (x0,x1) => x0.className = x1,
_1113: (x0,x1) => x0.getElementsByClassName(x1),
_1114: x0 => x0.click(),
_1117: (x0,x1) => x0.attachShadow(x1),
_1119: (x0,x1) => x0.getPropertyValue(x1),
_1121: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1123: (x0,x1) => x0.removeProperty(x1),
_1125: x0 => x0.offsetLeft,
_1126: x0 => x0.offsetTop,
_1127: x0 => x0.offsetParent,
_1129: (x0,x1) => x0.name = x1,
_1130: x0 => x0.content,
_1131: (x0,x1) => x0.content = x1,
_1134: x0 => x0.src,
_1135: (x0,x1) => x0.src = x1,
_1136: x0 => x0.naturalWidth,
_1137: x0 => x0.naturalHeight,
_1140: x0 => x0.decode(),
_1141: (x0,x1) => x0.src = x1,
_1142: (x0,x1) => x0.nonce = x1,
_1144: (x0,x1) => x0.nonce = x1,
_1146: x0 => x0.sheet,
_1150: x0 => x0.now(),
_1152: (x0,x1) => x0.width = x1,
_1154: (x0,x1) => x0.height = x1,
_1156: (x0,x1) => x0.toDataURL(x1),
_1157: (x0,x1) => x0.getContext(x1),
_1158: (x0,x1,x2) => x0.getContext(x1,x2),
_1159: (x0,x1) => x0.getParameter(x1),
_1160: x0 => x0.SAMPLES,
_1161: x0 => x0.STENCIL_BITS,
_1163: x0 => x0.fillStyle,
_1164: (x0,x1) => x0.fillStyle = x1,
_1165: x0 => x0.font,
_1166: (x0,x1) => x0.font = x1,
_1168: (x0,x1) => x0.direction = x1,
_1169: (x0,x1) => x0.lineWidth = x1,
_1170: (x0,x1) => x0.strokeStyle = x1,
_1171: x0 => x0.strokeStyle,
_1175: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1176: (x0,x1,x2) => x0.createPattern(x1,x2),
_1179: x0 => x0.fill(),
_1180: (x0,x1) => x0.fill(x1),
_1181: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1182: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1186: (x0,x1,x2) => x0.lineTo(x1,x2),
_1188: (x0,x1) => x0.measureText(x1),
_1190: (x0,x1,x2) => x0.moveTo(x1,x2),
_1191: x0 => x0.save(),
_1193: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1196: x0 => x0.restore(),
_1198: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1200: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1201: x0 => x0.clip(),
_1202: (x0,x1) => x0.clip(x1),
_1203: (x0,x1,x2) => x0.scale(x1,x2),
_1204: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1206: (x0,x1,x2) => x0.translate(x1,x2),
_1208: (x0,x1) => x0.rotate(x1),
_1209: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1210: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1211: (x0,x1) => x0.globalCompositeOperation = x1,
_1212: (x0,x1) => x0.lineCap = x1,
_1213: (x0,x1) => x0.lineJoin = x1,
_1214: (x0,x1) => x0.shadowBlur = x1,
_1215: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1216: (x0,x1) => x0.filter = x1,
_1217: (x0,x1) => x0.shadowOffsetX = x1,
_1218: (x0,x1) => x0.shadowOffsetY = x1,
_1219: (x0,x1) => x0.shadowColor = x1,
_1220: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1222: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1223: (x0,x1) => x0.globalAlpha = x1,
_1233: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1234: x0 => x0.status,
_1236: x0 => x0.body,
_1237: x0 => x0.arrayBuffer(),
_1244: x0 => x0.read(),
_1245: x0 => x0.value,
_1246: x0 => x0.done,
_1247: x0 => x0.width,
_1248: x0 => x0.name,
_1249: x0 => x0.x,
_1250: x0 => x0.y,
_1251: x0 => x0.width,
_1252: x0 => x0.height,
_1253: x0 => x0.top,
_1254: x0 => x0.right,
_1255: x0 => x0.bottom,
_1256: x0 => x0.left,
_1257: x0 => x0.load(),
_1266: x0 => x0.height,
_1267: x0 => x0.width,
_1268: (x0,x1) => x0.value = x1,
_1270: (x0,x1) => x0.placeholder = x1,
_1271: (x0,x1) => x0.name = x1,
_1272: x0 => x0.selectionDirection,
_1273: x0 => x0.selectionStart,
_1274: x0 => x0.selectionEnd,
_1277: x0 => x0.value,
_1278: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1282: x0 => x0.readText(),
_1283: (x0,x1) => x0.writeText(x1),
_1284: x0 => x0.altKey,
_1285: x0 => x0.code,
_1286: x0 => x0.ctrlKey,
_1287: x0 => x0.key,
_1288: x0 => x0.keyCode,
_1289: x0 => x0.location,
_1290: x0 => x0.metaKey,
_1291: x0 => x0.repeat,
_1292: x0 => x0.shiftKey,
_1293: x0 => x0.isComposing,
_1294: (x0,x1) => x0.getModifierState(x1),
_1295: x0 => x0.state,
_1297: (x0,x1) => x0.go(x1),
_1298: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1299: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1300: x0 => x0.pathname,
_1301: x0 => x0.search,
_1302: x0 => x0.hash,
_1305: x0 => x0.state,
_1306: (x0,x1) => x0.createObjectURL(x1),
_1307: (x0,x1) => x0.revokeObjectURL(x1),
_1310: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1310(f,x0,x1)),
_1312: (x0,x1,x2) => x0.observe(x1,x2),
_1315: x0 => x0.attributeName,
_1316: x0 => x0.type,
_1317: x0 => x0.matches,
_1321: x0 => x0.matches,
_1322: x0 => x0.clientX,
_1323: x0 => x0.clientY,
_1324: x0 => x0.offsetX,
_1325: x0 => x0.offsetY,
_1328: x0 => x0.button,
_1329: x0 => x0.buttons,
_1330: x0 => x0.ctrlKey,
_1331: (x0,x1) => x0.getModifierState(x1),
_1332: x0 => x0.pointerId,
_1333: x0 => x0.pointerType,
_1334: x0 => x0.pressure,
_1335: x0 => x0.tiltX,
_1336: x0 => x0.tiltY,
_1337: x0 => x0.getCoalescedEvents(),
_1338: x0 => x0.deltaX,
_1339: x0 => x0.deltaY,
_1340: x0 => x0.wheelDeltaX,
_1341: x0 => x0.wheelDeltaY,
_1342: x0 => x0.deltaMode,
_1343: x0 => x0.altKey,
_1344: x0 => x0.ctrlKey,
_1345: x0 => x0.metaKey,
_1346: x0 => x0.shiftKey,
_1347: x0 => x0.changedTouches,
_1348: x0 => x0.identifier,
_1349: x0 => x0.clientX,
_1350: x0 => x0.clientY,
_1351: x0 => x0.data,
_1352: (x0,x1) => x0.type = x1,
_1353: (x0,x1) => x0.max = x1,
_1354: (x0,x1) => x0.min = x1,
_1355: (x0,x1) => x0.value = x1,
_1356: x0 => x0.value,
_1357: x0 => x0.disabled,
_1358: (x0,x1) => x0.disabled = x1,
_1359: (x0,x1) => x0.placeholder = x1,
_1360: (x0,x1) => x0.name = x1,
_1361: (x0,x1) => x0.autocomplete = x1,
_1362: x0 => x0.selectionDirection,
_1363: x0 => x0.selectionStart,
_1364: x0 => x0.selectionEnd,
_1368: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1375: (x0,x1) => x0.add(x1),
_1379: (x0,x1) => x0.noValidate = x1,
_1380: (x0,x1) => x0.method = x1,
_1381: (x0,x1) => x0.action = x1,
_1384: (x0,x1) => x0.height = x1,
_1385: (x0,x1) => x0.width = x1,
_1387: (x0,x1,x2) => x0.getContext(x1,x2),
_1399: x0 => x0.cssRules,
_1401: (x0,x1,x2) => x0.insertRule(x1,x2),
_1403: x0 => x0.orientation,
_1404: x0 => x0.width,
_1405: x0 => x0.height,
_1406: (x0,x1) => x0.lock(x1),
_1420: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1420(f,x0,x1)),
_1424: x0 => x0.contentRect,
_1426: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1427: (x0,x1) => x0.createScriptURL(x1),
_1429: x0 => x0.length,
_1430: (x0,x1) => x0.item(x1),
_1431: x0 => x0.length,
_1432: (x0,x1) => x0.item(x1),
_1433: x0 => x0.iterator,
_1434: x0 => x0.Segmenter,
_1435: x0 => x0.v8BreakIterator,
_1436: (x0,x1) => x0.segment(x1),
_1438: x0 => x0.done,
_1439: x0 => x0.value,
_1440: x0 => x0.index,
_1444: (x0,x1) => x0.adoptText(x1),
_1445: x0 => x0.first(),
_1446: x0 => x0.next(),
_1447: x0 => x0.current(),
_1450: () => globalThis.window.FinalizationRegistry,
_1451: (x0,x1,x2) => x0.register(x1,x2),
_1455: x0 => x0.loader,
_1456: () => globalThis._flutter,
_1457: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1458: (x0,x1,x2) => x0.call(x1,x2),
_1459: () => globalThis.Promise,
_1460: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1460(f,x0,x1)),
_1465: () => globalThis.window.ImageDecoder,
_1466: x0 => x0.tracks,
_1470: x0 => x0.image,
_1478: x0 => x0.displayWidth,
_1479: x0 => x0.displayHeight,
_1480: x0 => x0.duration,
_1483: x0 => x0.ready,
_1484: x0 => x0.selectedTrack,
_1485: x0 => x0.repetitionCount,
_1486: x0 => x0.frameCount,
_1527: f => finalizeWrapper(f,x0 => dartInstance.exports._1527(f,x0)),
_1528: f => finalizeWrapper(f,x0 => dartInstance.exports._1528(f,x0))
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

