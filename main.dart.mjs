  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1720: (ms, c) =>
            setTimeout(
                () => dartInstance.exports.$invokeCallback(c),ms),
_1721: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1722: s => console.log(stringFromDartString(s)),
_1627: o => o === undefined,
_1628: o => typeof o === 'boolean',
_1629: o => typeof o === 'number',
_1631: o => typeof o === 'string',
_1634: o => o instanceof Int8Array,
_1635: o => o instanceof Uint8Array,
_1636: o => o instanceof Uint8ClampedArray,
_1637: o => o instanceof Int16Array,
_1638: o => o instanceof Uint16Array,
_1639: o => o instanceof Int32Array,
_1640: o => o instanceof Uint32Array,
_1641: o => o instanceof Float32Array,
_1642: o => o instanceof Float64Array,
_1643: o => o instanceof ArrayBuffer,
_1644: o => o instanceof DataView,
_1645: o => o instanceof Array,
_1646: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1648: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1649: o => o instanceof RegExp,
_1650: (l, r) => l === r,
_1651: o => o,
_1652: o => o,
_1653: o => o,
_1654: b => !!b,
_1655: o => o.length,
_1656: o => o.byteLength,
_1657: (o, i) => o.getUint8(i),
_1658: (o, i) => o[i],
_1659: f => f.dartFunction,
_1660: l => arrayFromDartList(Int8Array, l),
_1661: l => arrayFromDartList(Uint8Array, l),
_1662: l => arrayFromDartList(Uint8ClampedArray, l),
_1663: l => arrayFromDartList(Int16Array, l),
_1664: l => arrayFromDartList(Uint16Array, l),
_1665: l => arrayFromDartList(Int32Array, l),
_1666: l => arrayFromDartList(Uint32Array, l),
_1667: l => arrayFromDartList(Float32Array, l),
_1668: l => arrayFromDartList(Float64Array, l),
_1669: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1670: l => arrayFromDartList(Array, l),
_1671: stringFromDartString,
_1672: stringToDartString,
_1673: () => ({}),
_1674: () => [],
_1675: () => globalThis,
_1676: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1677: (o, p) => p in o,
_1678: (o, p) => o[p],
_1679: (o, p, v) => o[p] = v,
_1680: (o, m, a) => o[m].apply(o, a),
_1681: o => stringToDartString(String(o)),
_1682: (p, s, f) => p.then(s, f),
_1684: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1614: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1615: (x0,x1) => x0.exec(x1),
_1616: (x0,x1) => x0.test(x1),
_1617: (x0,x1) => x0.exec(x1),
_1618: (x0,x1) => x0.exec(x1),
_1619: x0 => x0.pop(),
_1622: (x0,x1) => x0[x1],
_1623: (x0,x1,x2) => x0[x1] = x2,
_1624: x0 => x0.length,
_1686: x0 => x0.index,
_1690: x0 => x0.flags,
_1691: x0 => x0.multiline,
_1692: x0 => x0.ignoreCase,
_1693: x0 => x0.unicode,
_1694: x0 => x0.dotAll,
_1695: (x0,x1) => x0.lastIndex = x1,
_1600: (o, t) => o instanceof t,
_1602: f => finalizeWrapper(f,x0 => dartInstance.exports._1602(f,x0)),
_1603: f => finalizeWrapper(f,x0 => dartInstance.exports._1603(f,x0)),
_1604: o => Object.keys(o),
_1717: () => performance.now(),
_1718: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1719: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1696: v => stringToDartString(v.toString()),
_1697: (d, digits) => stringToDartString(d.toFixed(digits)),
_1700: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1707: Date.now,
_1709: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1710: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1711: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1714: () => new WeakMap(),
_1715: (map, o) => map.get(o),
_1716: (map, o, v) => map.set(o, v),
_1599: x0 => new Array(x0),
_62: f => finalizeWrapper(f,() => dartInstance.exports._62(f)),
_63: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._63(f,arguments.length,x0) }),
_64: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_65: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._65(f,x0,x1)),
_66: x0 => new Promise(x0),
_67: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._67(f,arguments.length,x0) }),
_68: x0 => ({runApp: x0}),
_69: () => ({}),
_70: (x0,x1) => x0.append(x1),
_71: x0 => x0.save(),
_72: x0 => x0.remove(),
_73: x0 => x0.restore(),
_74: x0 => x0.save(),
_75: x0 => x0.save(),
_76: x0 => x0.restore(),
_77: x0 => x0.beginPath(),
_79: x0 => x0.beginPath(),
_80: x0 => x0.beginPath(),
_81: x0 => x0.stroke(),
_87: x0 => x0.beginPath(),
_88: x0 => x0.closePath(),
_89: x0 => x0.beginPath(),
_90: x0 => x0.beginPath(),
_91: x0 => x0.closePath(),
_92: x0 => x0.beginPath(),
_93: x0 => x0.beginPath(),
_94: x0 => x0.save(),
_95: x0 => x0.restore(),
_96: x0 => x0.remove(),
_97: x0 => x0.save(),
_98: x0 => x0.restore(),
_99: x0 => x0.stroke(),
_100: x0 => x0.stroke(),
_101: (x0,x1) => x0.drawPaint(x1),
_102: (x0,x1,x2) => x0.drawPath(x1,x2),
_103: (x0,x1) => x0.drawPicture(x1),
_105: x0 => x0.restore(),
_106: x0 => ({locateFile: x0}),
_107: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_108: () => new window.flutterCanvasKit.Paint(),
_109: (x0,x1) => ({B: x0,C: x1}),
_110: (x0,x1) => ({filter: x0,mipmap: x1}),
_111: () => new window.flutterCanvasKit.Path(),
_115: () => new window.flutterCanvasKit.PictureRecorder(),
_116: () => ({}),
_117: () => ({}),
_118: () => ({}),
_119: () => ({}),
_122: () => ({}),
_123: x0 => new window.flutterCanvasKit.Font(x0),
_124: (x0,x1) => ({ambient: x0,spot: x1}),
_125: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_126: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_138: x0 => x0.remove(),
_146: (x0,x1,x2) => x0.insertBefore(x1,x2),
_148: (x0,x1) => x0.append(x1),
_149: (x0,x1) => x0.append(x1),
_152: (x0,x1) => x0.append(x1),
_156: x0 => x0.delete(),
_157: x0 => x0.delete(),
_158: x0 => x0.Make(),
_159: x0 => x0.Make(),
_160: x0 => x0.enableFontFallback(),
_161: (x0,x1) => x0.setDefaultFontManager(x1),
_163: x0 => x0.clone(),
_165: x0 => x0.makeImageAtCurrentFrame(),
_166: x0 => x0.close(),
_167: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_168: x0 => new window.ImageDecoder(x0),
_169: x0 => x0.close(),
_170: x0 => ({frameIndex: x0}),
_171: (x0,x1) => x0.decode(x1),
_172: x0 => x0.delete(),
_173: (x0,x1) => x0.setBlendMode(x1),
_174: (x0,x1) => x0.setStyle(x1),
_175: (x0,x1) => x0.setStrokeCap(x1),
_177: (x0,x1) => x0.setColorFilter(x1),
_178: (x0,x1) => x0.setShader(x1),
_179: (x0,x1) => x0.setMaskFilter(x1),
_180: (x0,x1) => x0.setShader(x1),
_183: (x0,x1) => x0.setFillType(x1),
_186: (x0,x1) => x0.setFillType(x1),
_187: (x0,x1) => x0.setFillType(x1),
_188: x0 => globalThis.window.flutterCanvasKit.Free(x0),
_189: x0 => x0.close(),
_190: x0 => x0.reset(),
_191: x0 => x0.copy(),
_192: (x0,x1,x2,x3) => x0.MakeFromOp(x1,x2,x3),
_195: x0 => x0.makeImageSnapshot(),
_196: x0 => x0.finishRecordingAsPicture(),
_197: x0 => x0.delete(),
_198: (x0,x1) => x0.prepend(x1),
_199: x0 => x0.releaseResourcesAndAbandonContext(),
_200: x0 => x0.delete(),
_201: x0 => x0.stopPropagation(),
_202: x0 => x0.preventDefault(),
_203: x0 => x0.preventDefault(),
_204: x0 => x0.remove(),
_205: (x0,x1) => x0.append(x1),
_206: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_207: x0 => x0.remove(),
_208: x0 => x0.getCanvas(),
_209: x0 => x0.flush(),
_210: x0 => x0.dispose(),
_211: x0 => x0.remove(),
_212: x0 => x0.remove(),
_213: (x0,x1) => x0.ParagraphStyle(x1),
_214: (x0,x1) => x0.TextStyle(x1),
_215: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_216: x0 => x0.build(),
_217: x0 => x0.delete(),
_218: x0 => x0.pop(),
_220: (x0,x1) => x0.pushStyle(x1),
_221: x0 => x0.focus(),
_222: x0 => x0.select(),
_223: (x0,x1) => x0.append(x1),
_224: x0 => x0.remove(),
_228: x0 => x0.getReader(),
_231: (x0,x1,x2) => new FontFace(x0,x1,x2),
_236: x0 => new Blob(x0),
_237: x0 => new MutationObserver(x0),
_252: (x0,x1) => new OffscreenCanvas(x0,x1),
_254: (x0,x1,x2) => x0.addEventListener(x1,x2),
_255: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_258: x0 => new ResizeObserver(x0),
_260: x0 => ({createScriptURL: x0}),
_261: (x0,x1) => new Intl.Segmenter(x0,x1),
_262: x0 => x0.next(),
_263: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_265: x0 => x0.remove(),
_266: (x0,x1) => x0.append(x1),
_267: (x0,x1) => x0.appendChild(x1),
_268: (x0,x1) => x0.appendChild(x1),
_269: (x0,x1) => x0.append(x1),
_270: (x0,x1) => x0.append(x1),
_271: (x0,x1) => x0.appendChild(x1),
_272: x0 => x0.unlock(),
_276: (x0,x1) => x0.append(x1),
_277: (x0,x1) => x0.append(x1),
_278: x0 => x0.remove(),
_279: (x0,x1) => x0.append(x1),
_280: (x0,x1) => x0.append(x1),
_281: x0 => x0.remove(),
_282: (x0,x1) => x0.append(x1),
_283: (x0,x1) => x0.append(x1),
_286: x0 => x0.save(),
_287: x0 => x0.restore(),
_288: (x0,x1) => x0.append(x1),
_289: (x0,x1) => x0.append(x1),
_290: (x0,x1) => x0.append(x1),
_291: (x0,x1) => x0.append(x1),
_293: (x0,x1) => x0.append(x1),
_294: (x0,x1) => x0.append(x1),
_295: x0 => x0.remove(),
_296: (x0,x1) => x0.append(x1),
_297: x0 => x0.remove(),
_298: x0 => x0.remove(),
_323: (x0,x1) => x0.append(x1),
_324: (x0,x1) => x0.append(x1),
_325: (x0,x1) => x0.append(x1),
_327: (x0,x1) => x0.append(x1),
_336: x0 => x0.remove(),
_337: (x0,x1) => x0.append(x1),
_338: (x0,x1) => x0.append(x1),
_339: (x0,x1) => x0.append(x1),
_340: (x0,x1) => x0.append(x1),
_341: (x0,x1) => x0.append(x1),
_342: (x0,x1) => x0.append(x1),
_343: (x0,x1) => x0.append(x1),
_344: (x0,x1,x2) => x0.insertBefore(x1,x2),
_346: x0 => new Promise(x0),
_347: x0 => new Uint8Array(x0),
_349: x0 => x0.preventDefault(),
_351: f => finalizeWrapper(f,x0 => dartInstance.exports._351(f,x0)),
_352: (x0,x1) => x0.addPopStateListener(x1),
_353: x0 => x0.getPath(),
_354: x0 => x0.getState(),
_356: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_357: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_358: (x0,x1) => x0.go(x1),
_359: (x0,x1) => x0.addListener(x1),
_360: (x0,x1) => x0.removeListener(x1),
_361: (x0,x1) => x0.append(x1),
_362: x0 => x0.disconnect(),
_363: (x0,x1) => x0.addListener(x1),
_364: (x0,x1) => x0.removeListener(x1),
_365: (x0,x1) => x0.append(x1),
_366: x0 => x0.remove(),
_367: (x0,x1) => x0.append(x1),
_368: x0 => x0.remove(),
_369: x0 => x0.remove(),
_373: x0 => x0.preventDefault(),
_374: (x0,x1) => x0.append(x1),
_375: x0 => x0.remove(),
_376: x0 => x0.preventDefault(),
_377: x0 => x0.preventDefault(),
_378: x0 => x0.preventDefault(),
_379: (x0,x1) => x0.append(x1),
_380: x0 => x0.remove(),
_381: x0 => x0.beginPath(),
_386: (x0,x1) => x0.append(x1),
_387: (x0,x1) => x0.append(x1),
_388: x0 => x0.remove(),
_389: x0 => x0.remove(),
_390: (x0,x1) => x0.append(x1),
_391: x0 => x0.remove(),
_392: x0 => x0.focus(),
_393: x0 => x0.blur(),
_394: (x0,x1) => x0.append(x1),
_395: x0 => x0.remove(),
_396: (x0,x1) => x0.append(x1),
_397: x0 => x0.remove(),
_398: (x0,x1) => x0.append(x1),
_399: (x0,x1) => x0.append(x1),
_400: x0 => x0.remove(),
_401: (x0,x1) => x0.append(x1),
_402: (x0,x1) => x0.append(x1),
_403: (x0,x1,x2) => x0.insertBefore(x1,x2),
_404: x0 => x0.remove(),
_405: x0 => x0.remove(),
_406: x0 => x0.remove(),
_407: (x0,x1) => x0.append(x1),
_408: x0 => x0.remove(),
_409: x0 => x0.getBoundingClientRect(),
_410: x0 => x0.remove(),
_411: x0 => x0.blur(),
_413: (x0,x1) => x0.append(x1),
_414: x0 => x0.focus(),
_415: x0 => x0.remove(),
_416: x0 => x0.focus(),
_417: x0 => x0.focus(),
_418: x0 => x0.blur(),
_419: x0 => x0.remove(),
_420: (x0,x1) => x0.append(x1),
_421: x0 => x0.clear(),
_422: (x0,x1) => x0.add(x1),
_424: (x0,x1) => x0.appendChild(x1),
_426: x0 => x0.remove(),
_427: (x0,x1) => x0.append(x1),
_428: (x0,x1) => x0.append(x1),
_429: x0 => x0.getBoundingClientRect(),
_430: x0 => x0.getBoundingClientRect(),
_432: (x0,x1) => x0.append(x1),
_433: x0 => x0.preventDefault(),
_434: (x0,x1) => x0.append(x1),
_435: x0 => x0.remove(),
_436: (x0,x1) => x0.append(x1),
_437: (x0,x1) => x0.append(x1),
_438: (x0,x1) => x0.append(x1),
_439: x0 => x0.focus(),
_440: x0 => x0.focus(),
_441: x0 => x0.focus(),
_442: x0 => x0.focus(),
_443: x0 => x0.focus(),
_444: (x0,x1) => x0.append(x1),
_445: x0 => x0.focus(),
_446: x0 => x0.blur(),
_447: x0 => x0.remove(),
_449: x0 => x0.preventDefault(),
_450: x0 => x0.focus(),
_451: x0 => x0.preventDefault(),
_452: x0 => x0.preventDefault(),
_453: x0 => x0.preventDefault(),
_454: x0 => x0.focus(),
_455: x0 => x0.focus(),
_456: (x0,x1) => x0.append(x1),
_457: x0 => x0.focus(),
_458: x0 => x0.focus(),
_459: x0 => x0.focus(),
_460: x0 => x0.focus(),
_461: (x0,x1) => x0.observe(x1),
_462: x0 => x0.disconnect(),
_463: (x0,x1) => x0.appendChild(x1),
_465: x0 => x0.preventDefault(),
_467: (x0,x1) => x0.append(x1),
_469: x0 => x0.remove(),
_470: (x0,x1) => x0.append(x1),
_471: x0 => x0.remove(),
_472: x0 => globalThis.window.flutterCanvasKit = x0,
_473: () => globalThis.window.flutterCanvasKit,
_474: x0 => x0.BlendMode,
_475: x0 => x0.PaintStyle,
_476: x0 => x0.StrokeCap,
_478: x0 => x0.BlurStyle,
_479: x0 => x0.TileMode,
_480: x0 => x0.FilterMode,
_481: x0 => x0.MipmapMode,
_482: x0 => x0.FillType,
_483: x0 => x0.AlphaType,
_484: x0 => x0.ColorType,
_485: x0 => x0.PathOp,
_486: x0 => x0.ClipOp,
_489: x0 => x0.RectHeightStyle,
_490: x0 => x0.RectWidthStyle,
_492: x0 => x0.TextAlign,
_493: x0 => x0.TextHeightBehavior,
_494: x0 => x0.TextDirection,
_495: x0 => x0.FontWeight,
_497: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_498: x0 => x0.Shader,
_499: x0 => x0.MaskFilter,
_501: x0 => x0.ImageFilter,
_502: x0 => x0.Path,
_503: (x0,x1) => x0.computeTonalColors(x1),
_505: x0 => x0.ParagraphBuilder,
_511: x0 => x0.NoDecoration,
_512: x0 => x0.UnderlineDecoration,
_513: x0 => x0.OverlineDecoration,
_514: x0 => x0.LineThroughDecoration,
_515: x0 => x0.DecorationStyle,
_516: x0 => x0.TextBaseline,
_517: x0 => x0.PlaceholderAlignment,
_519: x0 => x0.TypefaceFontProvider,
_520: x0 => x0.FontCollection,
_521: x0 => x0.Typeface,
_522: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_524: (x0,x1) => x0.MakeGrContext(x1),
_525: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_528: (x0,x1,x2,x3) => x0.MakeImage(x1,x2,x3),
_529: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_530: x0 => globalThis.window.CanvasKitInit(x0),
_531: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._531(f,x0,x1)),
_532: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_541: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_547: x0 => x0.Thin,
_548: x0 => x0.ExtraLight,
_549: x0 => x0.Light,
_550: x0 => x0.Normal,
_551: x0 => x0.Medium,
_552: x0 => x0.SemiBold,
_553: x0 => x0.Bold,
_554: x0 => x0.ExtraBold,
_555: x0 => x0.ExtraBlack,
_559: x0 => x0.value,
_560: x0 => x0.RTL,
_561: x0 => x0.LTR,
_562: x0 => x0.value,
_563: x0 => x0.Left,
_564: x0 => x0.Right,
_565: x0 => x0.Center,
_566: x0 => x0.Justify,
_567: x0 => x0.Start,
_568: x0 => x0.End,
_570: x0 => x0.All,
_571: x0 => x0.DisableFirstAscent,
_572: x0 => x0.DisableLastDescent,
_573: x0 => x0.DisableAll,
_575: x0 => x0.Tight,
_576: x0 => x0.Max,
_577: x0 => x0.IncludeLineSpacingMiddle,
_578: x0 => x0.IncludeLineSpacingTop,
_579: x0 => x0.IncludeLineSpacingBottom,
_580: x0 => x0.Strut,
_582: x0 => x0.Tight,
_583: x0 => x0.Max,
_593: x0 => x0.Difference,
_594: x0 => x0.Intersect,
_596: x0 => x0.Winding,
_597: x0 => x0.EvenOdd,
_599: x0 => x0.Difference,
_600: x0 => x0.Intersect,
_601: x0 => x0.Union,
_602: x0 => x0.XOR,
_603: x0 => x0.ReverseDifference,
_605: x0 => x0.Normal,
_606: x0 => x0.Solid,
_607: x0 => x0.Outer,
_608: x0 => x0.Inner,
_610: x0 => x0.Butt,
_611: x0 => x0.Round,
_612: x0 => x0.Square,
_614: x0 => x0.Stroke,
_615: x0 => x0.Fill,
_617: x0 => x0.Clear,
_618: x0 => x0.Src,
_619: x0 => x0.Dst,
_620: x0 => x0.SrcOver,
_621: x0 => x0.DstOver,
_622: x0 => x0.SrcIn,
_623: x0 => x0.DstIn,
_624: x0 => x0.SrcOut,
_625: x0 => x0.DstOut,
_626: x0 => x0.SrcATop,
_627: x0 => x0.DstATop,
_628: x0 => x0.Xor,
_629: x0 => x0.Plus,
_630: x0 => x0.Modulate,
_631: x0 => x0.Screen,
_632: x0 => x0.Overlay,
_633: x0 => x0.Darken,
_634: x0 => x0.Lighten,
_635: x0 => x0.ColorDodge,
_636: x0 => x0.ColorBurn,
_637: x0 => x0.HardLight,
_638: x0 => x0.SoftLight,
_639: x0 => x0.Difference,
_640: x0 => x0.Exclusion,
_641: x0 => x0.Multiply,
_642: x0 => x0.Hue,
_643: x0 => x0.Saturation,
_644: x0 => x0.Color,
_645: x0 => x0.Luminosity,
_651: x0 => x0.Clamp,
_652: x0 => x0.Repeat,
_653: x0 => x0.Mirror,
_654: x0 => x0.Decal,
_656: x0 => x0.Nearest,
_657: x0 => x0.Linear,
_659: x0 => x0.None,
_661: x0 => x0.Linear,
_664: x0 => x0.Premul,
_665: x0 => x0.Unpremul,
_670: x0 => x0.RGBA_8888,
_679: x0 => x0.getFrameCount(),
_680: x0 => x0.getRepetitionCount(),
_681: x0 => x0.currentFrameDuration(),
_682: x0 => x0.decodeNextFrame(),
_690: x0 => x0.width(),
_692: x0 => x0.height(),
_695: (x0,x1,x2,x3) => x0.readPixels(x1,x2,x3),
_696: x0 => x0.encodeToBytes(),
_697: (x0,x1) => x0.isAliasOf(x1),
_700: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_705: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_708: (x0,x1) => x0.setStrokeWidth(x1),
_713: (x0,x1) => x0.setAntiAlias(x1),
_714: (x0,x1) => x0.setColorInt(x1),
_731: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_732: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_738: () => globalThis.Float32Array,
_740: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_745: x0 => x0.toTypedArray(),
_750: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_751: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_753: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_754: (x0,x1,x2) => x0.addPoly(x1,x2),
_755: (x0,x1,x2) => x0.addRRect(x1,x2),
_757: (x0,x1) => x0.addRect(x1),
_762: (x0,x1,x2) => x0.contains(x1,x2),
_765: x0 => x0.getBounds(),
_766: (x0,x1,x2) => x0.lineTo(x1,x2),
_767: (x0,x1,x2) => x0.moveTo(x1,x2),
_773: (x0,x1,x2) => x0.rLineTo(x1,x2),
_782: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_792: (x0,x1) => x0.beginRecording(x1),
_795: (x0,x1) => x0.clear(x1),
_796: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_798: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_799: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_804: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_806: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_809: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_811: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_813: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_814: (x0,x1,x2) => x0.drawOval(x1,x2),
_819: (x0,x1,x2) => x0.drawRRect(x1,x2),
_820: (x0,x1,x2) => x0.drawRect(x1,x2),
_821: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_824: x0 => x0.save(),
_825: x0 => x0.getSaveCount(),
_826: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_829: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_831: (x0,x1,x2) => x0.scale(x1,x2),
_833: (x0,x1) => x0.concat(x1),
_835: (x0,x1,x2) => x0.translate(x1,x2),
_838: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_841: (x0,x1) => x0.addText(x1),
_846: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_847: x0 => x0.getText(),
_849: (x0,x1) => x0.setWordsUtf16(x1),
_852: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_855: (x0,x1) => x0.setLineBreaksUtf16(x1),
_858: (x0,x1) => x0.textAlign = x1,
_859: (x0,x1) => x0.textDirection = x1,
_860: (x0,x1) => x0.heightMultiplier = x1,
_861: (x0,x1) => x0.textHeightBehavior = x1,
_862: (x0,x1) => x0.maxLines = x1,
_863: (x0,x1) => x0.ellipsis = x1,
_864: (x0,x1) => x0.textStyle = x1,
_865: (x0,x1) => x0.strutStyle = x1,
_866: (x0,x1) => x0.replaceTabCharacters = x1,
_867: x0 => x0.Solid,
_868: x0 => x0.Double,
_869: x0 => x0.Dotted,
_870: x0 => x0.Dashed,
_871: x0 => x0.Wavy,
_873: x0 => x0.Alphabetic,
_874: x0 => x0.Ideographic,
_876: x0 => x0.Baseline,
_877: x0 => x0.AboveBaseline,
_878: x0 => x0.BelowBaseline,
_879: x0 => x0.Top,
_880: x0 => x0.Bottom,
_881: x0 => x0.Middle,
_884: (x0,x1) => x0.color = x1,
_886: (x0,x1) => x0.decoration = x1,
_887: (x0,x1) => x0.decorationThickness = x1,
_888: (x0,x1) => x0.decorationColor = x1,
_889: (x0,x1) => x0.decorationStyle = x1,
_890: (x0,x1) => x0.textBaseline = x1,
_891: (x0,x1) => x0.fontSize = x1,
_892: (x0,x1) => x0.letterSpacing = x1,
_893: (x0,x1) => x0.wordSpacing = x1,
_894: (x0,x1) => x0.heightMultiplier = x1,
_895: (x0,x1) => x0.halfLeading = x1,
_897: (x0,x1) => x0.fontFamilies = x1,
_898: (x0,x1) => x0.fontStyle = x1,
_901: (x0,x1) => x0.fontVariations = x1,
_902: (x0,x1) => x0.fontFamilies = x1,
_903: (x0,x1) => x0.fontStyle = x1,
_904: (x0,x1) => x0.fontSize = x1,
_905: (x0,x1) => x0.heightMultiplier = x1,
_906: (x0,x1) => x0.halfLeading = x1,
_908: (x0,x1) => x0.strutEnabled = x1,
_909: (x0,x1) => x0.forceStrutHeight = x1,
_910: (x0,x1) => x0.weight = x1,
_917: (x0,x1) => x0.axis = x1,
_918: (x0,x1) => x0.value = x1,
_919: (x0,x1) => x0.getGlyphIDs(x1),
_920: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_924: (x0,x1,x2) => x0.registerFont(x1,x2),
_928: x0 => x0.startIndex,
_929: x0 => x0.endIndex,
_932: x0 => x0.isHardBreak,
_933: x0 => x0.ascent,
_934: x0 => x0.descent,
_936: x0 => x0.width,
_937: x0 => x0.left,
_938: x0 => x0.baseline,
_939: x0 => x0.lineNumber,
_940: x0 => x0.rect,
_942: x0 => x0.dir,
_944: x0 => x0.getAlphabeticBaseline(),
_945: x0 => x0.didExceedMaxLines(),
_946: x0 => x0.getHeight(),
_947: x0 => x0.getIdeographicBaseline(),
_949: x0 => x0.getLineMetrics(),
_950: x0 => x0.getLongestLine(),
_951: x0 => x0.getMaxIntrinsicWidth(),
_952: x0 => x0.getMinIntrinsicWidth(),
_953: x0 => x0.getMaxWidth(),
_954: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_956: x0 => x0.getRectsForPlaceholders(),
_957: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_958: (x0,x1) => x0.getWordBoundary(x1),
_960: (x0,x1) => x0.layout(x1),
_962: x0 => x0.affinity,
_963: x0 => x0.pos,
_964: x0 => x0.start,
_965: x0 => x0.end,
_967: x0 => x0.ambient,
_968: x0 => x0.spot,
_972: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_974: x0 => x0.isDeleted(),
_977: (x0,x1,x2) => x0.register(x1,x2),
_978: () => globalThis.window.FinalizationRegistry,
_1001: x0 => globalThis.__flutterWebCachedModule = x0,
_1002: () => globalThis.__flutterWebCachedModule,
_1003: x0 => globalThis.__flutterWebCachedExports = x0,
_1004: () => globalThis.__flutterWebCachedExports,
_1005: () => globalThis.Object,
_1006: () => globalThis.exports,
_1007: () => globalThis.module,
_1008: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_1009: (x0,x1) => x0.makeShader(x1),
_1010: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_1011: f => finalizeWrapper(f,() => dartInstance.exports._1011(f)),
_1012: f => finalizeWrapper(f,x0 => dartInstance.exports._1012(f,x0)),
_1013: f => finalizeWrapper(f,() => dartInstance.exports._1013(f)),
_1014: f => finalizeWrapper(f,x0 => dartInstance.exports._1014(f,x0)),
_1015: x0 => x0.remove(),
_1016: x0 => x0.remove(),
_1017: (x0,x1) => x0.appendChild(x1),
_1019: () => globalThis.window.flutterConfiguration,
_1020: x0 => x0.assetBase,
_1021: x0 => x0.canvasKitBaseUrl,
_1022: x0 => x0.canvasKitVariant,
_1023: x0 => x0.canvasKitForceCpuOnly,
_1024: x0 => x0.canvasKitMaximumSurfaces,
_1025: x0 => x0.debugShowSemanticsNodes,
_1026: x0 => x0.hostElement,
_1027: x0 => x0.renderer,
_1028: x0 => x0.useColorEmoji,
_1029: () => globalThis.window.flutterWebRenderer,
_1030: x0 => x0.console,
_1031: x0 => x0.devicePixelRatio,
_1032: x0 => x0.document,
_1033: x0 => x0.history,
_1034: x0 => x0.innerHeight,
_1035: x0 => x0.innerWidth,
_1036: x0 => x0.location,
_1037: x0 => x0.navigator,
_1038: x0 => x0.visualViewport,
_1039: x0 => x0.performance,
_1041: (x0,x1) => x0.fetch(x1),
_1044: x0 => x0.URL,
_1045: (x0,x1) => x0.dispatchEvent(x1),
_1046: (x0,x1) => x0.matchMedia(x1),
_1047: (x0,x1) => x0.getComputedStyle(x1),
_1049: x0 => x0.screen,
_1050: (x0,x1) => x0.requestAnimationFrame(x1),
_1051: f => finalizeWrapper(f,x0 => dartInstance.exports._1051(f,x0)),
_1054: x0 => x0.trustedTypes,
_1056: (x0,x1) => x0.warn(x1),
_1057: (x0,x1) => x0.error(x1),
_1058: (x0,x1) => x0.debug(x1),
_1059: () => globalThis.window,
_1060: () => globalThis.Intl,
_1061: () => globalThis.Symbol,
_1062: x0 => x0.clipboard,
_1063: x0 => x0.maxTouchPoints,
_1064: x0 => x0.vendor,
_1065: x0 => x0.language,
_1066: x0 => x0.platform,
_1067: x0 => x0.userAgent,
_1068: x0 => x0.languages,
_1069: x0 => x0.documentElement,
_1070: (x0,x1) => x0.querySelector(x1),
_1072: (x0,x1) => x0.createElement(x1),
_1074: (x0,x1) => x0.execCommand(x1),
_1075: x0 => x0.currentScript,
_1076: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1078: (x0,x1) => x0.createTextNode(x1),
_1080: (x0,x1) => x0.createEvent(x1),
_1083: x0 => x0.fonts,
_1084: x0 => x0.head,
_1085: x0 => x0.body,
_1086: (x0,x1) => x0.title = x1,
_1089: x0 => x0.activeElement,
_1091: () => globalThis.document,
_1092: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1093: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1094: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1096: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1097: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1099: f => finalizeWrapper(f,x0 => dartInstance.exports._1099(f,x0)),
_1100: x0 => x0.target,
_1102: x0 => x0.timeStamp,
_1103: x0 => x0.type,
_1109: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1114: x0 => x0.firstChild,
_1117: x0 => x0.lastChild,
_1118: (x0,x1) => x0.appendChild(x1),
_1119: x0 => x0.parentElement,
_1121: x0 => x0.parentNode,
_1124: (x0,x1) => x0.removeChild(x1),
_1125: (x0,x1) => x0.removeChild(x1),
_1126: x0 => x0.isConnected,
_1127: (x0,x1) => x0.textContent = x1,
_1129: (x0,x1) => x0.cloneNode(x1),
_1130: (x0,x1) => x0.contains(x1),
_1134: x0 => x0.children,
_1135: x0 => x0.clientHeight,
_1136: x0 => x0.clientWidth,
_1137: x0 => x0.id,
_1138: (x0,x1) => x0.id = x1,
_1141: (x0,x1) => x0.spellcheck = x1,
_1142: x0 => x0.tagName,
_1143: x0 => x0.style,
_1144: (x0,x1) => x0.append(x1),
_1146: (x0,x1) => x0.getAttribute(x1),
_1147: x0 => x0.getBoundingClientRect(),
_1153: (x0,x1) => x0.querySelectorAll(x1),
_1155: x0 => x0.remove(),
_1157: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1158: (x0,x1) => x0.removeAttribute(x1),
_1159: (x0,x1) => x0.tabIndex = x1,
_1162: x0 => x0.scrollTop,
_1163: (x0,x1) => x0.scrollTop = x1,
_1164: x0 => x0.scrollLeft,
_1165: (x0,x1) => x0.scrollLeft = x1,
_1166: x0 => x0.classList,
_1167: (x0,x1) => x0.className = x1,
_1172: (x0,x1) => x0.getElementsByClassName(x1),
_1173: x0 => x0.click(),
_1175: (x0,x1) => x0.hasAttribute(x1),
_1178: (x0,x1) => x0.attachShadow(x1),
_1181: (x0,x1) => x0.getPropertyValue(x1),
_1183: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1185: (x0,x1) => x0.removeProperty(x1),
_1187: x0 => x0.offsetLeft,
_1188: x0 => x0.offsetTop,
_1189: x0 => x0.offsetParent,
_1191: (x0,x1) => x0.name = x1,
_1192: x0 => x0.content,
_1193: (x0,x1) => x0.content = x1,
_1196: x0 => x0.src,
_1197: (x0,x1) => x0.src = x1,
_1198: x0 => x0.naturalWidth,
_1199: x0 => x0.naturalHeight,
_1202: x0 => x0.decode(),
_1203: (x0,x1) => x0.src = x1,
_1205: x0 => x0.sheet,
_1209: x0 => x0.now(),
_1211: (x0,x1) => x0.width = x1,
_1213: (x0,x1) => x0.height = x1,
_1215: (x0,x1) => x0.toDataURL(x1),
_1216: (x0,x1) => x0.getContext(x1),
_1217: (x0,x1,x2) => x0.getContext(x1,x2),
_1218: (x0,x1) => x0.getParameter(x1),
_1219: x0 => x0.SAMPLES,
_1220: x0 => x0.STENCIL_BITS,
_1222: x0 => x0.fillStyle,
_1223: (x0,x1) => x0.fillStyle = x1,
_1224: x0 => x0.font,
_1225: (x0,x1) => x0.font = x1,
_1227: (x0,x1) => x0.direction = x1,
_1228: (x0,x1) => x0.lineWidth = x1,
_1229: (x0,x1) => x0.strokeStyle = x1,
_1230: x0 => x0.strokeStyle,
_1234: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1236: (x0,x1,x2) => x0.createPattern(x1,x2),
_1240: (x0,x1,x2,x3) => x0.drawImage(x1,x2,x3),
_1241: x0 => x0.fill(),
_1242: (x0,x1) => x0.fill(x1),
_1243: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1244: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1248: (x0,x1,x2,x3,x4) => x0.getImageData(x1,x2,x3,x4),
_1250: (x0,x1,x2) => x0.lineTo(x1,x2),
_1252: (x0,x1) => x0.measureText(x1),
_1254: (x0,x1,x2) => x0.moveTo(x1,x2),
_1256: x0 => x0.save(),
_1260: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1262: x0 => x0.restore(),
_1263: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1265: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1267: x0 => x0.clip(),
_1269: (x0,x1) => x0.clip(x1),
_1270: (x0,x1,x2) => x0.scale(x1,x2),
_1271: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1272: (x0,x1,x2) => x0.translate(x1,x2),
_1273: (x0,x1) => x0.rotate(x1),
_1274: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1275: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1276: (x0,x1) => x0.globalCompositeOperation = x1,
_1277: (x0,x1) => x0.lineCap = x1,
_1278: (x0,x1) => x0.lineJoin = x1,
_1279: (x0,x1) => x0.shadowBlur = x1,
_1280: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1281: (x0,x1) => x0.filter = x1,
_1282: (x0,x1) => x0.shadowOffsetX = x1,
_1283: (x0,x1) => x0.shadowOffsetY = x1,
_1284: (x0,x1) => x0.shadowColor = x1,
_1286: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1288: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1289: (x0,x1) => x0.globalAlpha = x1,
_1291: x0 => x0.data,
_1292: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1293: x0 => x0.status,
_1295: x0 => x0.body,
_1296: x0 => x0.arrayBuffer(),
_1303: x0 => x0.read(),
_1304: x0 => x0.value,
_1305: x0 => x0.done,
_1306: x0 => x0.width,
_1307: x0 => x0.name,
_1308: x0 => x0.x,
_1309: x0 => x0.y,
_1310: x0 => x0.width,
_1311: x0 => x0.height,
_1312: x0 => x0.top,
_1313: x0 => x0.right,
_1314: x0 => x0.bottom,
_1315: x0 => x0.left,
_1317: x0 => x0.load(),
_1326: x0 => x0.height,
_1327: x0 => x0.width,
_1328: (x0,x1) => x0.value = x1,
_1330: (x0,x1) => x0.placeholder = x1,
_1331: (x0,x1) => x0.name = x1,
_1332: x0 => x0.selectionStart,
_1333: x0 => x0.selectionEnd,
_1336: x0 => x0.value,
_1337: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1341: x0 => x0.readText(),
_1342: (x0,x1) => x0.writeText(x1),
_1343: x0 => x0.altKey,
_1344: x0 => x0.code,
_1345: x0 => x0.ctrlKey,
_1346: x0 => x0.key,
_1347: x0 => x0.keyCode,
_1348: x0 => x0.location,
_1349: x0 => x0.metaKey,
_1350: x0 => x0.repeat,
_1351: x0 => x0.shiftKey,
_1352: x0 => x0.isComposing,
_1353: (x0,x1) => x0.getModifierState(x1),
_1354: x0 => x0.state,
_1356: (x0,x1) => x0.go(x1),
_1357: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1358: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1359: x0 => x0.pathname,
_1360: x0 => x0.search,
_1361: x0 => x0.hash,
_1364: x0 => x0.state,
_1365: (x0,x1) => x0.createObjectURL(x1),
_1366: (x0,x1) => x0.revokeObjectURL(x1),
_1367: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1367(f,x0,x1)),
_1369: (x0,x1,x2) => x0.observe(x1,x2),
_1372: x0 => x0.attributeName,
_1373: x0 => x0.type,
_1374: x0 => x0.matches,
_1377: x0 => x0.matches,
_1378: x0 => x0.clientX,
_1379: x0 => x0.clientY,
_1380: x0 => x0.offsetX,
_1381: x0 => x0.offsetY,
_1384: x0 => x0.button,
_1385: x0 => x0.buttons,
_1386: x0 => x0.ctrlKey,
_1388: (x0,x1) => x0.getModifierState(x1),
_1389: x0 => x0.pointerId,
_1390: x0 => x0.pointerType,
_1391: x0 => x0.pressure,
_1392: x0 => x0.tiltX,
_1393: x0 => x0.tiltY,
_1394: x0 => x0.getCoalescedEvents(),
_1395: x0 => x0.deltaX,
_1396: x0 => x0.deltaY,
_1397: x0 => x0.wheelDeltaX,
_1398: x0 => x0.wheelDeltaY,
_1399: x0 => x0.deltaMode,
_1400: x0 => x0.altKey,
_1401: x0 => x0.ctrlKey,
_1402: x0 => x0.metaKey,
_1403: x0 => x0.shiftKey,
_1404: x0 => x0.changedTouches,
_1405: x0 => x0.identifier,
_1406: x0 => x0.clientX,
_1407: x0 => x0.clientY,
_1408: x0 => x0.data,
_1409: (x0,x1) => x0.type = x1,
_1410: (x0,x1) => x0.max = x1,
_1411: (x0,x1) => x0.min = x1,
_1412: (x0,x1) => x0.value = x1,
_1413: x0 => x0.value,
_1414: x0 => x0.disabled,
_1415: (x0,x1) => x0.disabled = x1,
_1416: (x0,x1) => x0.placeholder = x1,
_1417: (x0,x1) => x0.name = x1,
_1418: (x0,x1) => x0.autocomplete = x1,
_1419: x0 => x0.selectionStart,
_1420: x0 => x0.selectionEnd,
_1423: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1430: (x0,x1) => x0.add(x1),
_1435: (x0,x1) => x0.noValidate = x1,
_1436: (x0,x1) => x0.method = x1,
_1437: (x0,x1) => x0.action = x1,
_1440: (x0,x1) => x0.height = x1,
_1441: (x0,x1) => x0.width = x1,
_1443: (x0,x1,x2) => x0.getContext(x1,x2),
_1457: x0 => x0.cssRules,
_1459: (x0,x1,x2) => x0.insertRule(x1,x2),
_1461: x0 => x0.orientation,
_1464: (x0,x1) => x0.lock(x1),
_1480: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1480(f,x0,x1)),
_1484: x0 => x0.contentRect,
_1486: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1487: (x0,x1) => x0.createScriptURL(x1),
_1489: x0 => x0.toString(),
_1490: x0 => x0.length,
_1491: (x0,x1) => x0.item(x1),
_1492: x0 => x0.length,
_1493: (x0,x1) => x0.item(x1),
_1494: x0 => x0.iterator,
_1495: x0 => x0.Segmenter,
_1496: x0 => x0.v8BreakIterator,
_1498: (x0,x1) => x0.segment(x1),
_1500: x0 => x0.done,
_1501: x0 => x0.value,
_1502: x0 => x0.index,
_1507: (x0,x1) => x0.adoptText(x1),
_1509: x0 => x0.first(),
_1510: x0 => x0.next(),
_1511: x0 => x0.current(),
_1512: x0 => x0.breakType(),
_1514: f => finalizeWrapper(f,x0 => dartInstance.exports._1514(f,x0)),
_1515: x0 => x0.loader,
_1516: () => globalThis._flutter,
_1517: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1518: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1518(f,x0,x1)),
_1531: () => globalThis.window.ImageDecoder,
_1532: x0 => x0.tracks,
_1537: x0 => x0.image,
_1540: x0 => x0.allocationSize(),
_1541: (x0,x1) => x0.copyTo(x1),
_1542: x0 => x0.format,
_1545: x0 => x0.displayWidth,
_1546: x0 => x0.displayHeight,
_1547: x0 => x0.duration,
_1550: x0 => x0.ready,
_1551: x0 => x0.selectedTrack,
_1552: x0 => x0.repetitionCount,
_1553: x0 => x0.frameCount,
_1593: () => globalThis.window.__flutterState,
_1594: x0 => globalThis.window.__flutterState = x0,
_1595: x0 => globalThis._flutter_web_set_location_strategy = x0,
_1596: f => finalizeWrapper(f,x0 => dartInstance.exports._1596(f,x0)),
_1597: f => finalizeWrapper(f,x0 => dartInstance.exports._1597(f,x0)),
_3: (x0,x1) => x0.matchMedia(x1),
_4: x0 => x0.navigator,
_6: () => globalThis.window,
_7: x0 => x0.matches,
_8: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = async (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

