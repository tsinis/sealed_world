  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _17291: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_17292: s => console.log(stringFromDartString(s)),
_17314: o => o === undefined,
_17315: o => typeof o === 'boolean',
_17316: o => typeof o === 'number',
_17318: o => typeof o === 'string',
_17321: o => o instanceof Int8Array,
_17322: o => o instanceof Uint8Array,
_17323: o => o instanceof Uint8ClampedArray,
_17324: o => o instanceof Int16Array,
_17325: o => o instanceof Uint16Array,
_17326: o => o instanceof Int32Array,
_17327: o => o instanceof Uint32Array,
_17328: o => o instanceof Float32Array,
_17329: o => o instanceof Float64Array,
_17330: o => o instanceof ArrayBuffer,
_17331: o => o instanceof DataView,
_17332: o => o instanceof Array,
_17333: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_17335: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_17336: o => o instanceof RegExp,
_17337: (l, r) => l === r,
_17338: o => o,
_17339: o => o,
_17340: o => o,
_17341: b => !!b,
_17342: o => o.length,
_17345: (o, i) => o[i],
_17346: f => f.dartFunction,
_17347: l => arrayFromDartList(Int8Array, l),
_17348: l => arrayFromDartList(Uint8Array, l),
_17349: l => arrayFromDartList(Uint8ClampedArray, l),
_17350: l => arrayFromDartList(Int16Array, l),
_17351: l => arrayFromDartList(Uint16Array, l),
_17352: l => arrayFromDartList(Int32Array, l),
_17353: l => arrayFromDartList(Uint32Array, l),
_17354: l => arrayFromDartList(Float32Array, l),
_17355: l => arrayFromDartList(Float64Array, l),
_17356: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_17357: l => arrayFromDartList(Array, l),
_17358: stringFromDartString,
_17359: stringToDartString,
_17360: () => ({}),
_17361: () => [],
_17362: () => globalThis,
_17363: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_17364: (o, p) => p in o,
_17365: (o, p) => o[p],
_17366: (o, p, v) => o[p] = v,
_17367: (o, m, a) => o[m].apply(o, a),
_17370: (p, s, f) => p.then(s, f),
_17372: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_17301: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_17302: (x0,x1) => x0.exec(x1),
_17303: (x0,x1) => x0.test(x1),
_17304: (x0,x1) => x0.exec(x1),
_17305: (x0,x1) => x0.exec(x1),
_17306: x0 => x0.pop(),
_17309: (x0,x1) => x0[x1],
_17310: (x0,x1,x2) => x0[x1] = x2,
_17369: o => String(o),
_17374: x0 => x0.index,
_17376: x0 => x0.length,
_17380: x0 => x0.flags,
_17381: x0 => x0.multiline,
_17382: x0 => x0.ignoreCase,
_17383: x0 => x0.unicode,
_17384: x0 => x0.dotAll,
_17385: (x0,x1) => x0.lastIndex = x1,
_17173: x0 => new Array(x0),
_17174: (a, i) => a.push(i),
_17175: (a, i) => a.splice(i, 1)[0],
_17178: a => a.pop(),
_17179: (a, i) => a.splice(i, 1),
_17185: a => a.length,
_17187: (a, i) => a[i],
_17188: (a, i, v) => a[i] = v,
_17190: (s, i) => s.charCodeAt(i),
_17191: (a, b) => a + b,
_17194: (s, t) => s.split(t),
_17195: (o, s, i) => o.substring(s, i),
_17196: s => s.toLowerCase(),
_17197: s => s.toUpperCase(),
_17198: s => s.trim(),
_17199: s => s.trimLeft(),
_17200: s => s.trimRight(),
_17202: (s, p, i) => s.indexOf(p, i),
_17203: (s, p, i) => s.lastIndexOf(p, i),
_17204: s => s.length,
_17205: (s, i) => s[i],
_17207: o => o.buffer,
_17208: o => o.byteLength,
_17209: o => o.byteOffset,
_17210: o => o.BYTES_PER_ELEMENT,
_17211: o => o.length,
_17212: (b, o) => new DataView(b, o),
_17213: (b, o, l) => new DataView(b, o, l),
_17215: (b, o, e) => b.getFloat64(o, e),
_17217: (b, o, e) => b.getInt32(o, e),
_17218: (b, o, e) => b.getBigInt64(o, e),
_17220: (b, o, e) => b.getUint16(o, e),
_17221: (b, o, e) => b.getUint32(o, e),
_17223: (b, o) => b.getUint8(o),
_17234: (o, i) => o[i],
_17235: (o, i, v) => o[i] = v,
_17236: (b, o) => new Uint8Array(b, o),
_17237: (b, o, l) => new Uint8Array(b, o, l),
_17238: (a, s, p) => new Uint8Array(a.subarray(s, p)),
_17251: (b, o, l) => new Int32Array(b, o, l),
_17253: (o, i) => o[i],
_17254: (o, i, v) => o[i] = v,
_17257: (b, o, l) => new BigInt64Array(b, o, l),
_17259: (o, i) => o[i],
_17260: (o, i, v) => o[i] = v,
_17261: (b, o, l) => new Float32Array(b, o, l),
_17263: (b, o, l) => new Float64Array(b, o, l),
_17265: (s, k, e) => s.subarray(k, e),
_17266: (t, s, i) => t.set(s, i),
_17293: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_17294: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_17386: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_17387: (handle) => clearTimeout(handle),
_17388: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_17389: (handle) => clearInterval(handle),
_17391: () => Date.now(),
_17390: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_17295: (o, t) => o instanceof t,
_17297: f => finalizeWrapper(f,x0 => dartInstance.exports._17297(f,x0)),
_17298: f => finalizeWrapper(f,x0 => dartInstance.exports._17298(f,x0)),
_17299: o => Object.keys(o),
_17267: o => new WeakRef(o),
_17268: r => r.deref(),
_17273: v => stringToDartString(v.toString()),
_17274: (d, digits) => stringToDartString(d.toFixed(digits)),
_17277: (d, precision) => stringToDartString(d.toPrecision(precision)),
_17278: Date.now,
_17280: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_17281: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_17282: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_17283: () => typeof dartUseDateNowForTicks !== "undefined",
_17284: () => 1000 * performance.now(),
_17285: () => Date.now(),
_17288: () => new WeakMap(),
_17289: (map, o) => map.get(o),
_17290: (map, o, v) => map.set(o, v),
_2: f => finalizeWrapper(f,() => dartInstance.exports._2(f)),
_3: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._3(f,arguments.length,x0) }),
_4: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_5: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._5(f,x0,x1)),
_6: x0 => new Promise(x0),
_7: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._7(f,arguments.length,x0) }),
_8: x0 => ({runApp: x0}),
_9: () => ({}),
_10: (x0,x1) => x0.append(x1),
_11: x0 => x0.save(),
_12: x0 => x0.remove(),
_13: x0 => x0.restore(),
_14: x0 => x0.save(),
_15: x0 => x0.save(),
_16: x0 => x0.restore(),
_17: x0 => x0.beginPath(),
_19: x0 => x0.beginPath(),
_20: x0 => x0.beginPath(),
_21: x0 => x0.stroke(),
_27: x0 => x0.beginPath(),
_28: x0 => x0.closePath(),
_29: x0 => x0.beginPath(),
_30: x0 => x0.beginPath(),
_31: x0 => x0.closePath(),
_32: x0 => x0.beginPath(),
_33: x0 => x0.beginPath(),
_34: x0 => x0.save(),
_35: x0 => x0.restore(),
_36: x0 => x0.remove(),
_37: x0 => x0.save(),
_38: x0 => x0.restore(),
_39: x0 => x0.stroke(),
_40: x0 => x0.stroke(),
_41: (x0,x1) => x0.drawPaint(x1),
_42: (x0,x1,x2) => x0.drawPath(x1,x2),
_43: (x0,x1) => x0.drawPicture(x1),
_45: x0 => x0.restore(),
_46: x0 => ({locateFile: x0}),
_47: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_48: () => new window.flutterCanvasKit.Paint(),
_49: (x0,x1) => ({B: x0,C: x1}),
_50: (x0,x1) => ({filter: x0,mipmap: x1}),
_51: () => new window.flutterCanvasKit.Path(),
_55: () => new window.flutterCanvasKit.PictureRecorder(),
_56: () => ({}),
_57: () => ({}),
_58: () => ({}),
_59: () => ({}),
_62: () => ({}),
_63: x0 => new window.flutterCanvasKit.Font(x0),
_64: (x0,x1) => ({ambient: x0,spot: x1}),
_66: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_78: x0 => x0.remove(),
_86: (x0,x1,x2) => x0.insertBefore(x1,x2),
_88: (x0,x1) => x0.append(x1),
_89: (x0,x1) => x0.append(x1),
_92: (x0,x1) => x0.append(x1),
_96: x0 => x0.delete(),
_97: x0 => x0.delete(),
_98: x0 => x0.Make(),
_99: x0 => x0.Make(),
_100: x0 => x0.enableFontFallback(),
_101: (x0,x1) => x0.setDefaultFontManager(x1),
_103: x0 => x0.clone(),
_105: x0 => x0.makeImageAtCurrentFrame(),
_106: x0 => x0.delete(),
_107: (x0,x1) => x0.setBlendMode(x1),
_108: (x0,x1) => x0.setStyle(x1),
_109: (x0,x1) => x0.setStrokeCap(x1),
_110: (x0,x1) => x0.setStrokeJoin(x1),
_111: (x0,x1) => x0.setColorFilter(x1),
_112: (x0,x1) => x0.setShader(x1),
_113: (x0,x1) => x0.setMaskFilter(x1),
_114: (x0,x1) => x0.setShader(x1),
_116: (x0,x1) => x0.setImageFilter(x1),
_117: (x0,x1) => x0.setFillType(x1),
_120: (x0,x1) => x0.setFillType(x1),
_121: (x0,x1) => x0.setFillType(x1),
_123: x0 => x0.close(),
_124: x0 => x0.reset(),
_125: x0 => x0.copy(),
_126: (x0,x1,x2,x3) => x0.MakeFromOp(x1,x2,x3),
_130: x0 => x0.finishRecordingAsPicture(),
_131: x0 => x0.delete(),
_132: (x0,x1) => x0.prepend(x1),
_133: x0 => x0.releaseResourcesAndAbandonContext(),
_134: x0 => x0.delete(),
_135: x0 => x0.stopPropagation(),
_136: x0 => x0.preventDefault(),
_137: x0 => x0.preventDefault(),
_138: x0 => x0.remove(),
_139: (x0,x1) => x0.append(x1),
_140: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_141: x0 => x0.remove(),
_142: x0 => x0.getCanvas(),
_143: x0 => x0.flush(),
_144: x0 => x0.dispose(),
_145: x0 => x0.remove(),
_146: x0 => x0.remove(),
_147: (x0,x1) => x0.ParagraphStyle(x1),
_148: (x0,x1) => x0.TextStyle(x1),
_149: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_150: x0 => x0.build(),
_151: x0 => x0.delete(),
_152: x0 => x0.pop(),
_153: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_154: (x0,x1) => x0.pushStyle(x1),
_155: x0 => x0.focus(),
_156: x0 => x0.select(),
_157: (x0,x1) => x0.append(x1),
_158: x0 => x0.remove(),
_162: x0 => x0.getReader(),
_165: (x0,x1,x2) => new FontFace(x0,x1,x2),
_170: x0 => new Blob(x0),
_172: x0 => new MutationObserver(x0),
_187: (x0,x1) => new OffscreenCanvas(x0,x1),
_189: (x0,x1,x2) => x0.addEventListener(x1,x2),
_190: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_193: x0 => new ResizeObserver(x0),
_195: x0 => ({createScriptURL: x0}),
_196: (x0,x1) => new Intl.Segmenter(x0,x1),
_197: x0 => x0.next(),
_198: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_200: x0 => x0.remove(),
_201: (x0,x1) => x0.append(x1),
_202: (x0,x1) => x0.appendChild(x1),
_203: (x0,x1) => x0.appendChild(x1),
_204: (x0,x1) => x0.append(x1),
_205: (x0,x1) => x0.append(x1),
_206: (x0,x1) => x0.append(x1),
_207: (x0,x1) => x0.appendChild(x1),
_208: x0 => x0.unlock(),
_212: (x0,x1) => x0.append(x1),
_213: (x0,x1) => x0.append(x1),
_214: x0 => x0.remove(),
_215: (x0,x1) => x0.append(x1),
_216: (x0,x1) => x0.append(x1),
_217: x0 => x0.remove(),
_218: (x0,x1) => x0.append(x1),
_219: (x0,x1) => x0.append(x1),
_222: x0 => x0.save(),
_223: x0 => x0.restore(),
_224: (x0,x1) => x0.append(x1),
_225: (x0,x1) => x0.append(x1),
_226: (x0,x1) => x0.append(x1),
_227: (x0,x1) => x0.append(x1),
_229: (x0,x1) => x0.append(x1),
_230: (x0,x1) => x0.append(x1),
_231: x0 => x0.remove(),
_232: (x0,x1) => x0.append(x1),
_233: x0 => x0.remove(),
_234: x0 => x0.remove(),
_259: (x0,x1) => x0.append(x1),
_260: (x0,x1) => x0.append(x1),
_261: (x0,x1) => x0.append(x1),
_262: (x0,x1) => x0.appendChild(x1),
_263: (x0,x1) => x0.append(x1),
_273: x0 => x0.remove(),
_274: (x0,x1) => x0.append(x1),
_275: (x0,x1) => x0.append(x1),
_276: (x0,x1) => x0.append(x1),
_277: (x0,x1) => x0.append(x1),
_278: (x0,x1) => x0.append(x1),
_279: (x0,x1) => x0.append(x1),
_280: (x0,x1) => x0.append(x1),
_281: (x0,x1,x2) => x0.insertBefore(x1,x2),
_282: x0 => x0.close(),
_283: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_284: x0 => new window.ImageDecoder(x0),
_285: x0 => x0.close(),
_286: x0 => ({frameIndex: x0}),
_287: (x0,x1) => x0.decode(x1),
_289: x0 => new Promise(x0),
_292: x0 => x0.preventDefault(),
_293: (x0,x1) => x0.addListener(x1),
_294: (x0,x1) => x0.removeListener(x1),
_295: (x0,x1) => x0.append(x1),
_296: x0 => x0.disconnect(),
_297: (x0,x1) => x0.addListener(x1),
_298: (x0,x1) => x0.removeListener(x1),
_299: (x0,x1) => x0.append(x1),
_300: x0 => x0.remove(),
_301: (x0,x1) => x0.append(x1),
_302: x0 => x0.remove(),
_303: x0 => x0.remove(),
_307: x0 => x0.preventDefault(),
_308: (x0,x1) => x0.append(x1),
_309: x0 => x0.remove(),
_310: x0 => x0.preventDefault(),
_311: x0 => x0.preventDefault(),
_312: x0 => x0.preventDefault(),
_313: (x0,x1) => x0.append(x1),
_314: x0 => x0.remove(),
_315: x0 => x0.beginPath(),
_325: (x0,x1) => x0.append(x1),
_326: (x0,x1) => x0.append(x1),
_327: (x0,x1) => x0.append(x1),
_328: x0 => x0.remove(),
_329: x0 => x0.blur(),
_330: x0 => x0.focus(),
_331: x0 => x0.blur(),
_332: (x0,x1) => x0.append(x1),
_333: x0 => x0.remove(),
_334: (x0,x1) => x0.append(x1),
_335: x0 => x0.remove(),
_336: (x0,x1) => x0.append(x1),
_337: (x0,x1) => x0.append(x1),
_338: x0 => x0.remove(),
_339: (x0,x1) => x0.append(x1),
_340: (x0,x1) => x0.append(x1),
_341: (x0,x1,x2) => x0.insertBefore(x1,x2),
_342: x0 => x0.remove(),
_343: x0 => x0.remove(),
_344: x0 => x0.remove(),
_345: (x0,x1) => x0.append(x1),
_346: x0 => x0.remove(),
_347: x0 => x0.getBoundingClientRect(),
_348: x0 => x0.remove(),
_349: x0 => x0.blur(),
_351: (x0,x1) => x0.append(x1),
_352: x0 => x0.focus(),
_353: x0 => x0.remove(),
_354: x0 => x0.focus(),
_355: x0 => x0.focus(),
_356: x0 => x0.blur(),
_357: x0 => x0.remove(),
_358: (x0,x1) => x0.append(x1),
_359: x0 => x0.clear(),
_360: (x0,x1) => x0.add(x1),
_362: (x0,x1) => x0.appendChild(x1),
_364: x0 => x0.remove(),
_365: (x0,x1) => x0.append(x1),
_366: (x0,x1) => x0.append(x1),
_367: x0 => x0.getBoundingClientRect(),
_368: x0 => x0.getBoundingClientRect(),
_370: (x0,x1) => x0.append(x1),
_371: x0 => x0.preventDefault(),
_372: (x0,x1) => x0.append(x1),
_373: x0 => x0.remove(),
_374: (x0,x1) => x0.append(x1),
_375: (x0,x1,x2) => x0.insertBefore(x1,x2),
_376: (x0,x1) => x0.append(x1),
_377: x0 => x0.focus(),
_378: x0 => x0.focus(),
_379: x0 => x0.focus(),
_380: x0 => x0.focus(),
_381: x0 => x0.focus(),
_382: (x0,x1) => x0.append(x1),
_383: x0 => x0.focus(),
_384: x0 => x0.blur(),
_385: x0 => x0.remove(),
_387: x0 => x0.preventDefault(),
_388: x0 => x0.focus(),
_389: x0 => x0.preventDefault(),
_390: x0 => x0.preventDefault(),
_391: x0 => x0.preventDefault(),
_392: x0 => x0.focus(),
_393: x0 => x0.focus(),
_394: (x0,x1) => x0.append(x1),
_395: x0 => x0.focus(),
_396: x0 => x0.focus(),
_397: x0 => x0.focus(),
_398: x0 => x0.focus(),
_399: (x0,x1) => x0.observe(x1),
_400: x0 => x0.disconnect(),
_401: (x0,x1) => x0.appendChild(x1),
_403: x0 => x0.preventDefault(),
_405: (x0,x1) => x0.append(x1),
_407: x0 => x0.remove(),
_408: (x0,x1) => x0.append(x1),
_410: x0 => globalThis.window.flutterCanvasKit = x0,
_411: () => globalThis.window.flutterCanvasKit,
_412: x0 => x0.BlendMode,
_413: x0 => x0.PaintStyle,
_414: x0 => x0.StrokeCap,
_415: x0 => x0.StrokeJoin,
_416: x0 => x0.BlurStyle,
_417: x0 => x0.TileMode,
_418: x0 => x0.FilterMode,
_419: x0 => x0.MipmapMode,
_420: x0 => x0.FillType,
_421: x0 => x0.AlphaType,
_422: x0 => x0.ColorType,
_423: x0 => x0.PathOp,
_424: x0 => x0.ClipOp,
_427: x0 => x0.RectHeightStyle,
_428: x0 => x0.RectWidthStyle,
_430: x0 => x0.TextAlign,
_431: x0 => x0.TextHeightBehavior,
_432: x0 => x0.TextDirection,
_433: x0 => x0.FontWeight,
_435: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_436: x0 => x0.Shader,
_437: x0 => x0.MaskFilter,
_439: x0 => x0.ImageFilter,
_440: x0 => x0.Path,
_441: (x0,x1) => x0.computeTonalColors(x1),
_443: x0 => x0.ParagraphBuilder,
_449: x0 => x0.NoDecoration,
_450: x0 => x0.UnderlineDecoration,
_451: x0 => x0.OverlineDecoration,
_452: x0 => x0.LineThroughDecoration,
_453: x0 => x0.DecorationStyle,
_454: x0 => x0.TextBaseline,
_455: x0 => x0.PlaceholderAlignment,
_457: x0 => x0.TypefaceFontProvider,
_458: x0 => x0.FontCollection,
_459: x0 => x0.Typeface,
_460: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_462: (x0,x1) => x0.MakeGrContext(x1),
_463: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_468: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_470: x0 => globalThis.window.CanvasKitInit(x0),
_471: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._471(f,x0,x1)),
_472: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_480: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_487: x0 => x0.Thin,
_488: x0 => x0.ExtraLight,
_489: x0 => x0.Light,
_490: x0 => x0.Normal,
_491: x0 => x0.Medium,
_492: x0 => x0.SemiBold,
_493: x0 => x0.Bold,
_494: x0 => x0.ExtraBold,
_495: x0 => x0.ExtraBlack,
_499: x0 => x0.value,
_500: x0 => x0.RTL,
_501: x0 => x0.LTR,
_502: x0 => x0.value,
_503: x0 => x0.Left,
_504: x0 => x0.Right,
_505: x0 => x0.Center,
_506: x0 => x0.Justify,
_507: x0 => x0.Start,
_508: x0 => x0.End,
_510: x0 => x0.All,
_511: x0 => x0.DisableFirstAscent,
_512: x0 => x0.DisableLastDescent,
_513: x0 => x0.DisableAll,
_515: x0 => x0.Tight,
_516: x0 => x0.Max,
_517: x0 => x0.IncludeLineSpacingMiddle,
_518: x0 => x0.IncludeLineSpacingTop,
_519: x0 => x0.IncludeLineSpacingBottom,
_520: x0 => x0.Strut,
_522: x0 => x0.Tight,
_523: x0 => x0.Max,
_533: x0 => x0.Difference,
_534: x0 => x0.Intersect,
_536: x0 => x0.Winding,
_537: x0 => x0.EvenOdd,
_539: x0 => x0.Difference,
_540: x0 => x0.Intersect,
_541: x0 => x0.Union,
_542: x0 => x0.XOR,
_543: x0 => x0.ReverseDifference,
_545: x0 => x0.Normal,
_546: x0 => x0.Solid,
_547: x0 => x0.Outer,
_548: x0 => x0.Inner,
_550: x0 => x0.Butt,
_551: x0 => x0.Round,
_552: x0 => x0.Square,
_554: x0 => x0.Stroke,
_555: x0 => x0.Fill,
_557: x0 => x0.Clear,
_558: x0 => x0.Src,
_559: x0 => x0.Dst,
_560: x0 => x0.SrcOver,
_561: x0 => x0.DstOver,
_562: x0 => x0.SrcIn,
_563: x0 => x0.DstIn,
_564: x0 => x0.SrcOut,
_565: x0 => x0.DstOut,
_566: x0 => x0.SrcATop,
_567: x0 => x0.DstATop,
_568: x0 => x0.Xor,
_569: x0 => x0.Plus,
_570: x0 => x0.Modulate,
_571: x0 => x0.Screen,
_572: x0 => x0.Overlay,
_573: x0 => x0.Darken,
_574: x0 => x0.Lighten,
_575: x0 => x0.ColorDodge,
_576: x0 => x0.ColorBurn,
_577: x0 => x0.HardLight,
_578: x0 => x0.SoftLight,
_579: x0 => x0.Difference,
_580: x0 => x0.Exclusion,
_581: x0 => x0.Multiply,
_582: x0 => x0.Hue,
_583: x0 => x0.Saturation,
_584: x0 => x0.Color,
_585: x0 => x0.Luminosity,
_587: x0 => x0.Miter,
_588: x0 => x0.Round,
_589: x0 => x0.Bevel,
_591: x0 => x0.Clamp,
_592: x0 => x0.Repeat,
_593: x0 => x0.Mirror,
_594: x0 => x0.Decal,
_596: x0 => x0.Nearest,
_597: x0 => x0.Linear,
_599: x0 => x0.None,
_601: x0 => x0.Linear,
_604: x0 => x0.Premul,
_610: x0 => x0.RGBA_8888,
_619: x0 => x0.getFrameCount(),
_620: x0 => x0.getRepetitionCount(),
_621: x0 => x0.currentFrameDuration(),
_622: x0 => x0.decodeNextFrame(),
_630: x0 => x0.width(),
_631: x0 => x0.height(),
_638: (x0,x1) => x0.isAliasOf(x1),
_640: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_645: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_649: (x0,x1) => x0.setStrokeWidth(x1),
_652: (x0,x1) => x0.setAntiAlias(x1),
_654: (x0,x1) => x0.setColorInt(x1),
_669: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_670: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_674: (x0,x1) => x0.getOutputBounds(x1),
_677: () => globalThis.Float32Array,
_679: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_683: x0 => x0.toTypedArray(),
_688: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_690: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_691: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_694: (x0,x1,x2) => x0.addRRect(x1,x2),
_695: (x0,x1) => x0.addRect(x1),
_697: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_700: (x0,x1,x2) => x0.contains(x1,x2),
_703: x0 => x0.getBounds(),
_704: (x0,x1,x2) => x0.lineTo(x1,x2),
_706: (x0,x1,x2) => x0.moveTo(x1,x2),
_718: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_729: (x0,x1,x2) => x0.beginRecording(x1,x2),
_732: (x0,x1) => x0.clear(x1),
_734: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_735: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_736: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_741: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_743: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_747: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_748: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_750: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_751: (x0,x1,x2) => x0.drawOval(x1,x2),
_756: (x0,x1,x2) => x0.drawRRect(x1,x2),
_757: (x0,x1,x2) => x0.drawRect(x1,x2),
_759: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_761: x0 => x0.save(),
_763: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_767: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_768: (x0,x1,x2) => x0.scale(x1,x2),
_771: (x0,x1) => x0.concat(x1),
_772: (x0,x1,x2) => x0.translate(x1,x2),
_776: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_778: x0 => x0.cullRect(),
_782: (x0,x1) => x0.addText(x1),
_786: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_787: x0 => x0.getText(),
_789: (x0,x1) => x0.setWordsUtf16(x1),
_792: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_795: (x0,x1) => x0.setLineBreaksUtf16(x1),
_798: (x0,x1) => x0.textAlign = x1,
_799: (x0,x1) => x0.textDirection = x1,
_800: (x0,x1) => x0.heightMultiplier = x1,
_801: (x0,x1) => x0.textHeightBehavior = x1,
_802: (x0,x1) => x0.maxLines = x1,
_803: (x0,x1) => x0.ellipsis = x1,
_804: (x0,x1) => x0.textStyle = x1,
_805: (x0,x1) => x0.strutStyle = x1,
_806: (x0,x1) => x0.replaceTabCharacters = x1,
_807: (x0,x1) => x0.applyRoundingHack = x1,
_808: x0 => x0.Solid,
_809: x0 => x0.Double,
_810: x0 => x0.Dotted,
_811: x0 => x0.Dashed,
_812: x0 => x0.Wavy,
_814: x0 => x0.Alphabetic,
_815: x0 => x0.Ideographic,
_817: x0 => x0.Baseline,
_818: x0 => x0.AboveBaseline,
_819: x0 => x0.BelowBaseline,
_820: x0 => x0.Top,
_821: x0 => x0.Bottom,
_822: x0 => x0.Middle,
_824: (x0,x1) => x0.backgroundColor = x1,
_825: (x0,x1) => x0.color = x1,
_827: (x0,x1) => x0.decoration = x1,
_828: (x0,x1) => x0.decorationThickness = x1,
_829: (x0,x1) => x0.decorationColor = x1,
_830: (x0,x1) => x0.decorationStyle = x1,
_831: (x0,x1) => x0.textBaseline = x1,
_832: (x0,x1) => x0.fontSize = x1,
_833: (x0,x1) => x0.letterSpacing = x1,
_834: (x0,x1) => x0.wordSpacing = x1,
_835: (x0,x1) => x0.heightMultiplier = x1,
_836: (x0,x1) => x0.halfLeading = x1,
_838: (x0,x1) => x0.fontFamilies = x1,
_839: (x0,x1) => x0.fontStyle = x1,
_842: (x0,x1) => x0.fontVariations = x1,
_843: (x0,x1) => x0.fontFamilies = x1,
_844: (x0,x1) => x0.fontStyle = x1,
_845: (x0,x1) => x0.fontSize = x1,
_846: (x0,x1) => x0.heightMultiplier = x1,
_847: (x0,x1) => x0.halfLeading = x1,
_849: (x0,x1) => x0.strutEnabled = x1,
_850: (x0,x1) => x0.forceStrutHeight = x1,
_851: (x0,x1) => x0.weight = x1,
_858: (x0,x1) => x0.axis = x1,
_859: (x0,x1) => x0.value = x1,
_860: (x0,x1) => x0.getGlyphIDs(x1),
_861: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_865: (x0,x1,x2) => x0.registerFont(x1,x2),
_871: x0 => x0.startIndex,
_872: x0 => x0.endIndex,
_875: x0 => x0.isHardBreak,
_876: x0 => x0.ascent,
_877: x0 => x0.descent,
_879: x0 => x0.width,
_880: x0 => x0.left,
_881: x0 => x0.baseline,
_882: x0 => x0.lineNumber,
_883: x0 => x0.rect,
_885: x0 => x0.dir,
_887: x0 => x0.getAlphabeticBaseline(),
_888: x0 => x0.didExceedMaxLines(),
_889: x0 => x0.getHeight(),
_891: x0 => x0.getIdeographicBaseline(),
_892: x0 => x0.getLineMetrics(),
_893: x0 => x0.getLongestLine(),
_894: x0 => x0.getMaxIntrinsicWidth(),
_895: x0 => x0.getMinIntrinsicWidth(),
_896: x0 => x0.getMaxWidth(),
_898: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_899: x0 => x0.getRectsForPlaceholders(),
_900: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_901: (x0,x1) => x0.getWordBoundary(x1),
_902: (x0,x1) => x0.layout(x1),
_904: x0 => x0.affinity,
_905: x0 => x0.pos,
_906: x0 => x0.start,
_907: x0 => x0.end,
_909: x0 => x0.ambient,
_910: x0 => x0.spot,
_915: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_918: x0 => x0.isDeleted(),
_942: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_943: (x0,x1) => x0.makeShader(x1),
_944: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_945: x0 => x0.remove(),
_946: x0 => x0.remove(),
_947: (x0,x1) => x0.appendChild(x1),
_950: () => globalThis.window.flutterConfiguration,
_951: x0 => x0.assetBase,
_952: x0 => x0.canvasKitBaseUrl,
_953: x0 => x0.canvasKitVariant,
_954: x0 => x0.canvasKitForceCpuOnly,
_955: x0 => x0.canvasKitMaximumSurfaces,
_956: x0 => x0.debugShowSemanticsNodes,
_957: x0 => x0.hostElement,
_958: x0 => x0.nonce,
_959: x0 => x0.renderer,
_960: x0 => x0.useColorEmoji,
_961: () => globalThis.window.flutterWebRenderer,
_964: x0 => x0.console,
_965: x0 => x0.devicePixelRatio,
_966: x0 => x0.document,
_967: x0 => x0.history,
_968: x0 => x0.innerHeight,
_969: x0 => x0.innerWidth,
_970: x0 => x0.location,
_971: x0 => x0.navigator,
_972: x0 => x0.visualViewport,
_973: x0 => x0.performance,
_974: (x0,x1) => x0.fetch(x1),
_976: x0 => x0.URL,
_977: (x0,x1) => x0.dispatchEvent(x1),
_978: (x0,x1) => x0.matchMedia(x1),
_979: (x0,x1) => x0.getComputedStyle(x1),
_981: x0 => x0.screen,
_982: (x0,x1) => x0.requestAnimationFrame(x1),
_983: f => finalizeWrapper(f,x0 => dartInstance.exports._983(f,x0)),
_986: x0 => x0.trustedTypes,
_987: (x0,x1) => x0.warn(x1),
_989: (x0,x1) => x0.error(x1),
_990: (x0,x1) => x0.debug(x1),
_991: () => globalThis.window,
_992: () => globalThis.Intl,
_993: () => globalThis.Symbol,
_994: x0 => x0.clipboard,
_995: x0 => x0.maxTouchPoints,
_996: x0 => x0.vendor,
_997: x0 => x0.language,
_998: x0 => x0.platform,
_999: x0 => x0.userAgent,
_1000: x0 => x0.languages,
_1001: x0 => x0.documentElement,
_1002: (x0,x1) => x0.querySelector(x1),
_1005: (x0,x1) => x0.createElement(x1),
_1007: (x0,x1) => x0.execCommand(x1),
_1009: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1010: (x0,x1) => x0.createTextNode(x1),
_1011: (x0,x1) => x0.createEvent(x1),
_1014: x0 => x0.fonts,
_1015: x0 => x0.head,
_1016: x0 => x0.body,
_1017: (x0,x1) => x0.title = x1,
_1020: x0 => x0.activeElement,
_1023: () => globalThis.document,
_1024: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1025: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1027: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1028: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1029: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1031: f => finalizeWrapper(f,x0 => dartInstance.exports._1031(f,x0)),
_1032: x0 => x0.target,
_1034: x0 => x0.timeStamp,
_1035: x0 => x0.type,
_1041: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1046: x0 => x0.firstChild,
_1049: x0 => x0.lastChild,
_1050: (x0,x1) => x0.appendChild(x1),
_1051: x0 => x0.parentElement,
_1053: x0 => x0.parentNode,
_1056: (x0,x1) => x0.removeChild(x1),
_1057: (x0,x1) => x0.removeChild(x1),
_1058: x0 => x0.isConnected,
_1059: (x0,x1) => x0.textContent = x1,
_1060: (x0,x1) => x0.cloneNode(x1),
_1061: (x0,x1) => x0.contains(x1),
_1065: x0 => x0.children,
_1068: x0 => x0.clientHeight,
_1069: x0 => x0.clientWidth,
_1070: x0 => x0.id,
_1071: (x0,x1) => x0.id = x1,
_1074: (x0,x1) => x0.spellcheck = x1,
_1075: x0 => x0.tagName,
_1076: x0 => x0.style,
_1077: (x0,x1) => x0.append(x1),
_1079: (x0,x1) => x0.getAttribute(x1),
_1081: x0 => x0.getBoundingClientRect(),
_1086: (x0,x1) => x0.querySelectorAll(x1),
_1088: x0 => x0.remove(),
_1090: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1091: (x0,x1) => x0.removeAttribute(x1),
_1092: (x0,x1) => x0.tabIndex = x1,
_1095: x0 => x0.scrollTop,
_1096: (x0,x1) => x0.scrollTop = x1,
_1097: x0 => x0.scrollLeft,
_1098: (x0,x1) => x0.scrollLeft = x1,
_1099: x0 => x0.classList,
_1100: (x0,x1) => x0.className = x1,
_1107: (x0,x1) => x0.getElementsByClassName(x1),
_1108: x0 => x0.click(),
_1109: (x0,x1) => x0.hasAttribute(x1),
_1111: (x0,x1) => x0.attachShadow(x1),
_1113: (x0,x1) => x0.getPropertyValue(x1),
_1115: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1117: (x0,x1) => x0.removeProperty(x1),
_1119: x0 => x0.offsetLeft,
_1120: x0 => x0.offsetTop,
_1121: x0 => x0.offsetParent,
_1123: (x0,x1) => x0.name = x1,
_1124: x0 => x0.content,
_1125: (x0,x1) => x0.content = x1,
_1128: x0 => x0.src,
_1129: (x0,x1) => x0.src = x1,
_1130: x0 => x0.naturalWidth,
_1131: x0 => x0.naturalHeight,
_1134: x0 => x0.decode(),
_1135: (x0,x1) => x0.src = x1,
_1136: (x0,x1) => x0.nonce = x1,
_1138: (x0,x1) => x0.nonce = x1,
_1140: x0 => x0.sheet,
_1143: x0 => x0.now(),
_1145: (x0,x1) => x0.width = x1,
_1147: (x0,x1) => x0.height = x1,
_1149: (x0,x1) => x0.toDataURL(x1),
_1150: (x0,x1) => x0.getContext(x1),
_1151: (x0,x1,x2) => x0.getContext(x1,x2),
_1152: (x0,x1) => x0.getParameter(x1),
_1153: x0 => x0.SAMPLES,
_1154: x0 => x0.STENCIL_BITS,
_1156: x0 => x0.fillStyle,
_1157: (x0,x1) => x0.fillStyle = x1,
_1158: x0 => x0.font,
_1159: (x0,x1) => x0.font = x1,
_1161: (x0,x1) => x0.direction = x1,
_1162: (x0,x1) => x0.lineWidth = x1,
_1163: (x0,x1) => x0.strokeStyle = x1,
_1164: x0 => x0.strokeStyle,
_1169: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1170: (x0,x1,x2) => x0.createPattern(x1,x2),
_1173: x0 => x0.fill(),
_1174: (x0,x1) => x0.fill(x1),
_1175: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1176: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1181: (x0,x1,x2) => x0.lineTo(x1,x2),
_1183: (x0,x1) => x0.measureText(x1),
_1184: (x0,x1,x2) => x0.moveTo(x1,x2),
_1185: x0 => x0.save(),
_1187: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1189: x0 => x0.restore(),
_1191: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1192: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1193: x0 => x0.clip(),
_1194: (x0,x1) => x0.clip(x1),
_1196: (x0,x1,x2) => x0.scale(x1,x2),
_1197: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1198: (x0,x1,x2) => x0.translate(x1,x2),
_1199: (x0,x1) => x0.rotate(x1),
_1200: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1201: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1202: (x0,x1) => x0.globalCompositeOperation = x1,
_1203: (x0,x1) => x0.lineCap = x1,
_1204: (x0,x1) => x0.lineJoin = x1,
_1205: (x0,x1) => x0.shadowBlur = x1,
_1207: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1208: (x0,x1) => x0.filter = x1,
_1209: (x0,x1) => x0.shadowOffsetX = x1,
_1210: (x0,x1) => x0.shadowOffsetY = x1,
_1211: (x0,x1) => x0.shadowColor = x1,
_1213: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1215: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1216: (x0,x1) => x0.globalAlpha = x1,
_1227: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1228: x0 => x0.status,
_1230: x0 => x0.body,
_1231: x0 => x0.arrayBuffer(),
_1238: x0 => x0.read(),
_1239: x0 => x0.value,
_1240: x0 => x0.done,
_1241: x0 => x0.width,
_1242: x0 => x0.name,
_1243: x0 => x0.x,
_1244: x0 => x0.y,
_1245: x0 => x0.width,
_1246: x0 => x0.height,
_1247: x0 => x0.top,
_1248: x0 => x0.right,
_1249: x0 => x0.bottom,
_1250: x0 => x0.left,
_1251: x0 => x0.load(),
_1260: x0 => x0.height,
_1261: x0 => x0.width,
_1262: (x0,x1) => x0.value = x1,
_1264: (x0,x1) => x0.placeholder = x1,
_1265: (x0,x1) => x0.name = x1,
_1266: x0 => x0.selectionStart,
_1267: x0 => x0.selectionEnd,
_1270: x0 => x0.value,
_1271: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1275: x0 => x0.readText(),
_1276: (x0,x1) => x0.writeText(x1),
_1277: x0 => x0.altKey,
_1278: x0 => x0.code,
_1279: x0 => x0.ctrlKey,
_1280: x0 => x0.key,
_1281: x0 => x0.keyCode,
_1282: x0 => x0.location,
_1283: x0 => x0.metaKey,
_1284: x0 => x0.repeat,
_1285: x0 => x0.shiftKey,
_1286: x0 => x0.isComposing,
_1287: (x0,x1) => x0.getModifierState(x1),
_1288: x0 => x0.state,
_1290: (x0,x1) => x0.go(x1),
_1291: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1292: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1293: x0 => x0.pathname,
_1294: x0 => x0.search,
_1295: x0 => x0.hash,
_1298: x0 => x0.state,
_1299: (x0,x1) => x0.createObjectURL(x1),
_1300: (x0,x1) => x0.revokeObjectURL(x1),
_1303: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1303(f,x0,x1)),
_1305: (x0,x1,x2) => x0.observe(x1,x2),
_1308: x0 => x0.attributeName,
_1309: x0 => x0.type,
_1310: x0 => x0.matches,
_1314: x0 => x0.matches,
_1315: x0 => x0.clientX,
_1316: x0 => x0.clientY,
_1317: x0 => x0.offsetX,
_1318: x0 => x0.offsetY,
_1321: x0 => x0.button,
_1322: x0 => x0.buttons,
_1323: x0 => x0.ctrlKey,
_1324: (x0,x1) => x0.getModifierState(x1),
_1325: x0 => x0.pointerId,
_1326: x0 => x0.pointerType,
_1327: x0 => x0.pressure,
_1328: x0 => x0.tiltX,
_1329: x0 => x0.tiltY,
_1331: x0 => x0.getCoalescedEvents(),
_1332: x0 => x0.deltaX,
_1333: x0 => x0.deltaY,
_1334: x0 => x0.wheelDeltaX,
_1335: x0 => x0.wheelDeltaY,
_1336: x0 => x0.deltaMode,
_1337: x0 => x0.altKey,
_1338: x0 => x0.ctrlKey,
_1339: x0 => x0.metaKey,
_1340: x0 => x0.shiftKey,
_1341: x0 => x0.changedTouches,
_1342: x0 => x0.identifier,
_1343: x0 => x0.clientX,
_1344: x0 => x0.clientY,
_1345: x0 => x0.data,
_1346: (x0,x1) => x0.type = x1,
_1347: (x0,x1) => x0.max = x1,
_1348: (x0,x1) => x0.min = x1,
_1349: (x0,x1) => x0.value = x1,
_1350: x0 => x0.value,
_1351: x0 => x0.disabled,
_1352: (x0,x1) => x0.disabled = x1,
_1353: (x0,x1) => x0.placeholder = x1,
_1354: (x0,x1) => x0.name = x1,
_1355: (x0,x1) => x0.autocomplete = x1,
_1356: x0 => x0.selectionStart,
_1357: x0 => x0.selectionEnd,
_1361: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1368: (x0,x1) => x0.add(x1),
_1371: (x0,x1) => x0.noValidate = x1,
_1372: (x0,x1) => x0.method = x1,
_1373: (x0,x1) => x0.action = x1,
_1376: (x0,x1) => x0.height = x1,
_1377: (x0,x1) => x0.width = x1,
_1379: (x0,x1,x2) => x0.getContext(x1,x2),
_1390: x0 => x0.cssRules,
_1392: (x0,x1,x2) => x0.insertRule(x1,x2),
_1394: x0 => x0.orientation,
_1395: x0 => x0.width,
_1396: x0 => x0.height,
_1397: (x0,x1) => x0.lock(x1),
_1411: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1411(f,x0,x1)),
_1416: x0 => x0.contentRect,
_1418: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1420: (x0,x1) => x0.createScriptURL(x1),
_1422: x0 => x0.length,
_1424: (x0,x1) => x0.item(x1),
_1425: x0 => x0.length,
_1426: (x0,x1) => x0.item(x1),
_1427: x0 => x0.iterator,
_1428: x0 => x0.Segmenter,
_1429: x0 => x0.v8BreakIterator,
_1430: (x0,x1) => x0.segment(x1),
_1432: x0 => x0.done,
_1433: x0 => x0.value,
_1434: x0 => x0.index,
_1438: (x0,x1) => x0.adoptText(x1),
_1439: x0 => x0.first(),
_1440: x0 => x0.next(),
_1441: x0 => x0.current(),
_1444: () => globalThis.window.FinalizationRegistry,
_1445: (x0,x1,x2) => x0.register(x1,x2),
_1448: x0 => x0.loader,
_1449: () => globalThis._flutter,
_1450: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1451: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1451(f,x0,x1)),
_1457: () => globalThis.window.ImageDecoder,
_1458: x0 => x0.tracks,
_1462: x0 => x0.image,
_1469: x0 => x0.displayWidth,
_1470: x0 => x0.displayHeight,
_1471: x0 => x0.duration,
_1474: x0 => x0.ready,
_1475: x0 => x0.selectedTrack,
_1476: x0 => x0.repetitionCount,
_1477: x0 => x0.frameCount,
_1518: f => finalizeWrapper(f,x0 => dartInstance.exports._1518(f,x0)),
_1519: f => finalizeWrapper(f,x0 => dartInstance.exports._1519(f,x0)),
_1: () => globalThis.removeSplashFromWeb(),
_1551: (x0,x1) => x0.matchMedia(x1),
_11762: x0 => x0.matches,
_3065: () => globalThis.window,
_3142: x0 => x0.navigator,
_3533: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

