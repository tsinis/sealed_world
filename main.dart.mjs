  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _17277: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_17278: s => console.log(stringFromDartString(s)),
_17300: o => o === undefined,
_17301: o => typeof o === 'boolean',
_17302: o => typeof o === 'number',
_17304: o => typeof o === 'string',
_17307: o => o instanceof Int8Array,
_17308: o => o instanceof Uint8Array,
_17309: o => o instanceof Uint8ClampedArray,
_17310: o => o instanceof Int16Array,
_17311: o => o instanceof Uint16Array,
_17312: o => o instanceof Int32Array,
_17313: o => o instanceof Uint32Array,
_17314: o => o instanceof Float32Array,
_17315: o => o instanceof Float64Array,
_17316: o => o instanceof ArrayBuffer,
_17317: o => o instanceof DataView,
_17318: o => o instanceof Array,
_17319: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_17321: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_17322: o => o instanceof RegExp,
_17323: (l, r) => l === r,
_17324: o => o,
_17325: o => o,
_17326: o => o,
_17327: b => !!b,
_17328: o => o.length,
_17331: (o, i) => o[i],
_17332: f => f.dartFunction,
_17333: l => arrayFromDartList(Int8Array, l),
_17334: l => arrayFromDartList(Uint8Array, l),
_17335: l => arrayFromDartList(Uint8ClampedArray, l),
_17336: l => arrayFromDartList(Int16Array, l),
_17337: l => arrayFromDartList(Uint16Array, l),
_17338: l => arrayFromDartList(Int32Array, l),
_17339: l => arrayFromDartList(Uint32Array, l),
_17340: l => arrayFromDartList(Float32Array, l),
_17341: l => arrayFromDartList(Float64Array, l),
_17342: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_17343: l => arrayFromDartList(Array, l),
_17344: stringFromDartString,
_17345: stringToDartString,
_17346: () => ({}),
_17347: () => [],
_17348: () => globalThis,
_17349: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_17350: (o, p) => p in o,
_17351: (o, p) => o[p],
_17352: (o, p, v) => o[p] = v,
_17353: (o, m, a) => o[m].apply(o, a),
_17356: (p, s, f) => p.then(s, f),
_17358: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_17287: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_17288: (x0,x1) => x0.exec(x1),
_17289: (x0,x1) => x0.test(x1),
_17290: (x0,x1) => x0.exec(x1),
_17291: (x0,x1) => x0.exec(x1),
_17292: x0 => x0.pop(),
_17295: (x0,x1) => x0[x1],
_17296: (x0,x1,x2) => x0[x1] = x2,
_17355: o => String(o),
_17360: x0 => x0.index,
_17362: x0 => x0.length,
_17366: x0 => x0.flags,
_17367: x0 => x0.multiline,
_17368: x0 => x0.ignoreCase,
_17369: x0 => x0.unicode,
_17370: x0 => x0.dotAll,
_17371: (x0,x1) => x0.lastIndex = x1,
_17159: x0 => new Array(x0),
_17160: (a, i) => a.push(i),
_17161: (a, i) => a.splice(i, 1)[0],
_17164: a => a.pop(),
_17165: (a, i) => a.splice(i, 1),
_17168: (a, s, e) => a.slice(s, e),
_17171: a => a.length,
_17173: (a, i) => a[i],
_17174: (a, i, v) => a[i] = v,
_17176: (s, i) => s.charCodeAt(i),
_17177: (a, b) => a + b,
_17180: (s, t) => s.split(t),
_17181: (o, s, i) => o.substring(s, i),
_17182: s => s.toLowerCase(),
_17183: s => s.toUpperCase(),
_17184: s => s.trim(),
_17185: s => s.trimLeft(),
_17186: s => s.trimRight(),
_17188: (s, p, i) => s.indexOf(p, i),
_17189: (s, p, i) => s.lastIndexOf(p, i),
_17190: s => s.length,
_17191: (s, i) => s[i],
_17193: o => o.buffer,
_17194: o => o.byteLength,
_17195: o => o.byteOffset,
_17196: o => o.BYTES_PER_ELEMENT,
_17197: o => o.length,
_17198: (b, o) => new DataView(b, o),
_17199: (b, o, l) => new DataView(b, o, l),
_17201: (b, o, e) => b.getFloat64(o, e),
_17203: (b, o, e) => b.getInt32(o, e),
_17204: (b, o, e) => b.getBigInt64(o, e),
_17206: (b, o, e) => b.getUint16(o, e),
_17207: (b, o, e) => b.getUint32(o, e),
_17209: (b, o) => b.getUint8(o),
_17220: (o, i) => o[i],
_17221: (o, i, v) => o[i] = v,
_17222: (b, o) => new Uint8Array(b, o),
_17223: (b, o, l) => new Uint8Array(b, o, l),
_17224: (a, s, p) => new Uint8Array(a.subarray(s, p)),
_17227: (a, s, p) => new Int8Array(a.subarray(s, p)),
_17230: (a, s, p) => new Uint8ClampedArray(a.subarray(s, p)),
_17232: (a, s, p) => new Uint16Array(a.subarray(s, p)),
_17234: (a, s, p) => new Int16Array(a.subarray(s, p)),
_17236: (a, s, p) => new Uint32Array(a.subarray(s, p)),
_17237: (b, o, l) => new Int32Array(b, o, l),
_17238: (a, s, p) => new Int32Array(a.subarray(s, p)),
_17239: (o, i) => o[i],
_17240: (o, i, v) => o[i] = v,
_17243: (b, o, l) => new BigInt64Array(b, o, l),
_17244: (a, s, p) => new BigInt64Array(a.subarray(s, p)),
_17245: (o, i) => o[i],
_17246: (o, i, v) => o[i] = v,
_17247: (b, o, l) => new Float32Array(b, o, l),
_17248: (a, s, p) => new Float32Array(a.subarray(s, p)),
_17249: (b, o, l) => new Float64Array(b, o, l),
_17250: (a, s, p) => new Float64Array(a.subarray(s, p)),
_17251: (s, k, e) => s.subarray(k, e),
_17252: (t, s, i) => t.set(s, i),
_17279: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_17280: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_17372: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_17373: (handle) => clearTimeout(handle),
_17374: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_17375: (handle) => clearInterval(handle),
_17377: () => Date.now(),
_17376: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_17281: (o, t) => o instanceof t,
_17283: f => finalizeWrapper(f,x0 => dartInstance.exports._17283(f,x0)),
_17284: f => finalizeWrapper(f,x0 => dartInstance.exports._17284(f,x0)),
_17285: o => Object.keys(o),
_17259: v => stringToDartString(v.toString()),
_17260: (d, digits) => stringToDartString(d.toFixed(digits)),
_17263: (d, precision) => stringToDartString(d.toPrecision(precision)),
_17264: Date.now,
_17266: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_17267: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_17268: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_17269: () => typeof dartUseDateNowForTicks !== "undefined",
_17270: () => 1000 * performance.now(),
_17271: () => Date.now(),
_17274: () => new WeakMap(),
_17275: (map, o) => map.get(o),
_17276: (map, o, v) => map.set(o, v),
_2: f => finalizeWrapper(f,() => dartInstance.exports._2(f)),
_3: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._3(f,arguments.length,x0) }),
_4: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_5: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._5(f,x0,x1)),
_6: x0 => new Promise(x0),
_7: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._7(f,arguments.length,x0) }),
_8: x0 => ({runApp: x0}),
_9: () => ({}),
_10: (x0,x1) => x0.append(x1),
_11: x0 => x0.save(),
_12: x0 => x0.remove(),
_13: x0 => x0.restore(),
_14: x0 => x0.save(),
_15: x0 => x0.save(),
_16: x0 => x0.restore(),
_17: x0 => x0.beginPath(),
_19: x0 => x0.beginPath(),
_20: x0 => x0.beginPath(),
_21: x0 => x0.stroke(),
_27: x0 => x0.beginPath(),
_28: x0 => x0.closePath(),
_29: x0 => x0.beginPath(),
_30: x0 => x0.beginPath(),
_31: x0 => x0.closePath(),
_32: x0 => x0.beginPath(),
_33: x0 => x0.beginPath(),
_34: x0 => x0.save(),
_35: x0 => x0.restore(),
_36: x0 => x0.remove(),
_37: x0 => x0.save(),
_38: x0 => x0.restore(),
_39: x0 => x0.stroke(),
_40: x0 => x0.stroke(),
_41: (x0,x1) => x0.drawPaint(x1),
_42: (x0,x1,x2) => x0.drawPath(x1,x2),
_43: (x0,x1) => x0.drawPicture(x1),
_45: x0 => x0.restore(),
_46: x0 => ({locateFile: x0}),
_47: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_48: () => new window.flutterCanvasKit.Paint(),
_49: (x0,x1) => ({B: x0,C: x1}),
_50: (x0,x1) => ({filter: x0,mipmap: x1}),
_51: () => new window.flutterCanvasKit.Path(),
_55: () => new window.flutterCanvasKit.PictureRecorder(),
_56: () => ({}),
_57: () => ({}),
_58: () => ({}),
_59: () => ({}),
_62: () => ({}),
_63: x0 => new window.flutterCanvasKit.Font(x0),
_64: (x0,x1) => ({ambient: x0,spot: x1}),
_66: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_78: x0 => x0.remove(),
_86: (x0,x1,x2) => x0.insertBefore(x1,x2),
_88: (x0,x1) => x0.append(x1),
_89: (x0,x1) => x0.append(x1),
_92: (x0,x1) => x0.append(x1),
_96: x0 => x0.delete(),
_97: x0 => x0.delete(),
_98: x0 => x0.Make(),
_99: x0 => x0.Make(),
_100: x0 => x0.enableFontFallback(),
_101: (x0,x1) => x0.setDefaultFontManager(x1),
_103: x0 => x0.clone(),
_105: x0 => x0.makeImageAtCurrentFrame(),
_106: x0 => x0.delete(),
_107: (x0,x1) => x0.setBlendMode(x1),
_108: (x0,x1) => x0.setStyle(x1),
_109: (x0,x1) => x0.setStrokeCap(x1),
_110: (x0,x1) => x0.setStrokeJoin(x1),
_111: (x0,x1) => x0.setColorFilter(x1),
_112: (x0,x1) => x0.setShader(x1),
_113: (x0,x1) => x0.setMaskFilter(x1),
_114: (x0,x1) => x0.setShader(x1),
_117: (x0,x1) => x0.setFillType(x1),
_120: (x0,x1) => x0.setFillType(x1),
_121: (x0,x1) => x0.setFillType(x1),
_123: x0 => x0.close(),
_124: x0 => x0.reset(),
_125: x0 => x0.copy(),
_126: (x0,x1,x2,x3) => x0.MakeFromOp(x1,x2,x3),
_130: x0 => x0.finishRecordingAsPicture(),
_131: x0 => x0.delete(),
_132: (x0,x1) => x0.prepend(x1),
_133: x0 => x0.releaseResourcesAndAbandonContext(),
_134: x0 => x0.delete(),
_135: x0 => x0.stopPropagation(),
_136: x0 => x0.preventDefault(),
_137: x0 => x0.preventDefault(),
_138: x0 => x0.remove(),
_139: (x0,x1) => x0.append(x1),
_140: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_141: x0 => x0.remove(),
_142: x0 => x0.getCanvas(),
_143: x0 => x0.flush(),
_144: x0 => x0.dispose(),
_145: x0 => x0.remove(),
_146: x0 => x0.remove(),
_147: (x0,x1) => x0.ParagraphStyle(x1),
_148: (x0,x1) => x0.TextStyle(x1),
_149: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_150: x0 => x0.build(),
_151: x0 => x0.delete(),
_152: x0 => x0.pop(),
_153: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_154: (x0,x1) => x0.pushStyle(x1),
_155: x0 => x0.focus(),
_156: x0 => x0.select(),
_157: (x0,x1) => x0.append(x1),
_158: x0 => x0.remove(),
_162: x0 => x0.getReader(),
_165: (x0,x1,x2) => new FontFace(x0,x1,x2),
_170: x0 => new Blob(x0),
_171: x0 => new MutationObserver(x0),
_186: (x0,x1) => new OffscreenCanvas(x0,x1),
_188: (x0,x1,x2) => x0.addEventListener(x1,x2),
_189: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_192: x0 => new ResizeObserver(x0),
_194: x0 => ({createScriptURL: x0}),
_195: (x0,x1) => new Intl.Segmenter(x0,x1),
_196: x0 => x0.next(),
_197: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_199: x0 => x0.remove(),
_200: (x0,x1) => x0.append(x1),
_201: (x0,x1) => x0.appendChild(x1),
_202: (x0,x1) => x0.appendChild(x1),
_203: (x0,x1) => x0.append(x1),
_204: (x0,x1) => x0.append(x1),
_205: (x0,x1) => x0.append(x1),
_206: (x0,x1) => x0.appendChild(x1),
_207: x0 => x0.unlock(),
_211: (x0,x1) => x0.append(x1),
_212: (x0,x1) => x0.append(x1),
_213: x0 => x0.remove(),
_214: (x0,x1) => x0.append(x1),
_215: (x0,x1) => x0.append(x1),
_216: x0 => x0.remove(),
_217: (x0,x1) => x0.append(x1),
_218: (x0,x1) => x0.append(x1),
_221: x0 => x0.save(),
_222: x0 => x0.restore(),
_223: (x0,x1) => x0.append(x1),
_224: (x0,x1) => x0.append(x1),
_225: (x0,x1) => x0.append(x1),
_226: (x0,x1) => x0.append(x1),
_228: (x0,x1) => x0.append(x1),
_229: (x0,x1) => x0.append(x1),
_230: x0 => x0.remove(),
_231: (x0,x1) => x0.append(x1),
_232: x0 => x0.remove(),
_233: x0 => x0.remove(),
_258: (x0,x1) => x0.append(x1),
_259: (x0,x1) => x0.append(x1),
_260: (x0,x1) => x0.append(x1),
_262: (x0,x1) => x0.append(x1),
_271: x0 => x0.remove(),
_272: (x0,x1) => x0.append(x1),
_273: (x0,x1) => x0.append(x1),
_274: (x0,x1) => x0.append(x1),
_275: (x0,x1) => x0.append(x1),
_276: (x0,x1) => x0.append(x1),
_277: (x0,x1) => x0.append(x1),
_278: (x0,x1) => x0.append(x1),
_279: (x0,x1,x2) => x0.insertBefore(x1,x2),
_280: x0 => x0.close(),
_281: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_282: x0 => new window.ImageDecoder(x0),
_283: x0 => x0.close(),
_284: x0 => ({frameIndex: x0}),
_285: (x0,x1) => x0.decode(x1),
_287: x0 => new Promise(x0),
_290: x0 => x0.preventDefault(),
_291: (x0,x1) => x0.addListener(x1),
_292: (x0,x1) => x0.removeListener(x1),
_293: (x0,x1) => x0.append(x1),
_294: x0 => x0.disconnect(),
_295: (x0,x1) => x0.addListener(x1),
_296: (x0,x1) => x0.removeListener(x1),
_297: (x0,x1) => x0.append(x1),
_298: x0 => x0.remove(),
_299: (x0,x1) => x0.append(x1),
_300: x0 => x0.remove(),
_301: x0 => x0.remove(),
_305: x0 => x0.preventDefault(),
_306: (x0,x1) => x0.append(x1),
_307: x0 => x0.remove(),
_308: x0 => x0.preventDefault(),
_309: x0 => x0.preventDefault(),
_310: x0 => x0.preventDefault(),
_311: (x0,x1) => x0.append(x1),
_312: x0 => x0.remove(),
_313: x0 => x0.beginPath(),
_318: (x0,x1) => x0.append(x1),
_319: (x0,x1) => x0.append(x1),
_320: (x0,x1) => x0.append(x1),
_321: x0 => x0.remove(),
_322: x0 => x0.blur(),
_323: x0 => x0.focus(),
_324: x0 => x0.blur(),
_325: (x0,x1) => x0.append(x1),
_326: x0 => x0.remove(),
_327: (x0,x1) => x0.append(x1),
_328: x0 => x0.remove(),
_329: (x0,x1) => x0.append(x1),
_330: (x0,x1) => x0.append(x1),
_331: x0 => x0.remove(),
_332: (x0,x1) => x0.append(x1),
_333: (x0,x1) => x0.append(x1),
_334: (x0,x1,x2) => x0.insertBefore(x1,x2),
_335: x0 => x0.remove(),
_336: x0 => x0.remove(),
_337: x0 => x0.remove(),
_338: (x0,x1) => x0.append(x1),
_339: x0 => x0.remove(),
_340: x0 => x0.getBoundingClientRect(),
_341: x0 => x0.remove(),
_342: x0 => x0.blur(),
_344: (x0,x1) => x0.append(x1),
_345: x0 => x0.focus(),
_346: x0 => x0.remove(),
_347: x0 => x0.focus(),
_348: x0 => x0.focus(),
_349: x0 => x0.blur(),
_350: x0 => x0.remove(),
_351: (x0,x1) => x0.append(x1),
_352: x0 => x0.clear(),
_353: (x0,x1) => x0.add(x1),
_355: (x0,x1) => x0.appendChild(x1),
_357: x0 => x0.remove(),
_358: (x0,x1) => x0.append(x1),
_359: (x0,x1) => x0.append(x1),
_360: x0 => x0.getBoundingClientRect(),
_361: x0 => x0.getBoundingClientRect(),
_363: (x0,x1) => x0.append(x1),
_364: x0 => x0.preventDefault(),
_365: (x0,x1) => x0.append(x1),
_366: x0 => x0.remove(),
_367: (x0,x1) => x0.append(x1),
_368: (x0,x1,x2) => x0.insertBefore(x1,x2),
_369: (x0,x1) => x0.append(x1),
_370: x0 => x0.focus(),
_371: x0 => x0.focus(),
_372: x0 => x0.focus(),
_373: x0 => x0.focus(),
_374: x0 => x0.focus(),
_375: (x0,x1) => x0.append(x1),
_376: x0 => x0.focus(),
_377: x0 => x0.blur(),
_378: x0 => x0.remove(),
_380: x0 => x0.preventDefault(),
_381: x0 => x0.focus(),
_382: x0 => x0.preventDefault(),
_383: x0 => x0.preventDefault(),
_384: x0 => x0.preventDefault(),
_385: x0 => x0.focus(),
_386: x0 => x0.focus(),
_387: (x0,x1) => x0.append(x1),
_388: x0 => x0.focus(),
_389: x0 => x0.focus(),
_390: x0 => x0.focus(),
_391: x0 => x0.focus(),
_392: (x0,x1) => x0.observe(x1),
_393: x0 => x0.disconnect(),
_394: (x0,x1) => x0.appendChild(x1),
_396: x0 => x0.preventDefault(),
_398: (x0,x1) => x0.append(x1),
_400: x0 => x0.remove(),
_401: (x0,x1) => x0.append(x1),
_403: x0 => globalThis.window.flutterCanvasKit = x0,
_404: () => globalThis.window.flutterCanvasKit,
_405: x0 => x0.BlendMode,
_406: x0 => x0.PaintStyle,
_407: x0 => x0.StrokeCap,
_408: x0 => x0.StrokeJoin,
_409: x0 => x0.BlurStyle,
_410: x0 => x0.TileMode,
_411: x0 => x0.FilterMode,
_412: x0 => x0.MipmapMode,
_413: x0 => x0.FillType,
_414: x0 => x0.AlphaType,
_415: x0 => x0.ColorType,
_416: x0 => x0.PathOp,
_417: x0 => x0.ClipOp,
_420: x0 => x0.RectHeightStyle,
_421: x0 => x0.RectWidthStyle,
_423: x0 => x0.TextAlign,
_424: x0 => x0.TextHeightBehavior,
_425: x0 => x0.TextDirection,
_426: x0 => x0.FontWeight,
_428: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_429: x0 => x0.Shader,
_430: x0 => x0.MaskFilter,
_432: x0 => x0.ImageFilter,
_433: x0 => x0.Path,
_434: (x0,x1) => x0.computeTonalColors(x1),
_436: x0 => x0.ParagraphBuilder,
_442: x0 => x0.NoDecoration,
_443: x0 => x0.UnderlineDecoration,
_444: x0 => x0.OverlineDecoration,
_445: x0 => x0.LineThroughDecoration,
_446: x0 => x0.DecorationStyle,
_447: x0 => x0.TextBaseline,
_448: x0 => x0.PlaceholderAlignment,
_450: x0 => x0.TypefaceFontProvider,
_451: x0 => x0.FontCollection,
_452: x0 => x0.Typeface,
_453: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_455: (x0,x1) => x0.MakeGrContext(x1),
_456: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_460: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_461: x0 => globalThis.window.CanvasKitInit(x0),
_462: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._462(f,x0,x1)),
_463: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_472: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_478: x0 => x0.Thin,
_479: x0 => x0.ExtraLight,
_480: x0 => x0.Light,
_481: x0 => x0.Normal,
_482: x0 => x0.Medium,
_483: x0 => x0.SemiBold,
_484: x0 => x0.Bold,
_485: x0 => x0.ExtraBold,
_486: x0 => x0.ExtraBlack,
_490: x0 => x0.value,
_491: x0 => x0.RTL,
_492: x0 => x0.LTR,
_493: x0 => x0.value,
_494: x0 => x0.Left,
_495: x0 => x0.Right,
_496: x0 => x0.Center,
_497: x0 => x0.Justify,
_498: x0 => x0.Start,
_499: x0 => x0.End,
_501: x0 => x0.All,
_502: x0 => x0.DisableFirstAscent,
_503: x0 => x0.DisableLastDescent,
_504: x0 => x0.DisableAll,
_506: x0 => x0.Tight,
_507: x0 => x0.Max,
_508: x0 => x0.IncludeLineSpacingMiddle,
_509: x0 => x0.IncludeLineSpacingTop,
_510: x0 => x0.IncludeLineSpacingBottom,
_511: x0 => x0.Strut,
_513: x0 => x0.Tight,
_514: x0 => x0.Max,
_524: x0 => x0.Difference,
_525: x0 => x0.Intersect,
_527: x0 => x0.Winding,
_528: x0 => x0.EvenOdd,
_530: x0 => x0.Difference,
_531: x0 => x0.Intersect,
_532: x0 => x0.Union,
_533: x0 => x0.XOR,
_534: x0 => x0.ReverseDifference,
_536: x0 => x0.Normal,
_537: x0 => x0.Solid,
_538: x0 => x0.Outer,
_539: x0 => x0.Inner,
_541: x0 => x0.Butt,
_542: x0 => x0.Round,
_543: x0 => x0.Square,
_545: x0 => x0.Stroke,
_546: x0 => x0.Fill,
_548: x0 => x0.Clear,
_549: x0 => x0.Src,
_550: x0 => x0.Dst,
_551: x0 => x0.SrcOver,
_552: x0 => x0.DstOver,
_553: x0 => x0.SrcIn,
_554: x0 => x0.DstIn,
_555: x0 => x0.SrcOut,
_556: x0 => x0.DstOut,
_557: x0 => x0.SrcATop,
_558: x0 => x0.DstATop,
_559: x0 => x0.Xor,
_560: x0 => x0.Plus,
_561: x0 => x0.Modulate,
_562: x0 => x0.Screen,
_563: x0 => x0.Overlay,
_564: x0 => x0.Darken,
_565: x0 => x0.Lighten,
_566: x0 => x0.ColorDodge,
_567: x0 => x0.ColorBurn,
_568: x0 => x0.HardLight,
_569: x0 => x0.SoftLight,
_570: x0 => x0.Difference,
_571: x0 => x0.Exclusion,
_572: x0 => x0.Multiply,
_573: x0 => x0.Hue,
_574: x0 => x0.Saturation,
_575: x0 => x0.Color,
_576: x0 => x0.Luminosity,
_578: x0 => x0.Miter,
_579: x0 => x0.Round,
_580: x0 => x0.Bevel,
_582: x0 => x0.Clamp,
_583: x0 => x0.Repeat,
_584: x0 => x0.Mirror,
_585: x0 => x0.Decal,
_587: x0 => x0.Nearest,
_588: x0 => x0.Linear,
_590: x0 => x0.None,
_592: x0 => x0.Linear,
_595: x0 => x0.Premul,
_601: x0 => x0.RGBA_8888,
_610: x0 => x0.getFrameCount(),
_611: x0 => x0.getRepetitionCount(),
_612: x0 => x0.currentFrameDuration(),
_613: x0 => x0.decodeNextFrame(),
_621: x0 => x0.width(),
_623: x0 => x0.height(),
_628: (x0,x1) => x0.isAliasOf(x1),
_631: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_636: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_639: (x0,x1) => x0.setStrokeWidth(x1),
_644: (x0,x1) => x0.setAntiAlias(x1),
_645: (x0,x1) => x0.setColorInt(x1),
_662: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_663: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_670: () => globalThis.Float32Array,
_672: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_676: x0 => x0.toTypedArray(),
_681: (x0,x1,x2,x3) => x0.addArc(x1,x2,x3),
_682: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_683: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_686: (x0,x1,x2) => x0.addRRect(x1,x2),
_687: (x0,x1) => x0.addRect(x1),
_689: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_692: (x0,x1,x2) => x0.contains(x1,x2),
_695: x0 => x0.getBounds(),
_696: (x0,x1,x2) => x0.lineTo(x1,x2),
_697: (x0,x1,x2) => x0.moveTo(x1,x2),
_712: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_722: (x0,x1,x2) => x0.beginRecording(x1,x2),
_725: (x0,x1) => x0.clear(x1),
_727: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_728: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_729: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_734: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_736: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_740: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_741: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_743: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_744: (x0,x1,x2) => x0.drawOval(x1,x2),
_749: (x0,x1,x2) => x0.drawRRect(x1,x2),
_750: (x0,x1,x2) => x0.drawRect(x1,x2),
_752: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_754: x0 => x0.save(),
_756: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_760: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_761: (x0,x1,x2) => x0.scale(x1,x2),
_764: (x0,x1) => x0.concat(x1),
_765: (x0,x1,x2) => x0.translate(x1,x2),
_769: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_771: x0 => x0.cullRect(),
_775: (x0,x1) => x0.addText(x1),
_779: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_780: x0 => x0.getText(),
_782: (x0,x1) => x0.setWordsUtf16(x1),
_785: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_788: (x0,x1) => x0.setLineBreaksUtf16(x1),
_791: (x0,x1) => x0.textAlign = x1,
_792: (x0,x1) => x0.textDirection = x1,
_793: (x0,x1) => x0.heightMultiplier = x1,
_794: (x0,x1) => x0.textHeightBehavior = x1,
_795: (x0,x1) => x0.maxLines = x1,
_796: (x0,x1) => x0.ellipsis = x1,
_797: (x0,x1) => x0.textStyle = x1,
_798: (x0,x1) => x0.strutStyle = x1,
_799: (x0,x1) => x0.replaceTabCharacters = x1,
_800: (x0,x1) => x0.applyRoundingHack = x1,
_801: x0 => x0.Solid,
_802: x0 => x0.Double,
_803: x0 => x0.Dotted,
_804: x0 => x0.Dashed,
_805: x0 => x0.Wavy,
_807: x0 => x0.Alphabetic,
_808: x0 => x0.Ideographic,
_810: x0 => x0.Baseline,
_811: x0 => x0.AboveBaseline,
_812: x0 => x0.BelowBaseline,
_813: x0 => x0.Top,
_814: x0 => x0.Bottom,
_815: x0 => x0.Middle,
_817: (x0,x1) => x0.backgroundColor = x1,
_818: (x0,x1) => x0.color = x1,
_820: (x0,x1) => x0.decoration = x1,
_821: (x0,x1) => x0.decorationThickness = x1,
_822: (x0,x1) => x0.decorationColor = x1,
_823: (x0,x1) => x0.decorationStyle = x1,
_824: (x0,x1) => x0.textBaseline = x1,
_825: (x0,x1) => x0.fontSize = x1,
_826: (x0,x1) => x0.letterSpacing = x1,
_827: (x0,x1) => x0.wordSpacing = x1,
_828: (x0,x1) => x0.heightMultiplier = x1,
_829: (x0,x1) => x0.halfLeading = x1,
_831: (x0,x1) => x0.fontFamilies = x1,
_832: (x0,x1) => x0.fontStyle = x1,
_835: (x0,x1) => x0.fontVariations = x1,
_836: (x0,x1) => x0.fontFamilies = x1,
_837: (x0,x1) => x0.fontStyle = x1,
_838: (x0,x1) => x0.fontSize = x1,
_839: (x0,x1) => x0.heightMultiplier = x1,
_840: (x0,x1) => x0.halfLeading = x1,
_842: (x0,x1) => x0.strutEnabled = x1,
_843: (x0,x1) => x0.forceStrutHeight = x1,
_844: (x0,x1) => x0.weight = x1,
_851: (x0,x1) => x0.axis = x1,
_852: (x0,x1) => x0.value = x1,
_853: (x0,x1) => x0.getGlyphIDs(x1),
_854: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_858: (x0,x1,x2) => x0.registerFont(x1,x2),
_864: x0 => x0.startIndex,
_865: x0 => x0.endIndex,
_868: x0 => x0.isHardBreak,
_869: x0 => x0.ascent,
_870: x0 => x0.descent,
_872: x0 => x0.width,
_873: x0 => x0.left,
_874: x0 => x0.baseline,
_875: x0 => x0.lineNumber,
_876: x0 => x0.rect,
_878: x0 => x0.dir,
_880: x0 => x0.getAlphabeticBaseline(),
_881: x0 => x0.didExceedMaxLines(),
_882: x0 => x0.getHeight(),
_883: x0 => x0.getIdeographicBaseline(),
_884: x0 => x0.getLineMetrics(),
_885: x0 => x0.getLongestLine(),
_886: x0 => x0.getMaxIntrinsicWidth(),
_887: x0 => x0.getMinIntrinsicWidth(),
_888: x0 => x0.getMaxWidth(),
_890: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_891: x0 => x0.getRectsForPlaceholders(),
_892: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_893: (x0,x1) => x0.getWordBoundary(x1),
_894: (x0,x1) => x0.layout(x1),
_896: x0 => x0.affinity,
_897: x0 => x0.pos,
_898: x0 => x0.start,
_899: x0 => x0.end,
_901: x0 => x0.ambient,
_902: x0 => x0.spot,
_907: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_909: x0 => x0.isDeleted(),
_934: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_935: (x0,x1) => x0.makeShader(x1),
_937: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_938: x0 => x0.remove(),
_939: x0 => x0.remove(),
_940: (x0,x1) => x0.appendChild(x1),
_943: () => globalThis.window.flutterConfiguration,
_944: x0 => x0.assetBase,
_945: x0 => x0.canvasKitBaseUrl,
_946: x0 => x0.canvasKitVariant,
_947: x0 => x0.canvasKitForceCpuOnly,
_948: x0 => x0.canvasKitMaximumSurfaces,
_949: x0 => x0.debugShowSemanticsNodes,
_950: x0 => x0.hostElement,
_951: x0 => x0.nonce,
_952: x0 => x0.renderer,
_953: x0 => x0.useColorEmoji,
_954: () => globalThis.window.flutterWebRenderer,
_957: x0 => x0.console,
_958: x0 => x0.devicePixelRatio,
_959: x0 => x0.document,
_960: x0 => x0.history,
_961: x0 => x0.innerHeight,
_962: x0 => x0.innerWidth,
_963: x0 => x0.location,
_964: x0 => x0.navigator,
_965: x0 => x0.visualViewport,
_966: x0 => x0.performance,
_967: (x0,x1) => x0.fetch(x1),
_969: x0 => x0.URL,
_971: (x0,x1) => x0.dispatchEvent(x1),
_972: (x0,x1) => x0.matchMedia(x1),
_973: (x0,x1) => x0.getComputedStyle(x1),
_975: x0 => x0.screen,
_976: (x0,x1) => x0.requestAnimationFrame(x1),
_977: f => finalizeWrapper(f,x0 => dartInstance.exports._977(f,x0)),
_980: x0 => x0.trustedTypes,
_981: (x0,x1) => x0.warn(x1),
_982: (x0,x1) => x0.error(x1),
_983: (x0,x1) => x0.debug(x1),
_984: () => globalThis.window,
_985: () => globalThis.Intl,
_986: () => globalThis.Symbol,
_987: x0 => x0.clipboard,
_988: x0 => x0.maxTouchPoints,
_989: x0 => x0.vendor,
_990: x0 => x0.language,
_991: x0 => x0.platform,
_992: x0 => x0.userAgent,
_993: x0 => x0.languages,
_994: x0 => x0.documentElement,
_995: (x0,x1) => x0.querySelector(x1),
_997: (x0,x1) => x0.createElement(x1),
_1000: (x0,x1) => x0.execCommand(x1),
_1002: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1003: (x0,x1) => x0.createTextNode(x1),
_1005: (x0,x1) => x0.createEvent(x1),
_1008: x0 => x0.fonts,
_1009: x0 => x0.head,
_1010: x0 => x0.body,
_1011: (x0,x1) => x0.title = x1,
_1015: x0 => x0.activeElement,
_1017: () => globalThis.document,
_1018: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1019: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1020: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1021: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1022: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1025: f => finalizeWrapper(f,x0 => dartInstance.exports._1025(f,x0)),
_1026: x0 => x0.target,
_1028: x0 => x0.timeStamp,
_1029: x0 => x0.type,
_1036: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1041: x0 => x0.firstChild,
_1044: x0 => x0.lastChild,
_1045: (x0,x1) => x0.appendChild(x1),
_1046: x0 => x0.parentElement,
_1048: x0 => x0.parentNode,
_1051: (x0,x1) => x0.removeChild(x1),
_1052: (x0,x1) => x0.removeChild(x1),
_1053: x0 => x0.isConnected,
_1054: (x0,x1) => x0.textContent = x1,
_1055: (x0,x1) => x0.cloneNode(x1),
_1056: (x0,x1) => x0.contains(x1),
_1060: x0 => x0.children,
_1062: x0 => x0.clientHeight,
_1063: x0 => x0.clientWidth,
_1064: x0 => x0.id,
_1065: (x0,x1) => x0.id = x1,
_1068: (x0,x1) => x0.spellcheck = x1,
_1069: x0 => x0.tagName,
_1070: x0 => x0.style,
_1071: (x0,x1) => x0.append(x1),
_1072: (x0,x1) => x0.getAttribute(x1),
_1073: x0 => x0.getBoundingClientRect(),
_1076: (x0,x1) => x0.querySelectorAll(x1),
_1077: x0 => x0.remove(),
_1078: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1079: (x0,x1) => x0.removeAttribute(x1),
_1080: (x0,x1) => x0.tabIndex = x1,
_1083: x0 => x0.scrollTop,
_1084: (x0,x1) => x0.scrollTop = x1,
_1085: x0 => x0.scrollLeft,
_1086: (x0,x1) => x0.scrollLeft = x1,
_1087: x0 => x0.classList,
_1088: (x0,x1) => x0.className = x1,
_1093: (x0,x1) => x0.getElementsByClassName(x1),
_1094: x0 => x0.click(),
_1095: (x0,x1) => x0.hasAttribute(x1),
_1098: (x0,x1) => x0.attachShadow(x1),
_1101: (x0,x1) => x0.getPropertyValue(x1),
_1103: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1105: (x0,x1) => x0.removeProperty(x1),
_1107: x0 => x0.offsetLeft,
_1108: x0 => x0.offsetTop,
_1109: x0 => x0.offsetParent,
_1111: (x0,x1) => x0.name = x1,
_1112: x0 => x0.content,
_1113: (x0,x1) => x0.content = x1,
_1116: x0 => x0.src,
_1117: (x0,x1) => x0.src = x1,
_1118: x0 => x0.naturalWidth,
_1119: x0 => x0.naturalHeight,
_1122: x0 => x0.decode(),
_1123: (x0,x1) => x0.src = x1,
_1124: (x0,x1) => x0.nonce = x1,
_1126: (x0,x1) => x0.nonce = x1,
_1128: x0 => x0.sheet,
_1131: x0 => x0.now(),
_1133: (x0,x1) => x0.width = x1,
_1135: (x0,x1) => x0.height = x1,
_1137: (x0,x1) => x0.toDataURL(x1),
_1138: (x0,x1) => x0.getContext(x1),
_1139: (x0,x1,x2) => x0.getContext(x1,x2),
_1140: (x0,x1) => x0.getParameter(x1),
_1141: x0 => x0.SAMPLES,
_1142: x0 => x0.STENCIL_BITS,
_1144: x0 => x0.fillStyle,
_1145: (x0,x1) => x0.fillStyle = x1,
_1146: x0 => x0.font,
_1147: (x0,x1) => x0.font = x1,
_1149: (x0,x1) => x0.direction = x1,
_1150: (x0,x1) => x0.lineWidth = x1,
_1151: (x0,x1) => x0.strokeStyle = x1,
_1152: x0 => x0.strokeStyle,
_1156: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1157: (x0,x1,x2) => x0.createPattern(x1,x2),
_1161: x0 => x0.fill(),
_1162: (x0,x1) => x0.fill(x1),
_1164: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1166: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1170: (x0,x1,x2) => x0.lineTo(x1,x2),
_1172: (x0,x1) => x0.measureText(x1),
_1173: (x0,x1,x2) => x0.moveTo(x1,x2),
_1174: x0 => x0.save(),
_1176: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1178: x0 => x0.restore(),
_1179: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1181: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1182: x0 => x0.clip(),
_1183: (x0,x1) => x0.clip(x1),
_1184: (x0,x1,x2) => x0.scale(x1,x2),
_1185: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1186: (x0,x1,x2) => x0.translate(x1,x2),
_1187: (x0,x1) => x0.rotate(x1),
_1189: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1191: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1192: (x0,x1) => x0.globalCompositeOperation = x1,
_1193: (x0,x1) => x0.lineCap = x1,
_1194: (x0,x1) => x0.lineJoin = x1,
_1195: (x0,x1) => x0.shadowBlur = x1,
_1197: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1198: (x0,x1) => x0.filter = x1,
_1199: (x0,x1) => x0.shadowOffsetX = x1,
_1200: (x0,x1) => x0.shadowOffsetY = x1,
_1201: (x0,x1) => x0.shadowColor = x1,
_1203: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1205: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1206: (x0,x1) => x0.globalAlpha = x1,
_1209: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1210: x0 => x0.status,
_1212: x0 => x0.body,
_1214: x0 => x0.arrayBuffer(),
_1220: x0 => x0.read(),
_1221: x0 => x0.value,
_1222: x0 => x0.done,
_1223: x0 => x0.width,
_1224: x0 => x0.name,
_1225: x0 => x0.x,
_1226: x0 => x0.y,
_1227: x0 => x0.width,
_1228: x0 => x0.height,
_1229: x0 => x0.top,
_1230: x0 => x0.right,
_1231: x0 => x0.bottom,
_1232: x0 => x0.left,
_1233: x0 => x0.load(),
_1241: x0 => x0.height,
_1242: x0 => x0.width,
_1243: (x0,x1) => x0.value = x1,
_1245: (x0,x1) => x0.placeholder = x1,
_1246: (x0,x1) => x0.name = x1,
_1247: x0 => x0.selectionStart,
_1248: x0 => x0.selectionEnd,
_1251: x0 => x0.value,
_1253: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1258: x0 => x0.readText(),
_1259: (x0,x1) => x0.writeText(x1),
_1260: x0 => x0.altKey,
_1261: x0 => x0.code,
_1262: x0 => x0.ctrlKey,
_1263: x0 => x0.key,
_1264: x0 => x0.keyCode,
_1265: x0 => x0.location,
_1266: x0 => x0.metaKey,
_1267: x0 => x0.repeat,
_1268: x0 => x0.shiftKey,
_1269: x0 => x0.isComposing,
_1270: (x0,x1) => x0.getModifierState(x1),
_1271: x0 => x0.state,
_1273: (x0,x1) => x0.go(x1),
_1275: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1276: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1277: x0 => x0.pathname,
_1278: x0 => x0.search,
_1279: x0 => x0.hash,
_1282: x0 => x0.state,
_1283: (x0,x1) => x0.createObjectURL(x1),
_1285: (x0,x1) => x0.revokeObjectURL(x1),
_1286: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1286(f,x0,x1)),
_1288: (x0,x1,x2) => x0.observe(x1,x2),
_1291: x0 => x0.attributeName,
_1292: x0 => x0.type,
_1293: x0 => x0.matches,
_1298: x0 => x0.matches,
_1299: x0 => x0.clientX,
_1300: x0 => x0.clientY,
_1301: x0 => x0.offsetX,
_1302: x0 => x0.offsetY,
_1305: x0 => x0.button,
_1306: x0 => x0.buttons,
_1307: x0 => x0.ctrlKey,
_1309: (x0,x1) => x0.getModifierState(x1),
_1310: x0 => x0.pointerId,
_1311: x0 => x0.pointerType,
_1312: x0 => x0.pressure,
_1313: x0 => x0.tiltX,
_1314: x0 => x0.tiltY,
_1316: x0 => x0.getCoalescedEvents(),
_1317: x0 => x0.deltaX,
_1318: x0 => x0.deltaY,
_1319: x0 => x0.wheelDeltaX,
_1320: x0 => x0.wheelDeltaY,
_1321: x0 => x0.deltaMode,
_1322: x0 => x0.altKey,
_1323: x0 => x0.ctrlKey,
_1324: x0 => x0.metaKey,
_1325: x0 => x0.shiftKey,
_1326: x0 => x0.changedTouches,
_1327: x0 => x0.identifier,
_1328: x0 => x0.clientX,
_1329: x0 => x0.clientY,
_1330: x0 => x0.data,
_1331: (x0,x1) => x0.type = x1,
_1332: (x0,x1) => x0.max = x1,
_1333: (x0,x1) => x0.min = x1,
_1334: (x0,x1) => x0.value = x1,
_1335: x0 => x0.value,
_1336: x0 => x0.disabled,
_1337: (x0,x1) => x0.disabled = x1,
_1338: (x0,x1) => x0.placeholder = x1,
_1339: (x0,x1) => x0.name = x1,
_1340: (x0,x1) => x0.autocomplete = x1,
_1341: x0 => x0.selectionStart,
_1342: x0 => x0.selectionEnd,
_1346: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1353: (x0,x1) => x0.add(x1),
_1356: (x0,x1) => x0.noValidate = x1,
_1357: (x0,x1) => x0.method = x1,
_1358: (x0,x1) => x0.action = x1,
_1361: (x0,x1) => x0.height = x1,
_1362: (x0,x1) => x0.width = x1,
_1364: (x0,x1,x2) => x0.getContext(x1,x2),
_1375: x0 => x0.cssRules,
_1377: (x0,x1,x2) => x0.insertRule(x1,x2),
_1379: x0 => x0.orientation,
_1382: (x0,x1) => x0.lock(x1),
_1396: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1396(f,x0,x1)),
_1401: x0 => x0.contentRect,
_1403: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1405: (x0,x1) => x0.createScriptURL(x1),
_1407: x0 => x0.length,
_1409: (x0,x1) => x0.item(x1),
_1410: x0 => x0.length,
_1411: (x0,x1) => x0.item(x1),
_1412: x0 => x0.iterator,
_1413: x0 => x0.Segmenter,
_1414: x0 => x0.v8BreakIterator,
_1415: (x0,x1) => x0.segment(x1),
_1417: x0 => x0.done,
_1418: x0 => x0.value,
_1419: x0 => x0.index,
_1423: (x0,x1) => x0.adoptText(x1),
_1424: x0 => x0.first(),
_1425: x0 => x0.next(),
_1426: x0 => x0.current(),
_1429: () => globalThis.window.FinalizationRegistry,
_1430: (x0,x1,x2) => x0.register(x1,x2),
_1433: x0 => x0.loader,
_1434: () => globalThis._flutter,
_1435: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1436: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1436(f,x0,x1)),
_1441: () => globalThis.window.ImageDecoder,
_1442: x0 => x0.tracks,
_1446: x0 => x0.image,
_1454: x0 => x0.displayWidth,
_1455: x0 => x0.displayHeight,
_1456: x0 => x0.duration,
_1459: x0 => x0.ready,
_1460: x0 => x0.selectedTrack,
_1461: x0 => x0.repetitionCount,
_1462: x0 => x0.frameCount,
_1503: f => finalizeWrapper(f,x0 => dartInstance.exports._1503(f,x0)),
_1504: f => finalizeWrapper(f,x0 => dartInstance.exports._1504(f,x0)),
_1: () => globalThis.removeSplashFromWeb(),
_1531: (x0,x1) => x0.matchMedia(x1),
_11748: x0 => x0.matches,
_3051: () => globalThis.window,
_3128: x0 => x0.navigator,
_3519: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

